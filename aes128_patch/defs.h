void __OpenSSLDie(const char *function,int line);
#define __OPENSSL_assert(e)	(void)((e) ? 0 : (__OpenSSLDie(__FUNCTION__, __LINE__),1))

#ifdef S75v52
#define malloc (*(void*(*)(unsigned int size))0xA0094B5C)
#define memcpy (*(void*(*)(void *dest,const void *source,int cnt))0xA0FC4A10)
#define mfree (*(void(*)(void *))0xA0094948)
#define ClearMemory (*(void(*)(void *dest,int n))0xA0FC496C)
#define snprintf (*(int(*)(char *buf, int len, const char *str, ...))0xA0FC3731)
#define EVP_add_cipher (*(int(*)(const EVP_CIPHER *c))0xA0E8F2B9)
#define EVP_CIPHER_get_asn1_iv (*(int(*)(EVP_CIPHER_CTX *c, ASN1_TYPE *type))0xA0E8F143)
#define EVP_CIPHER_set_asn1_iv (*(int(*)(EVP_CIPHER_CTX *c, ASN1_TYPE *type))0xA0E8F215)
#define EVP_get_cipherbyname  (*(EVP_CIPHER*(*)(const char *name))0xA0E8F33B)
#define OBJ_NAME_add  (*(int(*)(const char *name, int type, const char *data)) 0xA0E8F769)
#define EVP_EncryptInit  (*(void(*)(EVP_CIPHER_CTX *ctx,const EVP_CIPHER *cipher,unsigned char *key,unsigned char *iv))0xA0E8EC11)
#define EVP_DecryptInit  (*(void(*)(EVP_CIPHER_CTX *ctx,const EVP_CIPHER *cipher,unsigned char *key,unsigned char *iv))0xA0E8ECEF)
#define ssl_cipher_methods ((const EVP_CIPHER**)0xA8E8FC28)
#define ssl_digest_methods ((const EVP_MD**)0xA8E8FAC4)
#define ssl_comp_methods ((STACK_OF(SSL_COMP)*)0xA8E8FABC)
#define sk_find  (*(int(*)(STACK *st, char *data))0xA0F88D95)
#define sk_value (*(char*(*)(STACK *st, int i))0xA0F88D8D) 
#define EVP_enc_null  (*(const EVP_CIPHER*(*)(void))0xA0E8F60F)
#define EVP_CIPHER_get_asn1_iv (*(int(*)(EVP_CIPHER_CTX *c, ASN1_TYPE *type))0xA0E8F143)
#define EVP_CIPHER_set_asn1_iv (*(int(*)(EVP_CIPHER_CTX *c, ASN1_TYPE *type))0xA0E8F215)
#define StoreErrInfoAndAbort  (*(void (*)(int code,const char *module_name,int type,int unk3))0xA01CEE50)
#define StoreErrString  (*(void (*)(const char *))0xA01CED1C)
#endif

#ifdef EL71v45
#define malloc (*(void*(*)(unsigned int size))0xA0092F51)
#define memcpy (*(void*(*)(void *dest,const void *source,int cnt))0xA0FBC448)
#define mfree (*(void(*)(void *))0xA0092F93)
#define ClearMemory (*(void(*)(void *dest,int n))0xA0FBC3EC)
#define sprintf (*(int(*)(char *buf, const char *str, ...))0xA0FBB1A5)
#define EVP_add_cipher (*(int(*)(const EVP_CIPHER *c))0xA0E80289)
#define EVP_CIPHER_get_asn1_iv (*(int(*)(EVP_CIPHER_CTX *c, ASN1_TYPE *type))0xA0E80113)
#define EVP_CIPHER_set_asn1_iv (*(int(*)(EVP_CIPHER_CTX *c, ASN1_TYPE *type))0xA0E801E5)
#define EVP_get_cipherbyname  (*(EVP_CIPHER*(*)(const char *name))0xA0E8030B)
#define OBJ_NAME_add  (*(int(*)(const char *name, int type, const char *data)) 0xA0E80739)
#define EVP_EncryptInit  (*(void(*)(EVP_CIPHER_CTX *ctx,const EVP_CIPHER *cipher,unsigned char *key,unsigned char *iv))0xA0E7FBE1)
#define EVP_DecryptInit  (*(void(*)(EVP_CIPHER_CTX *ctx,const EVP_CIPHER *cipher,unsigned char *key,unsigned char *iv))0xA0E7FCBF)
#define ssl_cipher_methods ((const EVP_CIPHER**)0xA8F56CC4)
#define ssl_digest_methods ((const EVP_MD**)0xA8F56B60)
#define ssl_comp_methods ((STACK_OF(SSL_COMP)*)0xA8F56B58)
#define sk_find  (*(int(*)(STACK *st, char *data))0x)
#define sk_value (*(char*(*)(STACK *st, int i))0x) 
#define EVP_enc_null  (*(const EVP_CIPHER*(*)(void))0x)
#define StoreErrInfoAndAbort  (*(void (*)(int code,const char *module_name,int type,int unk3))0x)
#define StoreErrString  (*(void (*)(const char *))0x)
#endif
