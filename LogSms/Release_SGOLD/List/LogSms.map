################################################################################
#                                                                              #
#      IAR Universal Linker V4.60I/386                                         #
#                                                                              #
#           Link time     =  13/Oct/2014  21:25:05                             #
#           Target CPU    =  ARM                                               #
#           List file     =  \\ALFI-PC\Siemens\IAR\ARM\alfinant\LogSms\Release #
#                            _SGOLD\List\LogSms.map                            #
#           Output file 1 =  \\ALFI-PC\Siemens\IAR\ARM\alfinant\LogSms\Release #
#                            _SGOLD\Exe\LogSms.elf                             #
#                            Format: elf, variant: -ynpra                      #
#           Command line  =  \\ALFI-PC\Siemens\IAR\ARM\alfinant\LogSms\Release #
#                            _SGOLD\Obj\conf_loader.r79                        #
#                            \\ALFI-PC\Siemens\IAR\ARM\alfinant\LogSms\Release #
#                            _SGOLD\Obj\config.r79                             #
#                            \\ALFI-PC\Siemens\IAR\ARM\alfinant\LogSms\Release #
#                            _SGOLD\Obj\func.r79                               #
#                            \\ALFI-PC\Siemens\IAR\ARM\alfinant\LogSms\Release #
#                            _SGOLD\Obj\main.r79                               #
#                            \\ALFI-PC\Siemens\IAR\ARM\alfinant\LogSms\Release #
#                            _SGOLD\Obj\strings.r79                            #
#                            -o                                                #
#                            \\ALFI-PC\Siemens\IAR\ARM\alfinant\LogSms\Release #
#                            _SGOLD\Exe\LogSms.elf                             #
#                            -Felf -l                                          #
#                            \\ALFI-PC\Siemens\IAR\ARM\alfinant\LogSms\Release #
#                            _SGOLD\List\LogSms.map                            #
#                            -xmsno -f                                         #
#                            \\ALFI-PC\Siemens\IAR\ARM\alfinant\LogSms\test.xc #
#                            l                                                 #
#                            (-carm -V(CODE)CODE_AREA,12                       #
#                            -V(DATA)DATA_AREA,12                              #
#                            -Z(CODE_AREA)ELFBEGIN,DATA_ID,START,CODE,DATA_C,I #
#                            NITTAB,DATA_Z,DATA_N,CONFIG_C=0-FFFFFFFF          #
#                            -Z(DATA_AREA)DATA_I=0-FFFFFFFF) -ynpra -s main    #
#                                                                              #
#                        Copyright 1987-2007 IAR Systems. All rights reserved. #
################################################################################





                ****************************************
                *                                      *
                *           CROSS REFERENCE            *
                *                                      *
                ****************************************

       Program entry at : CODE_AREA 000005F4  Relocatable, from module : main




                ****************************************
                *                                      *
                *            RUNTIME MODEL             *
                *                                      *
                ****************************************

  StackAlign4  = USED
  __cpu_mode   = __pcs__interwork
  __data_model = absolute
  __endian     = little
  __rt_version = 6



                ****************************************
                *                                      *
                *              MODULE MAP              *
                *                                      *
                ****************************************


  DEFINED ABSOLUTE ENTRIES
    *************************************************************************

  DEFINED ABSOLUTE ENTRIES
    *************************************************************************

  FILE NAME : \\ALFI-PC\Siemens\IAR\ARM\alfinant\LogSms\Release_SGOLD\Obj\conf_loader.r79
  PROGRAM MODULE, NAME : conf_loader

  SEGMENTS IN THE MODULE
  ======================
DATA_I
  Relative segment, address: DATA_AREA 00000000 - 00000003 (0x4 bytes), align: 2
  Segment part 4.             Intra module refs:   LoadConfigData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           successed_config_filename
                                   00000000        maincsm_onmessage (main)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000004 - 00000107 (0x104 bytes), align: 2
  Segment part 7.             Intra module refs:   InitConfig
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LoadConfigData          00000004 
               stack 1 = 00000000 ( 00000024 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000108 - 0000012F (0x28 bytes), align: 2
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           InitConfig              00000108        main (main)
                                                   maincsm_onmessage (main)
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
DATA_ID
  Relative segment, address: CODE_AREA 00000000 - 00000003 (0x4 bytes), align: 2
  Segment part 5.             Intra module refs:   successed_config_filename
    -------------------------------------------------------------------------
INITTAB
  Relative segment, address: CODE_AREA 00000738 - 00000743 (0xc bytes), align: 2
  Segment part 11. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?init?tab?DATA_I        00000738 
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 00000734 - 00000734 (0x1 bytes), align: 0
  Segment part 2.             Intra module refs:   Segment part 5
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 000006AC - 000006DB (0x30 bytes), align: 2
  Segment part 3.             Intra module refs:   InitConfig

    *************************************************************************

  FILE NAME : \\ALFI-PC\Siemens\IAR\ARM\alfinant\LogSms\Release_SGOLD\Obj\config.r79
  PROGRAM MODULE, NAME : config

  SEGMENTS IN THE MODULE
  ======================
CONFIG_C
  Relative segment, address: CODE_AREA 00000874 - 0000089F (0x2c bytes), align: 2
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr0                 00000874        LoadConfigData (conf_loader)
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 000008A0 - 0000091F (0x80 bytes), align: 2
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LOGFILE                 000008A0        WriteLog (main)

    *************************************************************************

  FILE NAME : \\ALFI-PC\Siemens\IAR\ARM\alfinant\LogSms\Release_SGOLD\Obj\func.r79
  PROGRAM MODULE, NAME : func

  SEGMENTS IN THE MODULE
  ======================
ELFBEGIN
  Relative segment, address: CODE_AREA 00000000, align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ELF_BEGIN               00000000        ElfKiller (main)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000130 - 00000137 (0x8 bytes), align: 2
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           kill_data               00000130        ElfKiller (main)
           seqkill                 00000134 

    *************************************************************************

  FILE NAME : \\ALFI-PC\Siemens\IAR\ARM\alfinant\LogSms\Release_SGOLD\Obj\main.r79
  PROGRAM MODULE, NAME : main

  SEGMENTS IN THE MODULE
  ======================
DATA_Z
  Relative segment, address: CODE_AREA 00000750 - 00000757 (0x8 bytes), align: 2
  Segment part 5.             Intra module refs:   Segment part 17
                                                   my_emsal_process
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gproc                   00000750 
           old_sms_rlt_sm          00000754 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000138 - 0000045B (0x324 bytes), align: 2
  Segment part 10.            Intra module refs:   my_emsal_process
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UnpackSMS               00000138 
               stack 1 = 00000000 ( 00000024 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000045C - 000004B7 (0x5c bytes), align: 2
  Segment part 12.            Intra module refs:   SetSMSListener
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           my_emsal_process        0000045C 
               stack 1 = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000004B8 - 000004E7 (0x30 bytes), align: 2
  Segment part 14.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SetSMSListener          000004B8 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000004E8 - 000004FB (0x14 bytes), align: 2
  Segment part 16.            Intra module refs:   maincsm_onclose
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DeleteSMSListener       000004E8 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000004FC - 000004FF (0x4 bytes), align: 2
  Segment part 17.            Intra module refs:   DeleteSMSListener
                                                   SetSMSListener
    -------------------------------------------------------------------------
DATA_Z
  Relative segment, address: CODE_AREA 00000758 - 0000075B (0x4 bytes), align: 2
  Segment part 7.             Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           maincsm_id              00000758 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000500 - 0000054F (0x50 bytes), align: 2
  Segment part 19.            Intra module refs:   Segment part 4
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           maincsm_onmessage       00000500 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000550 - 00000553 (0x4 bytes), align: 2
  Segment part 21.            Intra module refs:   Segment part 4
           LOCAL                   ADDRESS         
           =====                   =======         
           maincsm_oncreate        00000550 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000554 - 0000056F (0x1c bytes), align: 2
  Segment part 23.            Intra module refs:   maincsm_onclose
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ElfKiller               00000554 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000570 - 00000587 (0x18 bytes), align: 2
  Segment part 25.            Intra module refs:   Segment part 4
           LOCAL                   ADDRESS         
           =====                   =======         
           maincsm_onclose         00000570 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
DATA_Z
  Relative segment, address: CODE_AREA 0000075C - 00000873 (0x118 bytes), align: 2
  Segment part 8.             Intra module refs:   Segment part 4
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 000006DC - 000006E3 (0x8 bytes), align: 2
  Segment part 2.             Intra module refs:   UnpackSMS
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 000006E4 - 000006FB (0x18 bytes), align: 2
  Segment part 3.             Intra module refs:   maincsm_onmessage
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 000006FC - 0000072F (0x34 bytes), align: 2
  Segment part 4.             Intra module refs:   main
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 00000730 - 00000733 (0x4 bytes), align: 2
  Segment part 6.             Intra module refs:   Segment part 4
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           minus11                 00000730 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000588 - 000005F3 (0x6c bytes), align: 2
  Segment part 27.            Intra module refs:   my_emsal_process
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           WriteLog                00000588 
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000005F4 - 0000067B (0x88 bytes), align: 2
  Segment part 29.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           main                    000005F4        Absolute parts (?ABS_ENTRY_MOD)
               stack 1 = 00000000 ( 00000038 )
    -------------------------------------------------------------------------
INITTAB
  Relative segment, address: CODE_AREA 00000744 - 0000074F (0xc bytes), align: 2
  Segment part 33. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?init?tab?DATA_Z        00000744 

    *************************************************************************

  FILE NAME : \\ALFI-PC\Siemens\IAR\ARM\alfinant\LogSms\Release_SGOLD\Obj\strings.r79
  PROGRAM MODULE, NAME : strings

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE_AREA 0000067C - 000006AB (0x30 bytes), align: 2
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           strcmp_nocase           0000067C        maincsm_onmessage (main)




                ****************************************
                *                                      *
                *            MODULE SUMMARY            *
                *                                      *
                ****************************************

Module        CODE   DATA
------        ----   ----
             (Rel)  (Rel)
conf_loader    365      4
config         172
func             8
main         1 740
strings         48
------       -----      -
Total:       2 333      4


                ****************************************
                *                                      *
                *              CALL GRAPH              *
                *                                      *
                ****************************************

  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  my_emsal_process
      | Stack used (prev) :  00000000
      | + function block  :  00000014
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000014


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  maincsm_onmessage
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  maincsm_oncreate
      | Stack used (prev) :  00000000
      | + function block  :  00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000000


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  ElfKiller
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  maincsm_onclose
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  WriteLog
      | Stack used (prev) :  00000000
      | + function block  :  00000010
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000010


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000014
  01  LoadConfigData
      | Stack used (prev) :  00000014
      | + function block  :  00000024
  <-Sub-tree of type: Function tree
    | Stack used          :  00000038


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000038
  01  InitConfig
      | Stack used (prev) :  00000038
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00000040


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000040
  01  UnpackSMS
      | Stack used (prev) :  00000040
      | + function block  :  00000024
  <-Sub-tree of type: Function tree
    | Stack used          :  00000064


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000064
  01  SetSMSListener
      | Stack used (prev) :  00000064
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  0000006C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000006C
  01  DeleteSMSListener
      | Stack used (prev) :  0000006C
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000006C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000006C
  01  main
      | Stack used (prev) :  0000006C
      | + function block  :  00000038
  <-Sub-tree of type: Function tree
    | Stack used          :  000000A4


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000000A4
  01  strcmp_nocase
      | Stack used (prev) :  000000A4
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000000A4




                ****************************************
                *                                      *
                *      SEGMENTS IN ADDRESS ORDER       *
                *                                      *
                ****************************************


SEGMENT              SPACE    START ADDRESS   END ADDRESS     SIZE  TYPE  ALIGN
=======              =====    =============   ===========     ====  ====  =====
ELFBEGIN             CODE_AREA           00000000                     rel    0
DATA_ID              CODE_AREA      00000000 - 00000003           4   rel    2
START                CODE_AREA           00000004                     dse    0
CODE                 CODE_AREA      00000004 - 000006AB         6A8   rel    2
DATA_C               CODE_AREA      000006AC - 00000734          89   rel    2
INITTAB              CODE_AREA      00000738 - 0000074F          18   rel    2
DATA_Z               CODE_AREA      00000750 - 00000873         124   rel    2
DATA_N               CODE_AREA           00000874                     dse    0
CONFIG_C             CODE_AREA      00000874 - 0000091F          AC   rel    2
DATA_I               DATA_AREA      00000000 - 00000003           4   rel    2

                ****************************************
                *                                      *
                *        END OF CROSS REFERENCE        *
                *                                      *
                ****************************************

 2 333 bytes of CODE memory
     4 bytes of DATA memory

Errors: none
Warnings: none

