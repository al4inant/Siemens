################################################################################
#                                                                              #
#      IAR Universal Linker V4.60I/386                                         #
#                                                                              #
#           Link time     =  13/Oct/2014  21:26:14                             #
#           Target CPU    =  ARM                                               #
#           List file     =  \\ALFI-PC\Siemens\IAR\ARM\alfinant\LogSms\Release #
#                            _NSG\List\LogSms.map                              #
#           Output file 1 =  \\ALFI-PC\Siemens\IAR\ARM\alfinant\LogSms\Release #
#                            _NSG\Exe\LogSms.elf                               #
#                            Format: elf, variant: -ynpra                      #
#           Command line  =  \\ALFI-PC\Siemens\IAR\ARM\alfinant\LogSms\Release #
#                            _NSG\Obj\conf_loader.r79                          #
#                            \\ALFI-PC\Siemens\IAR\ARM\alfinant\LogSms\Release #
#                            _NSG\Obj\config.r79                               #
#                            \\ALFI-PC\Siemens\IAR\ARM\alfinant\LogSms\Release #
#                            _NSG\Obj\func.r79                                 #
#                            \\ALFI-PC\Siemens\IAR\ARM\alfinant\LogSms\Release #
#                            _NSG\Obj\main.r79                                 #
#                            \\ALFI-PC\Siemens\IAR\ARM\alfinant\LogSms\Release #
#                            _NSG\Obj\strings.r79                              #
#                            -o                                                #
#                            \\ALFI-PC\Siemens\IAR\ARM\alfinant\LogSms\Release #
#                            _NSG\Exe\LogSms.elf                               #
#                            -Felf -l                                          #
#                            \\ALFI-PC\Siemens\IAR\ARM\alfinant\LogSms\Release #
#                            _NSG\List\LogSms.map                              #
#                            -xmsno -f                                         #
#                            \\ALFI-PC\Siemens\IAR\ARM\alfinant\LogSms\test.xc #
#                            l                                                 #
#                            (-carm -V(CODE)CODE_AREA,12                       #
#                            -V(DATA)DATA_AREA,12                              #
#                            -Z(CODE_AREA)ELFBEGIN,DATA_ID,START,CODE,DATA_C,I #
#                            NITTAB,DATA_Z,DATA_N,CONFIG_C=0-FFFFFFFF          #
#                            -Z(DATA_AREA)DATA_I=0-FFFFFFFF) -ynpra -s main    #
#                                                                              #
#                        Copyright 1987-2007 IAR Systems. All rights reserved. #
################################################################################





                ****************************************
                *                                      *
                *           CROSS REFERENCE            *
                *                                      *
                ****************************************

       Program entry at : CODE_AREA 000005F8  Relocatable, from module : main




                ****************************************
                *                                      *
                *            RUNTIME MODEL             *
                *                                      *
                ****************************************

  StackAlign4  = USED
  __cpu_mode   = __pcs__interwork
  __data_model = absolute
  __endian     = little
  __rt_version = 6



                ****************************************
                *                                      *
                *              MODULE MAP              *
                *                                      *
                ****************************************


  DEFINED ABSOLUTE ENTRIES
    *************************************************************************

  DEFINED ABSOLUTE ENTRIES
    *************************************************************************

  FILE NAME : \\ALFI-PC\Siemens\IAR\ARM\alfinant\LogSms\Release_NSG\Obj\conf_loader.r79
  PROGRAM MODULE, NAME : conf_loader

  SEGMENTS IN THE MODULE
  ======================
DATA_I
  Relative segment, address: DATA_AREA 00000000 - 00000003 (0x4 bytes), align: 2
  Segment part 4.             Intra module refs:   LoadConfigData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           successed_config_filename
                                   00000000        maincsm_onmessage (main)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000004 - 00000107 (0x104 bytes), align: 2
  Segment part 7.             Intra module refs:   InitConfig
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LoadConfigData          00000004 
               stack 1 = 00000000 ( 00000024 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000108 - 0000012F (0x28 bytes), align: 2
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           InitConfig              00000108        main (main)
                                                   maincsm_onmessage (main)
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
DATA_ID
  Relative segment, address: CODE_AREA 00000000 - 00000003 (0x4 bytes), align: 2
  Segment part 5.             Intra module refs:   successed_config_filename
    -------------------------------------------------------------------------
INITTAB
  Relative segment, address: CODE_AREA 0000074C - 00000757 (0xc bytes), align: 2
  Segment part 11. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?init?tab?DATA_I        0000074C 
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 00000748 - 00000748 (0x1 bytes), align: 0
  Segment part 2.             Intra module refs:   Segment part 5
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 000006B0 - 000006DF (0x30 bytes), align: 2
  Segment part 3.             Intra module refs:   InitConfig

    *************************************************************************

  FILE NAME : \\ALFI-PC\Siemens\IAR\ARM\alfinant\LogSms\Release_NSG\Obj\config.r79
  PROGRAM MODULE, NAME : config

  SEGMENTS IN THE MODULE
  ======================
CONFIG_C
  Relative segment, address: CODE_AREA 00000888 - 000008B3 (0x2c bytes), align: 2
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr0                 00000888        LoadConfigData (conf_loader)
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 000008B4 - 00000933 (0x80 bytes), align: 2
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LOGFILE                 000008B4        WriteLog (main)

    *************************************************************************

  FILE NAME : \\ALFI-PC\Siemens\IAR\ARM\alfinant\LogSms\Release_NSG\Obj\func.r79
  PROGRAM MODULE, NAME : func

  SEGMENTS IN THE MODULE
  ======================
ELFBEGIN
  Relative segment, address: CODE_AREA 00000000, align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ELF_BEGIN               00000000        ElfKiller (main)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000130 - 00000137 (0x8 bytes), align: 2
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           kill_data               00000130        ElfKiller (main)
           seqkill                 00000134 

    *************************************************************************

  FILE NAME : \\ALFI-PC\Siemens\IAR\ARM\alfinant\LogSms\Release_NSG\Obj\main.r79
  PROGRAM MODULE, NAME : main

  SEGMENTS IN THE MODULE
  ======================
DATA_Z
  Relative segment, address: CODE_AREA 00000764 - 0000076B (0x8 bytes), align: 2
  Segment part 5.             Intra module refs:   Segment part 17
                                                   my_emsal_process
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gproc                   00000764 
           old_sms_rlt_sm          00000768 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000138 - 0000045B (0x324 bytes), align: 2
  Segment part 10.            Intra module refs:   my_emsal_process
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UnpackSMS               00000138 
               stack 1 = 00000000 ( 00000024 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000045C - 000004BB (0x60 bytes), align: 2
  Segment part 12.            Intra module refs:   SetSMSListener
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           my_emsal_process        0000045C 
               stack 1 = 00000000 ( 00000018 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000004BC - 000004EB (0x30 bytes), align: 2
  Segment part 14.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SetSMSListener          000004BC 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000004EC - 000004FF (0x14 bytes), align: 2
  Segment part 16.            Intra module refs:   maincsm_onclose
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DeleteSMSListener       000004EC 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000500 - 00000503 (0x4 bytes), align: 2
  Segment part 17.            Intra module refs:   DeleteSMSListener
                                                   SetSMSListener
    -------------------------------------------------------------------------
DATA_Z
  Relative segment, address: CODE_AREA 0000076C - 0000076F (0x4 bytes), align: 2
  Segment part 7.             Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           maincsm_id              0000076C 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000504 - 00000553 (0x50 bytes), align: 2
  Segment part 19.            Intra module refs:   Segment part 4
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           maincsm_onmessage       00000504 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000554 - 00000557 (0x4 bytes), align: 2
  Segment part 21.            Intra module refs:   Segment part 4
           LOCAL                   ADDRESS         
           =====                   =======         
           maincsm_oncreate        00000554 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000558 - 00000573 (0x1c bytes), align: 2
  Segment part 23.            Intra module refs:   maincsm_onclose
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ElfKiller               00000558 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000574 - 0000058B (0x18 bytes), align: 2
  Segment part 25.            Intra module refs:   Segment part 4
           LOCAL                   ADDRESS         
           =====                   =======         
           maincsm_onclose         00000574 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
DATA_Z
  Relative segment, address: CODE_AREA 00000770 - 00000887 (0x118 bytes), align: 2
  Segment part 8.             Intra module refs:   Segment part 4
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 000006E0 - 000006E7 (0x8 bytes), align: 2
  Segment part 2.             Intra module refs:   UnpackSMS
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 000006E8 - 000006FF (0x18 bytes), align: 2
  Segment part 3.             Intra module refs:   maincsm_onmessage
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 00000700 - 00000743 (0x44 bytes), align: 2
  Segment part 4.             Intra module refs:   main
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 00000744 - 00000747 (0x4 bytes), align: 2
  Segment part 6.             Intra module refs:   Segment part 4
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           minus11                 00000744 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000058C - 000005F7 (0x6c bytes), align: 2
  Segment part 27.            Intra module refs:   my_emsal_process
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           WriteLog                0000058C 
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000005F8 - 0000067F (0x88 bytes), align: 2
  Segment part 29.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           main                    000005F8        Absolute parts (?ABS_ENTRY_MOD)
               stack 1 = 00000000 ( 00000038 )
    -------------------------------------------------------------------------
INITTAB
  Relative segment, address: CODE_AREA 00000758 - 00000763 (0xc bytes), align: 2
  Segment part 33. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?init?tab?DATA_Z        00000758 

    *************************************************************************

  FILE NAME : \\ALFI-PC\Siemens\IAR\ARM\alfinant\LogSms\Release_NSG\Obj\strings.r79
  PROGRAM MODULE, NAME : strings

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE_AREA 00000680 - 000006AF (0x30 bytes), align: 2
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           strcmp_nocase           00000680        maincsm_onmessage (main)




                ****************************************
                *                                      *
                *            MODULE SUMMARY            *
                *                                      *
                ****************************************

Module        CODE   DATA
------        ----   ----
             (Rel)  (Rel)
conf_loader    365      4
config         172
func             8
main         1 760
strings         48
------       -----      -
Total:       2 353      4


                ****************************************
                *                                      *
                *              CALL GRAPH              *
                *                                      *
                ****************************************

  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  my_emsal_process
      | Stack used (prev) :  00000000
      | + function block  :  00000018
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000018


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  maincsm_onmessage
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  maincsm_oncreate
      | Stack used (prev) :  00000000
      | + function block  :  00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000000


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  ElfKiller
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  maincsm_onclose
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  WriteLog
      | Stack used (prev) :  00000000
      | + function block  :  00000010
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000010


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000018
  01  LoadConfigData
      | Stack used (prev) :  00000018
      | + function block  :  00000024
  <-Sub-tree of type: Function tree
    | Stack used          :  0000003C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000003C
  01  InitConfig
      | Stack used (prev) :  0000003C
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00000044


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000044
  01  UnpackSMS
      | Stack used (prev) :  00000044
      | + function block  :  00000024
  <-Sub-tree of type: Function tree
    | Stack used          :  00000068


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000068
  01  SetSMSListener
      | Stack used (prev) :  00000068
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00000070


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000070
  01  DeleteSMSListener
      | Stack used (prev) :  00000070
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000070


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000070
  01  main
      | Stack used (prev) :  00000070
      | + function block  :  00000038
  <-Sub-tree of type: Function tree
    | Stack used          :  000000A8


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000000A8
  01  strcmp_nocase
      | Stack used (prev) :  000000A8
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000000A8




                ****************************************
                *                                      *
                *      SEGMENTS IN ADDRESS ORDER       *
                *                                      *
                ****************************************


SEGMENT              SPACE    START ADDRESS   END ADDRESS     SIZE  TYPE  ALIGN
=======              =====    =============   ===========     ====  ====  =====
ELFBEGIN             CODE_AREA           00000000                     rel    0
DATA_ID              CODE_AREA      00000000 - 00000003           4   rel    2
START                CODE_AREA           00000004                     dse    0
CODE                 CODE_AREA      00000004 - 000006AF         6AC   rel    2
DATA_C               CODE_AREA      000006B0 - 00000748          99   rel    2
INITTAB              CODE_AREA      0000074C - 00000763          18   rel    2
DATA_Z               CODE_AREA      00000764 - 00000887         124   rel    2
DATA_N               CODE_AREA           00000888                     dse    0
CONFIG_C             CODE_AREA      00000888 - 00000933          AC   rel    2
DATA_I               DATA_AREA      00000000 - 00000003           4   rel    2

                ****************************************
                *                                      *
                *        END OF CROSS REFERENCE        *
                *                                      *
                ****************************************

 2 353 bytes of CODE memory
     4 bytes of DATA memory

Errors: none
Warnings: none

