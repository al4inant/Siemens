##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION    06/May/2018  20:17:15 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  E:\Users\alfinant\Documents\Siemens\alfinant\MeasMon #
#                       \meas.c                                              #
#    Command line    =  E:\Users\alfinant\Documents\Siemens\alfinant\MeasMon #
#                       \meas.c -D SGOLD -lCN E:\Users\alfinant\Documents\Si #
#                       emens\alfinant\MeasMon\Release_SGOLD\List\ -la       #
#                       E:\Users\alfinant\Documents\Siemens\alfinant\MeasMon #
#                       \Release_SGOLD\List\ -o E:\Users\alfinant\Documents\ #
#                       Siemens\alfinant\MeasMon\Release_SGOLD\Obj\ -z9      #
#                       --cpu_mode arm --endian little --cpu ARM926EJ-S      #
#                       --stack_align 4 --interwork -e --fpu None            #
#                       --dlib_config E:\Users\alfinant\Documents\Siemens\IA #
#                       R\ARM\LIB\dl5tpainl8n.h -I                           #
#                       E:\Users\alfinant\Documents\Siemens\IAR\ARM\INC\     #
#                       --inline_threshold=2                                 #
#    List file       =  E:\Users\alfinant\Documents\Siemens\alfinant\MeasMon #
#                       \Release_SGOLD\List\meas.lst                         #
#    Object file     =  E:\Users\alfinant\Documents\Siemens\alfinant\MeasMon #
#                       \Release_SGOLD\Obj\meas.r79                          #
#                                                                            #
#                                                                            #
##############################################################################

E:\Users\alfinant\Documents\Siemens\alfinant\MeasMon\meas.c
      1          /******************************************************************************/
      2          /*                Пример для работы с Measurement Interface                   */
      3          /*                                                                            */
      4          /* Макс. значение регистра MEAS.DATA может быть 0 или 4095(0xFFF)             */
      5          /* зависит от полярности подключения.                                         */
      6          /* MEAS.DATA == 2048(0x800) - это нулевое значение. Но на практике он 0x802   */
      7          /* Получается что при измерениии имеем разрешение 4095-2048=2047(0x7FF).      */
      8          /* Опорное напряжение ~2000 mV.                                               */
      9          /* Резисторный делитель: R2=2K, R1=6.8K+6.8K=13.6K                            */
     10          /* Рассчитан на макс напряжение источника == ~15.2V                           */  
     11          /*  +                                                                         */             
     12          /*    |                                                                       */
     13          /*   | |                                                                      */
     14          /*   | | R1                                                                   */
     15          /*    |                                                                       */
     16          /*    ------------- M2                                                        */
     17          /*    |                                                                       */
     18          /*   | |                                                                      */ 
     19          /*   | | R2                                                                   */
     20          /*    |                                                                       */
     21          /*  - ------------- GND                                                       */
     22          /******************************************************************************/
     23          
     24          #include "../inc/swilib.h"
     25          #include "../inc/nu_swilib.h"
     26          #include "irq_work.h"
     27          #include "clkman.h"
     28          
     29          #ifdef NEWSGOLD
     30          #include "../inc/reg8876.h"
     31          #else
     32          #include "../inc/reg8875.h"

   \                                 In segment DATA_AN, at 0xf4c00000
   \   MEAS_TypeDef __data MEAS
   \                     MEAS:
   \   00000000                      DS8 248
     33          #endif
     34          
     35          #define PM_CHARGE_UC   GPIO.TOUT1
     36          #define HISR_STACK_SIZE 512
     37          

   \                                 In segment DATA_I, align 4, align-sorted
     38          int adata=-1, adata0, adata1, adata2, adata3, adata4, adata5, adata6;
   \                     adata:
   \   00000000                      DS8 4
   \   00000004                      REQUIRE `?<Initializer for adata>`
   \                     adata0:
   \   00000004                      DS8 4
   \   00000008                      REQUIRE `?<Initializer for adata0>`
   \                     adata1:
   \   00000008                      DS8 4
   \   0000000C                      REQUIRE `?<Initializer for adata1>`
   \                     adata2:
   \   0000000C                      DS8 4
   \   00000010                      REQUIRE `?<Initializer for adata2>`
   \                     adata3:
   \   00000010                      DS8 4
   \   00000014                      REQUIRE `?<Initializer for adata3>`
   \                     adata4:
   \   00000014                      DS8 4
   \   00000018                      REQUIRE `?<Initializer for adata4>`
   \                     adata5:
   \   00000018                      DS8 4
   \   0000001C                      REQUIRE `?<Initializer for adata5>`
   \                     adata6:
   \   0000001C                      DS8 4
   \   00000020                      REQUIRE `?<Initializer for adata6>`
   \   00000020                      DS8 4
   \   00000024                      REQUIRE `?<Initializer for callback>`
     39          static void (*callback)(void)=NULL;
     40          
     41          NU_HISR hisr;
     42          unsigned long hisr_stack[HISR_STACK_SIZE];
     43          
     44          IRQ_DESC irq_desc;
     45          int saved_meas_ctrl2;
   \                     saved_meas_ctrl2:
   \   00000024                      DS8 4
   \   00000028                      REQUIRE `?<Initializer for saved_meas_ctrl2>`
   \                     hisr:
   \   00000028                      DS8 400
   \   000001B8                      REQUIRE `?<Initializer for hisr>`
   \                     hisr_stack:
   \   000001B8                      DS8 2048
   \   000009B8                      REQUIRE `?<Initializer for hisr_stack>`
   \                     irq_desc:
   \   000009B8                      DS8 8
   \   000009C0                      REQUIRE `?<Initializer for irq_desc>`
     46          

   \                                 In segment CODE, align 4, keep-with-next
     47          static void meas_rdyirq(int vector)//vector==0x46
     48          {
   \                     meas_rdyirq:
   \   00000000   10402DE9           PUSH     {R4,LR}
     49            MEAS.RDYIRQ = 0x4000;//сбросили флаг
   \   00000004   C004A0E3           MOV      R0,#-1073741824
   \   00000008   D30580E3           ORR      R0,R0,#0x34C00000
   \   0000000C   401CA0E3           MOV      R1,#+16384
   \   00000010   F01080E5           STR      R1,[R0, #+240]
     50            
     51            if (MEAS.STAT & MEAS_READY)
   \   00000014   1C1090E5           LDR      R1,[R0, #+28]
   \   00000018   800411E3           TST      R1,#0x80000000
   \   0000001C   1080BD08           POPEQ    {R4,PC}
     52            {
     53              MEAS.RDYIRQ = 0;//вообще отключили 
     54              MEAS.CTRL2 &=~ MEAS_ENTRIG;
     55              
     56              adata0=MEAS.DATA0;
   \   00000020   ........           LDR      R4,??DataTable2  ;; adata
   \   00000024   0010A0E3           MOV      R1,#+0
   \   00000028   F01080E5           STR      R1,[R0, #+240]
   \   0000002C   181090E5           LDR      R1,[R0, #+24]
   \   00000030   4015C1E3           BIC      R1,R1,#0x10000000
   \   00000034   181080E5           STR      R1,[R0, #+24]
   \   00000038   201090E5           LDR      R1,[R0, #+32]
   \   0000003C   041084E5           STR      R1,[R4, #+4]
     57              adata1=MEAS.DATA1;
   \   00000040   241090E5           LDR      R1,[R0, #+36]
   \   00000044   081084E5           STR      R1,[R4, #+8]
     58              adata2=MEAS.DATA2;
   \   00000048   281090E5           LDR      R1,[R0, #+40]
   \   0000004C   0C1084E5           STR      R1,[R4, #+12]
     59              adata3=MEAS.DATA3;
   \   00000050   2C1090E5           LDR      R1,[R0, #+44]
   \   00000054   101084E5           STR      R1,[R4, #+16]
     60              adata4=MEAS.DATA4;
   \   00000058   301090E5           LDR      R1,[R0, #+48]
   \   0000005C   141084E5           STR      R1,[R4, #+20]
     61              adata5=MEAS.DATA5;
   \   00000060   341090E5           LDR      R1,[R0, #+52]
   \   00000064   181084E5           STR      R1,[R4, #+24]
     62              adata6=MEAS.DATA6;
   \   00000068   381090E5           LDR      R1,[R0, #+56]
   \   0000006C   1C1084E5           STR      R1,[R4, #+28]
     63              
     64              MEAS.CTRL2=saved_meas_ctrl2;//восстанавливаем
   \   00000070   241094E5           LDR      R1,[R4, #+36]
   \   00000074   181080E5           STR      R1,[R0, #+24]
     65              irq_set_prio(0x72, 8);//разблокируем прерывание gsm_tpu_measur
   \   00000078   0810A0E3           MOV      R1,#+8
   \   0000007C   7200A0E3           MOV      R0,#+114
   \   00000080   ........           _BLF     irq_set_prio,??irq_set_prio??rA
     66              //irq_set_prio(0x46, 0);//блокируем. необязательно
     67              
     68              //PM_CHARGE_UC &= ~ GPIO_ENAQ;//включаем зарядку
     69              NU_Activate_HISR(&hisr);
   \   00000084   280084E2           ADD      R0,R4,#+40
   \   00000088   530300EF           SWI      +851
     70            }
     71          }
   \   0000008C   1080BDE8           POP      {R4,PC}          ;; return
     72          

   \                                 In segment CODE, align 4, keep-with-next
     73          static void H_MEAS_RDY_M2_entry()
     74          {
   \                     H_MEAS_RDY_M2_entry:
   \   00000000   10402DE9           PUSH     {R4,LR}
     75            //MEAS.DATAX: 0x800-значение при нуле, 0xFFF-макс. значение
     76            adata = divide(7, adata0+adata1+adata2+adata3+adata4+adata5+adata6);
   \   00000004   50409FE5           LDR      R4,??H_MEAS_RDY_M2_entry_0  ;; adata
   \   00000008   040094E5           LDR      R0,[R4, #+4]
   \   0000000C   081094E5           LDR      R1,[R4, #+8]
   \   00000010   000081E0           ADD      R0,R1,R0
   \   00000014   0C1094E5           LDR      R1,[R4, #+12]
   \   00000018   000081E0           ADD      R0,R1,R0
   \   0000001C   101094E5           LDR      R1,[R4, #+16]
   \   00000020   000081E0           ADD      R0,R1,R0
   \   00000024   141094E5           LDR      R1,[R4, #+20]
   \   00000028   000081E0           ADD      R0,R1,R0
   \   0000002C   181094E5           LDR      R1,[R4, #+24]
   \   00000030   000081E0           ADD      R0,R1,R0
   \   00000034   1C1094E5           LDR      R1,[R4, #+28]
   \   00000038   001081E0           ADD      R1,R1,R0
   \   0000003C   0700A0E3           MOV      R0,#+7
   \   00000040   BC0000EF           SWI      +188
   \   00000044   000084E5           STR      R0,[R4, #+0]
     77            
     78            if (callback)
   \   00000048   200094E5           LDR      R0,[R4, #+32]
   \   0000004C   000050E3           CMP      R0,#+0
   \   00000050   1080BD08           POPEQ    {R4,PC}
     79              callback();
   \   00000054   30FF2FE1           BLX      R0
     80          }
   \   00000058   1080BDE8           POP      {R4,PC}          ;; return
   \                     ??H_MEAS_RDY_M2_entry_0:
   \   0000005C   ........           DC32     adata
     81          

   \                                 In segment CODE, align 4, keep-with-next
     82          int MEAS_Init(void callback_func())
     83          {
     84            STATUS status=NU_Create_HISR(&hisr, "H_MEAS_RDY_M2", H_MEAS_RDY_M2_entry, 0, (void*)hisr_stack, HISR_STACK_SIZE);
     85            
     86            if (status==NU_SUCCESS)
   \                     MEAS_Init:
   \   00000000   70209FE5           LDR      R2,??MEAS_Init_0  ;; H_MEAS_RDY_M2_entry
   \   00000004   70109FE5           LDR      R1,??MEAS_Init_0+0x4  ;; `?<Constant "H_MEAS_RDY_M2">`
   \   00000008   30402DE9           PUSH     {R4,R5,LR}
   \   0000000C   ........           LDR      R5,??DataTable2  ;; adata
   \   00000010   0040A0E1           MOV      R4,R0
   \   00000014   800FA0E3           MOV      R0,#+512
   \   00000018   01002DE9           PUSH     {R0}
   \   0000001C   0030A0E3           MOV      R3,#+0
   \   00000020   6E0F85E2           ADD      R0,R5,#+440
   \   00000024   01002DE9           PUSH     {R0}
   \   00000028   280085E2           ADD      R0,R5,#+40
   \   0000002C   540300EF           SWI      +852
   \   00000030   000050E3           CMP      R0,#+0
   \   00000034   08D08DE2           ADD      SP,SP,#+8
   \   00000038   0C00001A           BNE      ??MEAS_Init_1
     87            {
     88              callback=callback_func;
   \   0000003C   204085E5           STR      R4,[R5, #+32]
     89              irq_req(0x46, 3, 8, meas_rdyirq, &irq_desc);
   \   00000040   38309FE5           LDR      R3,??MEAS_Init_0+0x8  ;; meas_rdyirq
   \   00000044   B800A0E3           MOV      R0,#+184
   \   00000048   900E80E3           ORR      R0,R0,#0x900
   \   0000004C   050080E0           ADD      R0,R0,R5
   \   00000050   01002DE9           PUSH     {R0}
   \   00000054   0820A0E3           MOV      R2,#+8
   \   00000058   0310A0E3           MOV      R1,#+3
   \   0000005C   4600A0E3           MOV      R0,#+70
   \   00000060   ........           _BLF     irq_req,??irq_req??rA
     90              return 1;
   \   00000064   0100A0E3           MOV      R0,#+1
   \   00000068   04D08DE2           ADD      SP,SP,#+4
   \   0000006C   3080BDE8           POP      {R4,R5,PC}
     91            }
     92            else return 0;
   \                     ??MEAS_Init_1:
   \   00000070   0000A0E3           MOV      R0,#+0
   \   00000074   3080BDE8           POP      {R4,R5,PC}       ;; return
   \                     ??MEAS_Init_0:
   \   00000078   ........           DC32     H_MEAS_RDY_M2_entry
   \   0000007C   ........           DC32     `?<Constant "H_MEAS_RDY_M2">`
   \   00000080   ........           DC32     meas_rdyirq
     93          }
     94          

   \                                 In segment CODE, align 4, keep-with-next
     95          void MEAS_Delete()
     96          {
     97            callback=NULL;
   \                     MEAS_Delete:
   \   00000000   ........           LDR      R0,??DataTable2  ;; adata
   \   00000004   00402DE9           PUSH     {LR}
   \   00000008   0010A0E3           MOV      R1,#+0
   \   0000000C   201080E5           STR      R1,[R0, #+32]
     98            NU_Delete_HISR(&hisr); 
   \   00000010   280080E2           ADD      R0,R0,#+40
   \   00000014   550300EF           SWI      +853
     99          }
   \   00000018   0080BDE8           POP      {PC}             ;; return
    100          

   \                                 In segment CODE, align 4, keep-with-next
    101          void MEAS_Start()
    102          {
   \                     MEAS_Start:
   \   00000000   00402DE9           PUSH     {LR}
    103             //PM_CHARGE_UC |= GPIO_ENAQ;//отключаем зарядку(иначе измерения будут неверными)
    104             irq_set_prio(0x72, 0);//блокируем прерывание GSM таймера, irq_n==0x72
   \   00000004   0010A0E3           MOV      R1,#+0
   \   00000008   7200A0E3           MOV      R0,#+114
   \   0000000C   ........           _BLF     irq_set_prio,??irq_set_prio??rA
    105             
    106             //ClkStateOn(MEASIF_MASK);//желательно вызывать
    107             MEAS.CLK &= ~ 1;
   \   00000010   C004A0E3           MOV      R0,#-1073741824
   \   00000014   D30580E3           ORR      R0,R0,#0x34C00000
   \   00000018   001090E5           LDR      R1,[R0, #+0]
   \   0000001C   0110C1E3           BIC      R1,R1,#0x1
   \   00000020   001080E5           STR      R1,[R0, #+0]
    108             MEAS.CLK &= 0x114;
   \   00000024   001090E5           LDR      R1,[R0, #+0]
   \   00000028   451F01E2           AND      R1,R1,#0x114
   \   0000002C   001080E5           STR      R1,[R0, #+0]
    109             saved_meas_ctrl2 = MEAS.CTRL2;//сохраняемся
   \   00000030   30109FE5           LDR      R1,??MEAS_Start_0  ;; adata + 36
   \   00000034   182090E5           LDR      R2,[R0, #+24]
   \   00000038   002081E5           STR      R2,[R1, #+0]
    110             MEAS.CTRL2 &=~ MEAS_ENTRIG;
   \   0000003C   181090E5           LDR      R1,[R0, #+24]
   \   00000040   4015C1E3           BIC      R1,R1,#0x10000000
   \   00000044   181080E5           STR      R1,[R0, #+24]
    111          
    112             MEAS.RDYIRQ = 0x4000;//сброс флага прерывания
   \   00000048   401CA0E3           MOV      R1,#+16384
   \   0000004C   F01080E5           STR      R1,[R0, #+240]
    113             MEAS.RDYIRQ = 0x1000;//активируем прерывание 
   \   00000050   401DA0E3           MOV      R1,#+4096
   \   00000054   F01080E5           STR      R1,[R0, #+240]
    114             
    115             //while (MEAS.STAT & MEAS_BUSY);//ждемс...//только если не используешь прерывание
    116             MEAS.CTRL2=0x30300003; //конфиг-я для чтения напряжения с M2
   \   00000058   CC13A0E3           MOV      R1,#+805306371
   \   0000005C   C01981E3           ORR      R1,R1,#0x300000
   \   00000060   181080E5           STR      R1,[R0, #+24]
    117             //while ((MEAS.STAT & MEAS_READY) == 0);//только если не используешь прерывание
    118          }
   \   00000064   0080BDE8           POP      {PC}             ;; return
   \                     ??MEAS_Start_0:
   \   00000068   ........           DC32     adata + 36

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   ........           DC32     adata

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for adata>`:
   \   00000000   FFFFFFFF           DC32 -1
   \                     `?<Initializer for adata0>`:
   \   00000004   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for adata1>`:
   \   00000008   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for adata2>`:
   \   0000000C   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for adata3>`:
   \   00000010   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for adata4>`:
   \   00000014   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for adata5>`:
   \   00000018   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for adata6>`:
   \   0000001C   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for callback>`:
   \   00000020   00000000           DC32 0H
   \                     `?<Initializer for saved_meas_ctrl2>`:
   \   00000024   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for hisr>`:
   \   00000028   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000038   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000048   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000058   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000068   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000078   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000088   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000098   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000A8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000B8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000C8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000D8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000E8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000F8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000108   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000118   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000128   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000138   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000148   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000158   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000168   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000178   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000188   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000198   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000001A8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \                     `?<Initializer for hisr_stack>`:
   \   000001B8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000001C8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000001D8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000001E8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000001F8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000208   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000218   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000228   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000238   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000248   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000258   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000268   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000278   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000288   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000298   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000002A8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000002B8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000002C8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000002D8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000002E8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000002F8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000308   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000318   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000328   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000338   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000348   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000358   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000368   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000378   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000388   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000398   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000003A8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000003B8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000003C8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000003D8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000003E8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000003F8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000408   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000418   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000428   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000438   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000448   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000458   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000468   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000478   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000488   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000498   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000004A8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000004B8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000004C8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000004D8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000004E8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000004F8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000508   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000518   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000528   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000538   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000548   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000558   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000568   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000578   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000588   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000598   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000005A8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000005B8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000005C8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000005D8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000005E8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000005F8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000608   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000618   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000628   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000638   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000648   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000658   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000668   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000678   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000688   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000698   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000006A8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000006B8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000006C8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000006D8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000006E8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000006F8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000708   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000718   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000728   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000738   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000748   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000758   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000768   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000778   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000788   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000798   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000007A8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000007B8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000007C8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000007D8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000007E8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000007F8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000808   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000818   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000828   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000838   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000848   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000858   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000868   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000878   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000888   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000898   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000008A8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000008B8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000008C8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000008D8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000008E8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000008F8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000908   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000918   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000928   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000938   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000948   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000958   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000968   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000978   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000988   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000998   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000009A8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \                     `?<Initializer for irq_desc>`:
   \   000009B8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0000        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "H_MEAS_RDY_M2">`:
   \   00000000   485F4D454153       DC8 "H_MEAS_RDY_M2"
   \              5F5244595F4D
   \              3200        
   \   0000000E   0000               DC8 0, 0
    119          
    120          
    121          
    122          

   Maximum stack usage in bytes:

     Function            CSTACK
     --------            ------
     H_MEAS_RDY_M2_entry     8
     MEAS_Delete             4
     MEAS_Init              20
     MEAS_Start              4
     meas_rdyirq             8


   Segment part sizes:

     Function/Label              Bytes
     --------------              -----
     MEAS                         248
     adata                       2496
     meas_rdyirq                  144
     H_MEAS_RDY_M2_entry           96
     MEAS_Init                    132
     MEAS_Delete                   28
     MEAS_Start                   108
     ??DataTable2                   4
     ?<Initializer for adata>    2496
     ?<Constant "H_MEAS_RDY_M2">   16
      Others                       56

 
   556 bytes in segment CODE
   248 bytes in segment DATA_AN
    16 bytes in segment DATA_C
 2 496 bytes in segment DATA_I
 2 496 bytes in segment DATA_ID
    12 bytes in segment INITTAB
 
   512 bytes of CODE  memory (+  56 bytes shared)
 2 512 bytes of CONST memory
 2 496 bytes of DATA  memory (+ 248 bytes shared)

Errors: none
Warnings: 4
