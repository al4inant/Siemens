//////////////////////////////////////////////////////////////////////////////
//                                                                           /
// IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION   16/Feb/2023  22:41:13 /
// Copyright 1999-2005 IAR Systems. All rights reserved.                     /
//                                                                           /
//    Cpu mode        =  interwork                                           /
//    Endian          =  little                                              /
//    Stack alignment =  4                                                   /
//    Source file     =  D:\Users\alfinant\Documents\Siemens\Dev\IAR\VK.ELF_ /
//                       C\conndata.c                                        /
//    Command line    =  D:\Users\alfinant\Documents\Siemens\Dev\IAR\VK.ELF_ /
//                       C\conndata.c -D NEWSGOLD -D ELKA -D DEBUG -lCN      /
//                       D:\Users\alfinant\Documents\Siemens\Dev\IAR\VK.ELF_ /
//                       C\Release_ELKA\List\ -la                            /
//                       D:\Users\alfinant\Documents\Siemens\Dev\IAR\VK.ELF_ /
//                       C\Release_ELKA\List\ -o D:\Users\alfinant\Documents /
//                       \Siemens\Dev\IAR\VK.ELF_C\Release_ELKA\Obj\ -z9     /
//                       --cpu_mode arm --endian little --cpu ARM926EJ-S     /
//                       --stack_align 4 --interwork --diag_suppress Pe301   /
//                       -e --fpu None --dlib_config                         /
//                       D:\Users\alfinant\Documents\Siemens\IAR\ARM\LIB\dl5 /
//                       tpainl8n.h -I D:\Users\alfinant\Documents\Siemens\I /
//                       AR\ARM\INC\ --inline_threshold=2                    /
//    List file       =  D:\Users\alfinant\Documents\Siemens\Dev\IAR\VK.ELF_ /
//                       C\Release_ELKA\List\conndata.s79                    /
//                                                                           /
//                                                                           /
//////////////////////////////////////////////////////////////////////////////

        NAME conndata

        RTMODEL "StackAlign4", "USED"
        RTMODEL "__cpu_mode", "__pcs__interwork"
        RTMODEL "__data_model", "absolute"
        RTMODEL "__dlib_file_descriptor", "0"
        RTMODEL "__endian", "little"
        RTMODEL "__rt_version", "6"

        RSEG CSTACK:DATA:NOROOT(2)

        PUBWEAK `?*?DATA_ID`
        MULTWEAK ??CONNDATA_findByDNR??rT
        MULTWEAK ??CONNDATA_findByHostname??rT
        MULTWEAK ??CONNDATA_findBySSL??rT
        MULTWEAK ??CONNDATA_findBySession??rT
        MULTWEAK ??CONNDATA_findBySock??rT
        MULTWEAK ??CONNDATA_findByURL??rT
        MULTWEAK ??CONNDATA_free??rT
        MULTWEAK ??CONNDATA_getTop??rT
        MULTWEAK ??CONNDATA_new??rT
        MULTWEAK ??CONNDATA_set2Top??rT
??DataTable0 EQU 0
??DataTable1 EQU 0
??DataTable2 EQU 0
??DataTable3 EQU 0
??DataTable4 EQU 0
??DataTable5 EQU 0
??DataTable6 EQU 0
        MULTWEAK ??get_host_from_url??rA
        PUBWEAK ?init?tab?DATA_I
        PUBWEAK ?init?tab?DATA_Z
        PUBLIC ALLTOTALCONNECTIONS
        PUBLIC ALLTOTALRECEIVED
        PUBLIC ALLTOTALSENDED
        PUBLIC CONNDATA_findByDNR
        FUNCTION CONNDATA_findByDNR,0203H
        PUBLIC CONNDATA_findByHostname
        FUNCTION CONNDATA_findByHostname,0203H
        LOCFRAME CSTACK, 16, STACK
        PUBLIC CONNDATA_findBySSL
        FUNCTION CONNDATA_findBySSL,0203H
        PUBLIC CONNDATA_findBySession
        FUNCTION CONNDATA_findBySession,0203H
        PUBLIC CONNDATA_findBySock
        FUNCTION CONNDATA_findBySock,0203H
        PUBLIC CONNDATA_findByURL
        FUNCTION CONNDATA_findByURL,0203H
        LOCFRAME CSTACK, 68, STACK
        PUBLIC CONNDATA_free
        FUNCTION CONNDATA_free,0203H
        LOCFRAME CSTACK, 8, STACK
        PUBLIC CONNDATA_getTop
        FUNCTION CONNDATA_getTop,0201H
        PUBLIC CONNDATA_new
        FUNCTION CONNDATA_new,0203H
        LOCFRAME CSTACK, 24, STACK
        PUBLIC CONNDATA_set2Top
        FUNCTION CONNDATA_set2Top,0203H
        
        CFI Names cfiNames0
        CFI StackFrame CFA R13 HUGEDATA
        CFI Resource R0:32, R1:32, R2:32, R3:32, R4:32, R5:32, R6:32, R7:32
        CFI Resource R8:32, R9:32, R10:32, R11:32, R12:32, CPSR:32, R13:32
        CFI Resource R14:32, SPSR:32
        CFI VirtualResource ?RET:32
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 2
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon0
        
        
        CFI Common cfiCommon1 Using cfiNames0
        CFI CodeAlign 4
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon1
        
get_host_from_url   SYMBOL "get_host_from_url"
CONNDATA_findByDNR  SYMBOL "CONNDATA_findByDNR"
??CONNDATA_findByDNR??rT SYMBOL "??rT", CONNDATA_findByDNR
CONNDATA_findByHostname SYMBOL "CONNDATA_findByHostname"
??CONNDATA_findByHostname??rT SYMBOL "??rT", CONNDATA_findByHostname
CONNDATA_findBySSL  SYMBOL "CONNDATA_findBySSL"
??CONNDATA_findBySSL??rT SYMBOL "??rT", CONNDATA_findBySSL
CONNDATA_findBySession SYMBOL "CONNDATA_findBySession"
??CONNDATA_findBySession??rT SYMBOL "??rT", CONNDATA_findBySession
CONNDATA_findBySock SYMBOL "CONNDATA_findBySock"
??CONNDATA_findBySock??rT SYMBOL "??rT", CONNDATA_findBySock
CONNDATA_findByURL  SYMBOL "CONNDATA_findByURL"
??CONNDATA_findByURL??rT SYMBOL "??rT", CONNDATA_findByURL
CONNDATA_free       SYMBOL "CONNDATA_free"
??CONNDATA_free??rT SYMBOL "??rT", CONNDATA_free
CONNDATA_getTop     SYMBOL "CONNDATA_getTop"
??CONNDATA_getTop??rT SYMBOL "??rT", CONNDATA_getTop
CONNDATA_new        SYMBOL "CONNDATA_new"
??CONNDATA_new??rT  SYMBOL "??rT", CONNDATA_new
CONNDATA_set2Top    SYMBOL "CONNDATA_set2Top"
??CONNDATA_set2Top??rT SYMBOL "??rT", CONNDATA_set2Top
??get_host_from_url??rA SYMBOL "??rA", get_host_from_url

        EXTERN get_host_from_url
        FUNCTION get_host_from_url,0202H


        RSEG DATA_I:DATA:SORT:NOROOT(2)
connection_list:
        DS8 8
        REQUIRE `?<Initializer for connection_list>`

        RSEG DATA_Z:DATA:SORT:NOROOT(2)
ALLTOTALCONNECTIONS:
        DS8 4

        RSEG DATA_Z:DATA:SORT:NOROOT(2)
ALLTOTALRECEIVED:
        DS8 4

        RSEG DATA_Z:DATA:SORT:NOROOT(2)
ALLTOTALSENDED:
        DS8 4

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock0 Using cfiCommon0
        CFI NoFunction
        THUMB
??CONNDATA_new??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock0
        REQUIRE CONNDATA_new

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock1 Using cfiCommon1
        CFI Function CONNDATA_new
        ARM
CONNDATA_new:
        PUSH     {R4-R8,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R8 Frame(CFA, -8)
        CFI R7 Frame(CFA, -12)
        CFI R6 Frame(CFA, -16)
        CFI R5 Frame(CFA, -20)
        CFI R4 Frame(CFA, -24)
        CFI CFA R13+24
        MOV      R5,R0
        MOV      R6,R1
        MOV      R0,#+156
        SWI      +20
        MOV      R4,R0
        LDR      R0,??DataTable7  ;; connection_list
        STR      R4,[R4, #+0]
        STR      R4,[R4, #+4]
        LDR      R1,[R0, #+0]
        MVN      R7,#+0
        STR      R4,[R1, #+4]
        STR      R1,[R4, #+0]
        STR      R0,[R4, #+4]
        STR      R4,[R0, #+0]
        MOV      R1,R5
        ADD      R0,R4,#+12
        _BLF     get_host_from_url,??get_host_from_url??rA
        MOV      R0,R5
        SWI      +27
        ADD      R0,R0,#+1
        SWI      +20
        STR      R0,[R4, #+8]
        MOV      R1,R5
        SWI      +26
        LDR      R1,??CONNDATA_new_0  ;; `?<Constant "https://">`
        STR      R7,[R4, #+76]
        STR      R7,[R4, #+84]
        MOV      R8,#+0
        STR      R8,[R4, #+88]
        MOV      R2,#+8
        MOV      R0,R5
        SWI      +277
        CMP      R0,#+0
        MOVEQ    R0,#+187
        ORREQ    R0,R0,#0x100
        MOVNE    R0,#+80
        STRH     R0,[R4, #+80]
        STR      R6,[R4, #+100]
        STR      R8,[R4, #+92]
        MOV      R0,#+3
        STR      R0,[R4, #+96]
        STR      R8,[R4, #+104]
        STR      R8,[R4, #+108]
        STR      R8,[R4, #+144]
        STR      R8,[R4, #+152]
        STR      R7,[R4, #+148]
        MOV      R0,R4
        POP      {R4-R8,PC}       ;; return
        DATA
??CONNDATA_new_0:
        DC32     `?<Constant "https://">`
        CFI EndBlock cfiBlock1

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock2 Using cfiCommon0
        CFI NoFunction
        THUMB
??CONNDATA_free??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock2
        REQUIRE CONNDATA_free

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock3 Using cfiCommon1
        CFI Function CONNDATA_free
        ARM
CONNDATA_free:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        MOV      R4,R0
        LDR      R0,[R4, #+0]
        LDR      R1,[R4, #+4]
        STR      R1,[R0, #+4]
        STR      R0,[R1, #+0]
        MOV      R0,#+0
        STR      R0,[R4, #+0]
        STR      R0,[R4, #+4]
        LDR      R0,[R4, #+8]
        SWI      +21
        MOV      R0,R4
        SWI      +21
        POP      {R4,PC}          ;; return
        CFI EndBlock cfiBlock3

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock4 Using cfiCommon0
        CFI NoFunction
        THUMB
??CONNDATA_getTop??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock4
        REQUIRE CONNDATA_getTop

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock5 Using cfiCommon1
        CFI Function CONNDATA_getTop
        ARM
CONNDATA_getTop:
        LDR      R1,??DataTable7  ;; connection_list
        LDR      R0,[R1, #+0]
        CMP      R0,R1
        MOVEQ    R0,#+0
        BX       LR               ;; return
        CFI EndBlock cfiBlock5

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock6 Using cfiCommon0
        CFI NoFunction
        THUMB
??CONNDATA_set2Top??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock6
        REQUIRE CONNDATA_set2Top

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock7 Using cfiCommon1
        CFI Function CONNDATA_set2Top
        ARM
CONNDATA_set2Top:
        LDR      R1,??DataTable7  ;; connection_list
        LDR      R2,[R1, #+0]
        LDR      R3,[R1, #+4]
        STR      R3,[R2, #+4]
        STR      R2,[R3, #+0]
        LDR      R2,[R0, #+0]
        STR      R1,[R2, #+4]
        STR      R2,[R1, #+0]
        STR      R0,[R1, #+4]
        STR      R1,[R0, #+0]
        BX       LR               ;; return
        CFI EndBlock cfiBlock7

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock8 Using cfiCommon0
        CFI NoFunction
        THUMB
??CONNDATA_findBySock??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock8
        REQUIRE CONNDATA_findBySock

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock9 Using cfiCommon1
        CFI Function CONNDATA_findBySock
        ARM
CONNDATA_findBySock:
        LDR      R2,??DataTable7  ;; connection_list
        LDR      R1,[R2, #+0]
        B        ??CONNDATA_findBySock_0
??CONNDATA_findBySock_1:
        LDR      R1,[R1, #+0]
??CONNDATA_findBySock_0:
        CMP      R1,R2
        BEQ      ??CONNDATA_findBySock_2
        LDR      R3,[R1, #+76]
        CMP      R3,R0
        BNE      ??CONNDATA_findBySock_1
        B        ?Subroutine11
??CONNDATA_findBySock_2:
        B        ?Subroutine10
        CFI EndBlock cfiBlock9

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock10 Using cfiCommon0
        CFI NoFunction
        THUMB
??CONNDATA_findBySSL??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock10
        REQUIRE CONNDATA_findBySSL

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock11 Using cfiCommon1
        CFI Function CONNDATA_findBySSL
        ARM
CONNDATA_findBySSL:
        LDR      R2,??DataTable7  ;; connection_list
        LDR      R1,[R2, #+0]
        B        ??CONNDATA_findBySSL_0
??CONNDATA_findBySSL_1:
        LDR      R1,[R1, #+0]
??CONNDATA_findBySSL_0:
        CMP      R1,R2
        BEQ      ??CONNDATA_findBySSL_2
        LDR      R3,[R1, #+144]
        CMP      R3,R0
        BNE      ??CONNDATA_findBySSL_1
        B        ?Subroutine11
??CONNDATA_findBySSL_2:
        B        ?Subroutine10
        CFI EndBlock cfiBlock11

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock12 Using cfiCommon1
        CFI NoFunction
        ARM
?Subroutine11:
        MOV      R0,R1
        BX       LR
        CFI EndBlock cfiBlock12

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock13 Using cfiCommon1
        CFI NoFunction
        ARM
?Subroutine10:
        MOV      R0,#+0
        BX       LR               ;; return
        CFI EndBlock cfiBlock13

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock14 Using cfiCommon0
        CFI NoFunction
        THUMB
??CONNDATA_findBySession??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock14
        REQUIRE CONNDATA_findBySession

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock15 Using cfiCommon1
        CFI Function CONNDATA_findBySession
        ARM
CONNDATA_findBySession:
        LDR      R2,??DataTable7  ;; connection_list
        LDR      R1,[R2, #+0]
        B        ??CONNDATA_findBySession_0
??CONNDATA_findBySession_1:
        LDR      R1,[R1, #+0]
??CONNDATA_findBySession_0:
        CMP      R1,R2
        BEQ      ??CONNDATA_findBySession_2
        LDR      R3,[R1, #+152]
        CMP      R3,R0
        BNE      ??CONNDATA_findBySession_1
        B        ?Subroutine11
??CONNDATA_findBySession_2:
        B        ?Subroutine10
        CFI EndBlock cfiBlock15

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock16 Using cfiCommon0
        CFI NoFunction
        THUMB
??CONNDATA_findByHostname??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock16
        REQUIRE CONNDATA_findByHostname

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock17 Using cfiCommon1
        CFI Function CONNDATA_findByHostname
        ARM
CONNDATA_findByHostname:
        PUSH     {R4-R6,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R6 Frame(CFA, -8)
        CFI R5 Frame(CFA, -12)
        CFI R4 Frame(CFA, -16)
        CFI CFA R13+16
        LDR      R5,??DataTable7  ;; connection_list
        MOV      R4,R0
        LDR      R6,[R5, #+0]
        B        ??CONNDATA_findByHostname_0
??CONNDATA_findByHostname_1:
        LDR      R6,[R6, #+0]
??CONNDATA_findByHostname_0:
        CMP      R6,R5
        BEQ      ??CONNDATA_findByHostname_2
        MOV      R1,R4
        ADD      R0,R6,#+12
        SWI      +25
        CMP      R0,#+0
        BNE      ??CONNDATA_findByHostname_1
        MOV      R0,R6
        POP      {R4-R6,PC}
??CONNDATA_findByHostname_2:
        MOV      R0,#+0
        POP      {R4-R6,PC}       ;; return
        CFI EndBlock cfiBlock17

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock18 Using cfiCommon0
        CFI NoFunction
        THUMB
??CONNDATA_findByURL??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock18
        REQUIRE CONNDATA_findByURL

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock19 Using cfiCommon1
        CFI Function CONNDATA_findByURL
        ARM
CONNDATA_findByURL:
        PUSH     {LR}
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+4
        SUB      SP,SP,#+64
        CFI CFA R13+68
        MOV      R2,#+0
        STRB     R2,[SP, #+0]
        MOV      R1,R0
        MOV      R0,SP
        _BLF     get_host_from_url,??get_host_from_url??rA
        MOV      R0,SP
        BL       CONNDATA_findByHostname
        ADD      SP,SP,#+64
        CFI CFA R13+4
        POP      {PC}             ;; return
        CFI EndBlock cfiBlock19

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock20 Using cfiCommon0
        CFI NoFunction
        THUMB
??CONNDATA_findByDNR??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock20
        REQUIRE CONNDATA_findByDNR

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock21 Using cfiCommon1
        CFI Function CONNDATA_findByDNR
        ARM
CONNDATA_findByDNR:
        LDR      R2,??DataTable7  ;; connection_list
        LDR      R1,[R2, #+0]
        B        ??CONNDATA_findByDNR_0
??CONNDATA_findByDNR_1:
        LDR      R1,[R1, #+0]
??CONNDATA_findByDNR_0:
        CMP      R1,R2
        BEQ      ??CONNDATA_findByDNR_2
        LDR      R3,[R1, #+92]
        CMP      R3,R0
        BNE      ??CONNDATA_findByDNR_1
        B        ?Subroutine11
??CONNDATA_findByDNR_2:
        B        ?Subroutine10
        CFI EndBlock cfiBlock21

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable7:
        DC32     connection_list

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock22 Using cfiCommon1
        CFI NoFunction
        ARM
??get_host_from_url??rA:
        LDR      R12,??Subroutine12_0  ;; get_host_from_url
        BX       R12
        DATA
??Subroutine12_0:
        DC32     get_host_from_url
        CFI EndBlock cfiBlock22

        RSEG DATA_ID:CONST:SORT:NOROOT(2)
`?<Initializer for connection_list>`:
        DATA
        DC32 connection_list, connection_list

        RSEG INITTAB:CODE:ROOT(2)
        DATA
?init?tab?DATA_Z:
        DCD      sfe(DATA_Z) - sfb(DATA_Z), sfb(DATA_Z), sfb(DATA_Z)

        RSEG DATA_ID:CONST:SORT:NOROOT(2)
`?*?DATA_ID`:

        RSEG INITTAB:CODE:ROOT(2)
        DATA
?init?tab?DATA_I:
        DCD      sfe(DATA_I) - sfb(DATA_I), sfb(DATA_I), sfb(DATA_ID)

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant "https://">`:
        DATA
        DC8 "https://"
        DC8 0, 0, 0

        END
// 
// 680 bytes in segment CODE
//  12 bytes in segment DATA_C
//   8 bytes in segment DATA_I
//   8 bytes in segment DATA_ID
//  12 bytes in segment DATA_Z
//  24 bytes in segment INITTAB
// 
// 628 bytes of CODE  memory (+ 76 bytes shared)
//  20 bytes of CONST memory
//  20 bytes of DATA  memory
//
//Errors: none
//Warnings: none
