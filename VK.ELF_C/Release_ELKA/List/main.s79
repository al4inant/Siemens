//////////////////////////////////////////////////////////////////////////////
//                                                                           /
// IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION   16/Feb/2023  22:41:17 /
// Copyright 1999-2005 IAR Systems. All rights reserved.                     /
//                                                                           /
//    Cpu mode        =  interwork                                           /
//    Endian          =  little                                              /
//    Stack alignment =  4                                                   /
//    Source file     =  D:\Users\alfinant\Documents\Siemens\Dev\IAR\VK.ELF_ /
//                       C\main.c                                            /
//    Command line    =  D:\Users\alfinant\Documents\Siemens\Dev\IAR\VK.ELF_ /
//                       C\main.c -D NEWSGOLD -D ELKA -D DEBUG -lCN          /
//                       D:\Users\alfinant\Documents\Siemens\Dev\IAR\VK.ELF_ /
//                       C\Release_ELKA\List\ -la                            /
//                       D:\Users\alfinant\Documents\Siemens\Dev\IAR\VK.ELF_ /
//                       C\Release_ELKA\List\ -o D:\Users\alfinant\Documents /
//                       \Siemens\Dev\IAR\VK.ELF_C\Release_ELKA\Obj\ -z9     /
//                       --cpu_mode arm --endian little --cpu ARM926EJ-S     /
//                       --stack_align 4 --interwork --diag_suppress Pe301   /
//                       -e --fpu None --dlib_config                         /
//                       D:\Users\alfinant\Documents\Siemens\IAR\ARM\LIB\dl5 /
//                       tpainl8n.h -I D:\Users\alfinant\Documents\Siemens\I /
//                       AR\ARM\INC\ --inline_threshold=2                    /
//    List file       =  D:\Users\alfinant\Documents\Siemens\Dev\IAR\VK.ELF_ /
//                       C\Release_ELKA\List\main.s79                        /
//                                                                           /
//                                                                           /
//////////////////////////////////////////////////////////////////////////////

        NAME main

        RTMODEL "StackAlign4", "USED"
        RTMODEL "__cpu_mode", "__pcs__interwork"
        RTMODEL "__data_model", "absolute"
        RTMODEL "__dlib_file_descriptor", "0"
        RTMODEL "__endian", "little"
        RTMODEL "__rt_version", "6"

        RSEG CSTACK:DATA:NOROOT(2)
        RSEG ELFBEGIN:DATA:REORDER:NOROOT(0)

        PUBWEAK `?*?DATA_ID`
        MULTWEAK ??AnimWidgetHandler??rA
        MULTWEAK ??AnimWidget_Close??rA
        MULTWEAK ??CheckDoubleRun??rT
        MULTWEAK ??Cookies_SaveAndFree??rA
        MULTWEAK ??CreateIMGHDRFromFileAsync??rA
        MULTWEAK ??CreateLoginDialog??rA
        MULTWEAK ??CreateMainMenu??rA
??DataTable0 EQU 0
??DataTable1 EQU 0
??DataTable10 EQU 0
??DataTable12 EQU 0
??DataTable14 EQU 0
??DataTable15 EQU 0
??DataTable16 EQU 0
??DataTable17 EQU 0
??DataTable18 EQU 0
??DataTable19 EQU 0
??DataTable2 EQU 0
??DataTable20 EQU 0
??DataTable21 EQU 0
??DataTable22 EQU 0
??DataTable23 EQU 0
??DataTable24 EQU 0
??DataTable25 EQU 0
??DataTable26 EQU 0
??DataTable27 EQU 0
??DataTable28 EQU 0
??DataTable29 EQU 0
??DataTable3 EQU 0
??DataTable30 EQU 0
??DataTable31 EQU 0
??DataTable36 EQU 0
??DataTable37 EQU 0
??DataTable38 EQU 0
??DataTable39 EQU 0
??DataTable4 EQU 0
??DataTable40 EQU 0
??DataTable41 EQU 0
??DataTable43 EQU 0
??DataTable44 EQU 0
??DataTable5 EQU 0
??DataTable51 EQU 0
??DataTable52 EQU 0
??DataTable6 EQU 0
??DataTable7 EQU 0
??DataTable8 EQU 0
        MULTWEAK ??ElfKiller??rT
        MULTWEAK ??InitConfig??rA
        MULTWEAK ??LoadDynTheme??rA
        MULTWEAK ??LoadSavedDialogs??rT
        MULTWEAK ??LoadSavedGroups??rT
        MULTWEAK ??LoadUserPhoto??rT
        MULTWEAK ??Logout??rT
        MULTWEAK ??ParseHeader??rA
        MULTWEAK ??Play??rT
        MULTWEAK ??RefreshDialogsMenu??rA
        MULTWEAK ??RefreshGroupsMenu??rA
        MULTWEAK ??SMART_REDRAW??rA
        MULTWEAK ??del_Dialogs??rA
        MULTWEAK ??del_Groups??rA
        MULTWEAK ??del_Profiles??rA
        MULTWEAK ??end_socket??rA
        MULTWEAK ??end_socket_work??rA
        MULTWEAK ??end_ssl??rA
        MULTWEAK ??end_ssl_work??rA
        MULTWEAK ??get_DialogsCount??rA
        MULTWEAK ??get_GroupsCount??rA
        MULTWEAK ??kill_data??rA
        MULTWEAK ??main??rT
        MULTWEAK ??parse_answer_auth_direct??rA
        MULTWEAK ??parse_answer_groups_get??rA
        MULTWEAK ??parse_answer_messages_getConversations??rA
        MULTWEAK ??parse_answer_messages_getLongPollServer??rA
        MULTWEAK ??set_DialogsCount??rA
        MULTWEAK ??set_GroupsCount??rA
        MULTWEAK ??socket_work_init??rA
        MULTWEAK ??ssl_socket_msg_handler??rA
        MULTWEAK ??startApp??rT
        MULTWEAK ??stricmp??rA
        MULTWEAK ??tmr_check_new_msg_handler??rT
        MULTWEAK ??url_messages_getLongPollHistory??rA
        MULTWEAK ??url_messages_getLongPollServer??rA
        MULTWEAK ??url_stats_track_visitor??rA
        PUBWEAK ?init?tab?DATA_I
        PUBWEAK ?init?tab?DATA_Z
        PUBLIC CheckDoubleRun
        FUNCTION CheckDoubleRun,0603H
        LOCFRAME CSTACK, 8, STACK
        FUNCTION DoError,0203H
        LOCFRAME CSTACK, 4, STACK
        PUBLIC ElfKiller
        FUNCTION ElfKiller,0603H
        LOCFRAME CSTACK, 4, STACK
        FUNCTION HandleObsError,0603H
        LOCFRAME CSTACK, 8, STACK
        FUNCTION HandleObsFrameUpdate,0603H
        LOCFRAME CSTACK, 28, STACK
        PUBLIC LoadSavedDialogs
        FUNCTION LoadSavedDialogs,0201H
        LOCFRAME CSTACK, 192, STACK
        PUBLIC LoadSavedGroups
        FUNCTION LoadSavedGroups,0201H
        LOCFRAME CSTACK, 192, STACK
        PUBLIC LoadUserPhoto
        FUNCTION LoadUserPhoto,0201H
        LOCFRAME CSTACK, 200, STACK
        PUBLIC Logout
        FUNCTION Logout,0201H
        LOCFRAME CSTACK, 8, STACK
        FUNCTION MainProcess,0203H
        LOCFRAME CSTACK, 44, STACK
        PUBLIC Play
        FUNCTION Play,0203H
        LOCFRAME CSTACK, 236, STACK
        FUNCTION SaveDialogs,0203H
        LOCFRAME CSTACK, 276, STACK
        FUNCTION SaveGroups,0203H
        LOCFRAME CSTACK, 276, STACK
auth_state EQU 0
        PUBLIC csm
        FUNCTION del_token,0201H
        LOCFRAME CSTACK, 264, STACK
        PUBLIC ipc
        PUBLIC ipc_my_name
        PUBLIC ipc_xtask_name
        PUBLIC main
        FUNCTION main,0a03H
        LOCFRAME CSTACK, 72, STACK
        PUBLIC maincsm_id
        FUNCTION maincsm_onclose,0603H
        LOCFRAME CSTACK, 4, STACK
        FUNCTION maincsm_oncreate,0603H
        LOCFRAME CSTACK, 4, STACK
        FUNCTION maincsm_onmessage,0603H
        LOCFRAME CSTACK, 28, STACK
        FUNCTION save_token,0201H
        LOCFRAME CSTACK, 272, STACK
        FUNCTION socket_data_read_handler,0603H
        LOCFRAME CSTACK, 48, STACK
        FUNCTION socket_error_handler,0603H
        LOCFRAME CSTACK, 8, STACK
        FUNCTION socket_remote_closed_handler,0603H
        PUBLIC startApp
        FUNCTION startApp,0203H
        LOCFRAME CSTACK, 192, STACK
        PUBLIC tmr_check_new_msg_handler
        FUNCTION tmr_check_new_msg_handler,0601H
        LOCFRAME CSTACK, 20, STACK
        
        CFI Names cfiNames0
        CFI StackFrame CFA R13 HUGEDATA
        CFI Resource R0:32, R1:32, R2:32, R3:32, R4:32, R5:32, R6:32, R7:32
        CFI Resource R8:32, R9:32, R10:32, R11:32, R12:32, CPSR:32, R13:32
        CFI Resource R14:32, SPSR:32
        CFI VirtualResource ?RET:32
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 2
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon0
        
        
        CFI Common cfiCommon1 Using cfiNames0
        CFI CodeAlign 4
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon1
        
AnimWidgetHandler   SYMBOL "AnimWidgetHandler"
AnimWidget_Close    SYMBOL "AnimWidget_Close"
Cookies_SaveAndFree SYMBOL "Cookies_SaveAndFree"
CreateIMGHDRFromFileAsync SYMBOL "CreateIMGHDRFromFileAsync"
CreateLoginDialog   SYMBOL "CreateLoginDialog"
CreateMainMenu      SYMBOL "CreateMainMenu"
InitConfig          SYMBOL "InitConfig"
LoadDynTheme        SYMBOL "LoadDynTheme"
ParseHeader         SYMBOL "ParseHeader"
RefreshDialogsMenu  SYMBOL "RefreshDialogsMenu"
RefreshGroupsMenu   SYMBOL "RefreshGroupsMenu"
SMART_REDRAW        SYMBOL "SMART_REDRAW"
del_Dialogs         SYMBOL "del_Dialogs"
del_Groups          SYMBOL "del_Groups"
del_Profiles        SYMBOL "del_Profiles"
end_socket          SYMBOL "end_socket"
end_socket_work     SYMBOL "end_socket_work"
end_ssl             SYMBOL "end_ssl"
end_ssl_work        SYMBOL "end_ssl_work"
get_DialogsCount    SYMBOL "get_DialogsCount"
get_GroupsCount     SYMBOL "get_GroupsCount"
kill_data           SYMBOL "kill_data"
parse_answer_auth_direct SYMBOL "parse_answer_auth_direct"
parse_answer_groups_get SYMBOL "parse_answer_groups_get"
parse_answer_messages_getConversations SYMBOL "parse_answer_messages_getConversations"
parse_answer_messages_getLongPollServer SYMBOL "parse_answer_messages_getLongPollServer"
set_DialogsCount    SYMBOL "set_DialogsCount"
set_GroupsCount     SYMBOL "set_GroupsCount"
socket_work_init    SYMBOL "socket_work_init"
ssl_socket_msg_handler SYMBOL "ssl_socket_msg_handler"
stricmp             SYMBOL "stricmp"
url_messages_getLongPollHistory SYMBOL "url_messages_getLongPollHistory"
url_messages_getLongPollServer SYMBOL "url_messages_getLongPollServer"
url_stats_track_visitor SYMBOL "url_stats_track_visitor"
??AnimWidgetHandler??rA SYMBOL "??rA", AnimWidgetHandler
??AnimWidget_Close??rA SYMBOL "??rA", AnimWidget_Close
CheckDoubleRun      SYMBOL "CheckDoubleRun"
??CheckDoubleRun??rT SYMBOL "??rT", CheckDoubleRun
??Cookies_SaveAndFree??rA SYMBOL "??rA", Cookies_SaveAndFree
??CreateIMGHDRFromFileAsync??rA SYMBOL "??rA", CreateIMGHDRFromFileAsync
??CreateLoginDialog??rA SYMBOL "??rA", CreateLoginDialog
??CreateMainMenu??rA SYMBOL "??rA", CreateMainMenu
ElfKiller           SYMBOL "ElfKiller"
??ElfKiller??rT     SYMBOL "??rT", ElfKiller
??InitConfig??rA    SYMBOL "??rA", InitConfig
??LoadDynTheme??rA  SYMBOL "??rA", LoadDynTheme
LoadSavedDialogs    SYMBOL "LoadSavedDialogs"
??LoadSavedDialogs??rT SYMBOL "??rT", LoadSavedDialogs
LoadSavedGroups     SYMBOL "LoadSavedGroups"
??LoadSavedGroups??rT SYMBOL "??rT", LoadSavedGroups
LoadUserPhoto       SYMBOL "LoadUserPhoto"
??LoadUserPhoto??rT SYMBOL "??rT", LoadUserPhoto
Logout              SYMBOL "Logout"
??Logout??rT        SYMBOL "??rT", Logout
??ParseHeader??rA   SYMBOL "??rA", ParseHeader
Play                SYMBOL "Play"
??Play??rT          SYMBOL "??rT", Play
??RefreshDialogsMenu??rA SYMBOL "??rA", RefreshDialogsMenu
??RefreshGroupsMenu??rA SYMBOL "??rA", RefreshGroupsMenu
??SMART_REDRAW??rA  SYMBOL "??rA", SMART_REDRAW
??del_Dialogs??rA   SYMBOL "??rA", del_Dialogs
??del_Groups??rA    SYMBOL "??rA", del_Groups
??del_Profiles??rA  SYMBOL "??rA", del_Profiles
??end_socket??rA    SYMBOL "??rA", end_socket
??end_socket_work??rA SYMBOL "??rA", end_socket_work
??end_ssl??rA       SYMBOL "??rA", end_ssl
??end_ssl_work??rA  SYMBOL "??rA", end_ssl_work
??get_DialogsCount??rA SYMBOL "??rA", get_DialogsCount
??get_GroupsCount??rA SYMBOL "??rA", get_GroupsCount
??kill_data??rA     SYMBOL "??rA", kill_data
main                SYMBOL "main"
??main??rT          SYMBOL "??rT", main
??parse_answer_auth_direct??rA SYMBOL "??rA", parse_answer_auth_direct
??parse_answer_groups_get??rA SYMBOL "??rA", parse_answer_groups_get
??parse_answer_messages_getConversations??rA SYMBOL "??rA", parse_answer_messages_getConversations
??parse_answer_messages_getLongPollServer??rA SYMBOL "??rA", parse_answer_messages_getLongPollServer
??set_DialogsCount??rA SYMBOL "??rA", set_DialogsCount
??set_GroupsCount??rA SYMBOL "??rA", set_GroupsCount
??socket_work_init??rA SYMBOL "??rA", socket_work_init
??ssl_socket_msg_handler??rA SYMBOL "??rA", ssl_socket_msg_handler
startApp            SYMBOL "startApp"
??startApp??rT      SYMBOL "??rT", startApp
??stricmp??rA       SYMBOL "??rA", stricmp
tmr_check_new_msg_handler SYMBOL "tmr_check_new_msg_handler"
??tmr_check_new_msg_handler??rT SYMBOL "??rT", tmr_check_new_msg_handler
??url_messages_getLongPollHistory??rA SYMBOL "??rA", url_messages_getLongPollHistory
??url_messages_getLongPollServer??rA SYMBOL "??rA", url_messages_getLongPollServer
??url_stats_track_visitor??rA SYMBOL "??rA", url_stats_track_visitor

        EXTERN ACCESS_TOKEN
        EXTERN APP_DIR
        EXTERN AnimWidgetHandler
        FUNCTION AnimWidgetHandler,0202H
        EXTERN AnimWidget_Close
        FUNCTION AnimWidget_Close,0200H
        EXTERN Cookies_SaveAndFree
        FUNCTION Cookies_SaveAndFree,0600H
        EXTERN CreateIMGHDRFromFileAsync
        FUNCTION CreateIMGHDRFromFileAsync,0202H
        EXTERN CreateLoginDialog
        FUNCTION CreateLoginDialog,0200H
        EXTERN CreateMainMenu
        FUNCTION CreateMainMenu,0200H
        EXTERN FreeDynSmiles
        FUNCTION FreeDynSmiles,0600H
        EXTERN FreeDynTheme
        FUNCTION FreeDynTheme,0600H
        EXTERN HTTP_CONNECTION
        EXTERN HTTP_CONTENT_LENGTH
        EXTERN HTTP_HEADER_LENGTH
        EXTERN HTTP_STATUS
        EXTERN HTTP_URL
        EXTERN HttpSendReq
        FUNCTION HttpSendReq,0602H
        EXTERN INET_PROCESS
        EXTERN InitConfig
        FUNCTION InitConfig,0200H
        EXTERN LoadDynTheme
        FUNCTION LoadDynTheme,0200H
        EXTERN LoadImages
        FUNCTION LoadImages,0600H
        EXTERN LoadSmiles
        FUNCTION LoadSmiles,0600H
        EXTERN PNGLIST_Free
        FUNCTION PNGLIST_Free,0600H
        EXTERN ParseHeader
        FUNCTION ParseHeader,0200H
        EXTERN RECONNECT_TIME
        EXTERN RefreshDialogsMenu
        FUNCTION RefreshDialogsMenu,0200H
        EXTERN RefreshGroupsMenu
        FUNCTION RefreshGroupsMenu,0200H
        EXTERN SMART_REDRAW
        FUNCTION SMART_REDRAW,0200H
        EXTERN del_Dialogs
        FUNCTION del_Dialogs,0200H
        EXTERN del_Groups
        FUNCTION del_Groups,0200H
        EXTERN del_Profiles
        FUNCTION del_Profiles,0200H
        EXTERN dialogs
        EXTERN end_socket
        FUNCTION end_socket,0202H
        EXTERN end_socket_work
        FUNCTION end_socket_work,0200H
        EXTERN end_ssl
        FUNCTION end_ssl,0202H
        EXTERN end_ssl_work
        FUNCTION end_ssl_work,0200H
        EXTERN err_msg
        EXTERN get_DialogsCount
        FUNCTION get_DialogsCount,0200H
        EXTERN get_GroupsCount
        FUNCTION get_GroupsCount,0200H
        EXTERN kill_data
        FUNCTION kill_data,0202H
        EXTERN logmsg
        EXTERN lp_ts
        EXTERN my_groups
        EXTERN parse_answer_auth_direct
        FUNCTION parse_answer_auth_direct,0200H
        EXTERN parse_answer_groups_get
        FUNCTION parse_answer_groups_get,0202H
        EXTERN parse_answer_messages_getConversations
        FUNCTION parse_answer_messages_getConversations,0202H
        EXTERN parse_answer_messages_getLongPollServer
        FUNCTION parse_answer_messages_getLongPollServer,0200H
        EXTERN recv_buf
        EXTERN set_DialogsCount
        FUNCTION set_DialogsCount,0202H
        EXTERN set_GroupsCount
        FUNCTION set_GroupsCount,0202H
        EXTERN sndVolume
        EXTERN socket_work_init
        FUNCTION socket_work_init,0202H
        EXTERN soundEnabled
        EXTERN ssl_socket_msg_handler
        FUNCTION ssl_socket_msg_handler,0202H
        EXTERN stricmp
        FUNCTION stricmp,0202H
        EXTERN successed_config_filename
        EXTERN url_messages_getLongPollHistory
        FUNCTION url_messages_getLongPollHistory,0202H
        EXTERN url_messages_getLongPollServer
        FUNCTION url_messages_getLongPollServer,0202H
        EXTERN url_stats_track_visitor
        FUNCTION url_stats_track_visitor,0200H


        RSEG DATA_C:CONST:SORT:NOROOT(2)
        DATA
        DC8 "jpg"

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant "%stoken">`:
        DATA
        DC8 "%stoken"

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant "cJSON parse error">`:
        DATA
        DC8 "cJSON parse error"
        DC8 0, 0
        DC8 "Error=%d"
        DC8 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant "TEST_SSL_CON ok!">`:
        DATA
        DC8 "TEST_SSL_CON ok!"
        DC8 0, 0, 0
        DC8 "Token readed!"
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
ipc_my_name:
        DATA
        DC8 "VK"
        DC8 0
        DC8 "https://"
        DC8 0, 0, 0
        DC8 "VK.ELF:\012\352\356\355\364\350\343 \356\341\355\356\342\353\345\355!"
        DC8 0, 0, 0
        DC8 "\317\356\353\363\367\345\355 \355\345 HTTP \364\356\360\354\340\362"
        DC8 0
        DC8 "Bad HTTP status: %d"
ipc_xtask_name:
        DC8 "XTask"
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant "ERROR_READ_TIMEOUT">`:
        DATA
        DC8 "ERROR_READ_TIMEOUT"
        DC8 0
        DC8 "CONNECT_FAULT"
        DC8 0, 0
        DC8 "ERROR_CREATE_SOCK"
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(0)
        DATA
        DC8 ""

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant ".png">`:
        DATA
        DC8 ".png"
        DC8 0, 0, 0
        DC8 "%scache\\%d.%s"
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
        DATA
        DC8 "png"

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock0 Using cfiCommon0
        CFI NoFunction
        THUMB
??tmr_check_new_msg_handler??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock0
        REQUIRE tmr_check_new_msg_handler

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock1 Using cfiCommon1
        CFI Function tmr_check_new_msg_handler
        ARM
tmr_check_new_msg_handler:
        PUSH     {R0,R4-R6,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R6 Frame(CFA, -8)
        CFI R5 Frame(CFA, -12)
        CFI R4 Frame(CFA, -16)
        CFI CFA R13+20
        LDR      R4,??tmr_check_new_msg_handler_0+0x4  ;; HttpSendReq
        LDR      R5,??DataTable42  ;; ipc
        LDR      R6,??DataTable35  ;; INET_PROCESS
        LDR      R0,[R5, #+12]
        CMP      R0,#+0
        BNE      ??tmr_check_new_msg_handler_1
        MOV      R0,#+8
        STR      R0,[R6, #+0]
        _BLF     url_stats_track_visitor,??url_stats_track_visitor??rA
        MOV      R1,R0
        MOV      R0,R4
        SWI      +369
??tmr_check_new_msg_handler_1:
        LDR      R0,[R6, #+0]
        CMP      R0,#+0
        BNE      ??tmr_check_new_msg_handler_2
        LDR      R0,??tmr_check_new_msg_handler_0+0x8  ;; lp_ts
        LDR      R0,[R0, #+0]
        CMP      R0,#+0
        BNE      ??tmr_check_new_msg_handler_3
        MOV      R0,#+10
        STR      R0,[R6, #+0]
        MOV      R1,#+0
        MOV      R0,#+1
        _BLF     url_messages_getLongPollServer,??url_messages_getLongPollServer??rA
        B        ??tmr_check_new_msg_handler_4
??tmr_check_new_msg_handler_3:
        MOV      R0,#+11
        STR      R0,[R6, #+0]
        ADR      R0,??tmr_check_new_msg_handler_0  ;; ""
        _BLF     url_messages_getLongPollHistory,??url_messages_getLongPollHistory??rA
??tmr_check_new_msg_handler_4:
        MOV      R1,R0
        MOV      R0,R4
        SWI      +369
??tmr_check_new_msg_handler_2:
        LDR      R0,??tmr_check_new_msg_handler_0+0xC  ;; RECONNECT_TIME
        LDR      R2,??tmr_check_new_msg_handler_0+0x10  ;; tmr_check_new_msg_handler
        LDR      R0,[R0, #+0]
        MOV      R3,#+216
        MUL      R1,R3,R0
        ADD      R0,R5,#+24
        SWI      +77
        POP      {R0,R4-R6,PC}    ;; return
        DATA
??tmr_check_new_msg_handler_0:
        DC8      "",+0,+0,+0
        DC32     HttpSendReq
        DC32     lp_ts
        DC32     RECONNECT_TIME
        DC32     tmr_check_new_msg_handler
        CFI EndBlock cfiBlock1

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock2 Using cfiCommon0
        CFI NoFunction
        THUMB
??Play??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock2
        REQUIRE Play

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock3 Using cfiCommon1
        CFI Function Play
        ARM
Play:
        PUSH     {R4-R7,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R7 Frame(CFA, -8)
        CFI R6 Frame(CFA, -12)
        CFI R5 Frame(CFA, -16)
        CFI R4 Frame(CFA, -20)
        CFI CFA R13+20
        SUB      SP,SP,#+208
        CFI CFA R13+228
        MOV      R6,R0
        SWI      +110
        CMP      R0,#+0
        BNE      ??Play_0
        LDR      R0,??Play_1      ;; soundEnabled
        LDR      R0,[R0, #+0]
        CMP      R0,#+0
        BEQ      ??Play_0
        MOV      R2,SP
        ADD      R1,SP,#+168
        MOV      R0,R6
        SWI      +132
        CMN      R0,#+1
        BEQ      ??Play_2
        MOV      R0,#+128
        SWI      +293
        MOV      R4,R0
        MOV      R0,#+128
        SWI      +293
        MOV      R5,R0
        MOV      R1,#+92
        MOV      R0,R6
        SWI      +279
        ADD      R7,R0,#+1
        MOV      R2,#+128
        MOV      R1,R7
        MOV      R0,R5
        SWI      +364
        SUB      R7,R7,R6
        MOV      R2,R7
        MOV      R1,R6
        ADD      R0,SP,#+40
        SWI      +278
        MOV      R6,#+0
        ADD      R0,SP,#+40
        STRB     R6,[R7, +R0]
        MOV      R2,#+128
        ADD      R1,SP,#+40
        MOV      R0,R4
        SWI      +364
        MOV      R1,#+36
        ADD      R0,SP,#+4
        SWI      +285
        LDR      R2,??Play_1+0x4  ;; sndVolume
        MOV      R0,#+1
        STRH     R0,[SP, #+4]
        STR      R6,[SP, #+8]
        STR      R6,[SP, #+12]
        LDR      R2,[R2, #+0]
        MOV      R1,#+2
        STR      R2,[SP, #+16]
        STR      R0,[SP, #+24]
        STR      R0,[SP, #+28]
        STR      R1,[SP, #+36]
        SWI      +325
        ADD      R1,SP,#+4
        PUSH     {R1}
        CFI CFA R13+232
        MOV      R3,R0
        MOV      R2,R5
        MOV      R0,#+16
        MOV      R1,#+188
        ORR      R1,R1,#0x7000
        PUSH     {R1}
        CFI CFA R13+236
        MOV      R1,R4
        SWI      +74
        MOV      R0,R4
        SWI      +297
        MOV      R0,R5
        SWI      +297
        MOV      R0,#+1
        ADD      SP,SP,#+8
        CFI CFA R13+228
        B        ??Play_3
??Play_2:
        MOV      R0,#+0
        B        ??Play_3
??Play_0:
        MOV      R0,#+2
??Play_3:
        ADD      SP,SP,#+208      ;; stack cleaning
        CFI CFA R13+20
        POP      {R4-R7,PC}       ;; return
        DATA
??Play_1:
        DC32     soundEnabled
        DC32     sndVolume
        CFI EndBlock cfiBlock3

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock4 Using cfiCommon0
        CFI NoFunction
        THUMB
??LoadUserPhoto??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock4
        REQUIRE LoadUserPhoto

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock5 Using cfiCommon1
        CFI Function LoadUserPhoto
        ARM
LoadUserPhoto:
        PUSH     {R4-R7,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R7 Frame(CFA, -8)
        CFI R6 Frame(CFA, -12)
        CFI R5 Frame(CFA, -16)
        CFI R4 Frame(CFA, -20)
        CFI CFA R13+20
        LDR      R4,??DataTable42  ;; ipc
        SUB      SP,SP,#+172
        CFI CFA R13+192
        LDR      R0,[R4, #+20]
        LDR      R0,[R0, #+56]
        CMP      R0,#+0
        BEQ      ??LoadUserPhoto_0
        LDR      R5,[R0, #+0]
        LDR      R7,??LoadUserPhoto_1+0x8  ;; `?<Constant ".png">`
        B        ??LoadUserPhoto_2
??LoadUserPhoto_3:
        LDR      R5,[R5, #+0]
??LoadUserPhoto_2:
        LDR      R0,[R4, #+20]
        LDR      R1,[R0, #+56]
        CMP      R5,R1
        BEQ      ??LoadUserPhoto_4
        LDR      R0,??DataTable9  ;; dialogs
        CMP      R1,R0
        BNE      ??LoadUserPhoto_3
        LDR      R0,[R5, #+28]
        CMP      R0,#+0
        LDREQ    R0,[R5, #+32]
        CMPEQ    R0,#+0
        MOVNE    R6,R0
        CMPNE    R6,#+0
        LDRNE    R0,[R6, #+28]
        CMPNE    R0,#+0
        BEQ      ??LoadUserPhoto_3
        LDR      R0,[R6, #+36]
        CMP      R0,#+0
        LDREQ    R0,[R6, #+20]
        CMPEQ    R0,#+0
        BNE      ??LoadUserPhoto_3
        LDR      R0,[R6, #+32]
        MOV      R1,R7
        SWI      +280
        LDR      R3,??DataTable32  ;; APP_DIR
        CMP      R0,#+0
        ADRNE    R0,??LoadUserPhoto_1  ;; "png"
        ADREQ    R0,??LoadUserPhoto_1+0x4  ;; "jpg"
        PUSH     {R0}
        CFI CFA R13+196
        LDR      R0,[R6, #+8]
        ADD      R2,R7,#+8
        PUSH     {R0}
        CFI CFA R13+200
        MOV      R1,#+127
        ADD      R0,SP,#+12
        SWI      +283
        ADD      R2,SP,#+8
        ADD      R1,SP,#+140
        ADD      R0,SP,#+12
        SWI      +132
        CMN      R0,#+1
        ADD      SP,SP,#+8
        CFI CFA R13+192
        BEQ      ??LoadUserPhoto_3
        MOV      R3,#+50
        MOV      R2,#+50
        MOV      R1,#+114
        ORR      R1,R1,#0x8000
        ADD      R0,SP,#+4
        _BLF     CreateIMGHDRFromFileAsync,??CreateIMGHDRFromFileAsync??rA
        LDR      R1,[R4, #+20]
        STR      R0,[R1, #+60]
        LDR      R0,[R4, #+20]
        STR      R6,[R0, #+48]
        B        ??LoadUserPhoto_0
??LoadUserPhoto_4:
        MOV      R1,#+0
        STR      R1,[R0, #+56]
??LoadUserPhoto_0:
        B        ?Subroutine24
        DATA
??LoadUserPhoto_1:
        DC8      "png"
        DC8      "jpg"
        DC32     `?<Constant ".png">`
        CFI EndBlock cfiBlock5

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock6 Using cfiCommon0
        CFI NoFunction
        THUMB
??SaveDialogs??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock6
        REQUIRE SaveDialogs

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock7 Using cfiCommon1
        CFI Function SaveDialogs
        ARM
SaveDialogs:
        LDR      R3,??DataTable32  ;; APP_DIR
        LDR      R2,??DataTable11  ;; `?<Constant "%sdialogs.json">`
        B        ?Subroutine25
        CFI EndBlock cfiBlock7

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock8 Using cfiCommon0
        CFI NoFunction
        THUMB
??SaveGroups??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock8
        REQUIRE SaveGroups

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock9 Using cfiCommon1
        CFI Function SaveGroups
        ARM
SaveGroups:
        LDR      R3,??DataTable32  ;; APP_DIR
        LDR      R2,??DataTable13  ;; `?<Constant "%sgroups.json">`
        CFI EndBlock cfiBlock9
        REQUIRE ?Subroutine25
        ;; // Fall through to label ?Subroutine25

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock10 Using cfiCommon1
        CFI NoFunction
        ARM
?Subroutine25:
        PUSH     {R4-R6,LR}
        CFI CFA R13+16
        CFI R4 Frame(CFA, -16)
        CFI R5 Frame(CFA, -12)
        CFI R6 Frame(CFA, -8)
        CFI ?RET Frame(CFA, -4)
        SUB      SP,SP,#+260
        CFI CFA R13+276
        MOV      R4,R0
        MOV      R5,R1
        MOV      R1,#+255
        ADD      R0,SP,#+4
        SWI      +283
        MOV      R3,SP
        MOV      R2,#+384
        MOV      R1,#+2
        ORR      R1,R1,#0x8300
        ADD      R0,SP,#+4
        SWI      +10
        MOV      R6,R0
        CMN      R6,#+1
        BEQ      ??Subroutine25_0
        MOV      R3,SP
        MOV      R2,R5
        MOV      R1,R4
        SWI      +12
        MOV      R1,SP
        MOV      R0,R6
        SWI      +13
??Subroutine25_0:
        ADD      SP,SP,#+260      ;; stack cleaning
        CFI CFA R13+16
        POP      {R4-R6,PC}       ;; return
        CFI EndBlock cfiBlock10

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock11 Using cfiCommon0
        CFI NoFunction
        THUMB
??LoadSavedDialogs??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock11
        REQUIRE LoadSavedDialogs

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock12 Using cfiCommon1
        CFI Function LoadSavedDialogs
        ARM
LoadSavedDialogs:
        LDR      R0,??DataTable9  ;; dialogs
        PUSH     {R4-R6,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R6 Frame(CFA, -8)
        CFI R5 Frame(CFA, -12)
        CFI R4 Frame(CFA, -16)
        CFI CFA R13+16
        SUB      SP,SP,#+176
        CFI CFA R13+192
        LDR      R1,[R0, #+0]
        CMP      R1,R0
        BNE      ??LoadSavedDialogs_0
        LDR      R3,??DataTable32  ;; APP_DIR
        LDR      R2,??DataTable11  ;; `?<Constant "%sdialogs.json">`
        MOV      R1,#+127
        ADD      R0,SP,#+8
        SWI      +283
        MOV      R2,SP
        ADD      R1,SP,#+136
        ADD      R0,SP,#+8
        SWI      +132
        LDR      R4,[SP, #+140]
        CMP      R4,#+1
        BLT      ??LoadSavedDialogs_0
        MOV      R3,SP
        MOV      R2,#+128
        MOV      R1,#+32768
        ADD      R0,SP,#+8
        SWI      +10
        MOV      R5,R0
        CMN      R5,#+1
        BEQ      ??LoadSavedDialogs_0
        MOV      R0,R4
        SWI      +20
        MOV      R6,R0
        MOV      R3,SP
        MOV      R2,R4
        MOV      R1,R6
        MOV      R0,R5
        SWI      +11
        MOV      R1,SP
        MOV      R0,R5
        SWI      +13
        CMP      R6,#+0
        BEQ      ??LoadSavedDialogs_0
        ADD      R1,SP,#+4
        MOV      R0,R6
        _BLF     parse_answer_messages_getConversations,??parse_answer_messages_getConversations??rA
        MOV      R0,R6
        SWI      +21
        _BLF     AnimWidget_Close,??AnimWidget_Close??rA
        _BLF     RefreshDialogsMenu,??RefreshDialogsMenu??rA
??LoadSavedDialogs_0:
        B        ?Subroutine26
        CFI EndBlock cfiBlock12

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable9:
        DC32     dialogs

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable11:
        DC32     `?<Constant "%sdialogs.json">`

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock13 Using cfiCommon0
        CFI NoFunction
        THUMB
??LoadSavedGroups??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock13
        REQUIRE LoadSavedGroups

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock14 Using cfiCommon1
        CFI Function LoadSavedGroups
        ARM
LoadSavedGroups:
        LDR      R0,??Subroutine26_0  ;; my_groups
        PUSH     {R4-R6,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R6 Frame(CFA, -8)
        CFI R5 Frame(CFA, -12)
        CFI R4 Frame(CFA, -16)
        CFI CFA R13+16
        SUB      SP,SP,#+176
        CFI CFA R13+192
        LDR      R1,[R0, #+0]
        CMP      R1,R0
        BNE      ??LoadSavedGroups_0
        LDR      R3,??DataTable32  ;; APP_DIR
        LDR      R2,??DataTable13  ;; `?<Constant "%sgroups.json">`
        MOV      R1,#+127
        ADD      R0,SP,#+8
        SWI      +283
        MOV      R2,SP
        ADD      R1,SP,#+136
        ADD      R0,SP,#+8
        SWI      +132
        LDR      R4,[SP, #+140]
        CMP      R4,#+1
        BLT      ??LoadSavedGroups_1
        MOV      R3,SP
        MOV      R2,#+128
        MOV      R1,#+32768
        ADD      R0,SP,#+8
        SWI      +10
        MOV      R5,R0
        CMN      R5,#+1
        BEQ      ??LoadSavedGroups_1
        MOV      R0,R4
        SWI      +20
        MOV      R6,R0
        MOV      R3,SP
        MOV      R2,R4
        MOV      R1,R6
        MOV      R0,R5
        SWI      +11
        MOV      R1,SP
        MOV      R0,R5
        SWI      +13
        CMP      R6,#+0
        BEQ      ??LoadSavedGroups_1
        ADD      R1,SP,#+4
        MOV      R0,R6
        _BLF     parse_answer_groups_get,??parse_answer_groups_get??rA
        MOV      R0,R6
        SWI      +21
        _BLF     RefreshGroupsMenu,??RefreshGroupsMenu??rA
??LoadSavedGroups_1:
        _BLF     AnimWidget_Close,??AnimWidget_Close??rA
        CFI EndBlock cfiBlock14
??LoadSavedGroups_0:
        REQUIRE ?Subroutine26
        ;; // Fall through to label ?Subroutine26

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock15 Using cfiCommon1
        CFI NoFunction
        CFI CFA R13+192
        CFI R4 Frame(CFA, -16)
        CFI R5 Frame(CFA, -12)
        CFI R6 Frame(CFA, -8)
        CFI ?RET Frame(CFA, -4)
        ARM
?Subroutine26:
        ADD      SP,SP,#+176      ;; stack cleaning
        CFI CFA R13+16
        POP      {R4-R6,PC}       ;; return
        DATA
??Subroutine26_0:
        DC32     my_groups
        CFI EndBlock cfiBlock15

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable13:
        DC32     `?<Constant "%sgroups.json">`

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock16 Using cfiCommon0
        CFI NoFunction
        THUMB
??save_token??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock16
        REQUIRE save_token

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock17 Using cfiCommon1
        CFI Function save_token
        ARM
save_token:
        LDR      R3,??DataTable32  ;; APP_DIR
        LDR      R2,??DataTable33  ;; `?<Constant "%stoken">`
        PUSH     {R4,R5,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R5 Frame(CFA, -8)
        CFI R4 Frame(CFA, -12)
        CFI CFA R13+12
        SUB      SP,SP,#+260
        CFI CFA R13+272
        MOV      R1,#+255
        ADD      R0,SP,#+4
        SWI      +283
        MOV      R3,SP
        MOV      R2,#+384
        MOV      R1,#+2
        ORR      R1,R1,#0x8300
        ADD      R0,SP,#+4
        SWI      +10
        MOV      R4,R0
        CMN      R4,#+1
        BEQ      ??save_token_0
        LDR      R5,??DataTable34  ;; ACCESS_TOKEN
        MOV      R0,R5
        SWI      +27
        MOV      R2,R0
        MOV      R3,SP
        MOV      R1,R5
        MOV      R0,R4
        SWI      +12
        MOV      R1,SP
        MOV      R0,R4
        SWI      +13
??save_token_0:
        ADD      SP,SP,#+260      ;; stack cleaning
        CFI CFA R13+12
        POP      {R4,R5,PC}       ;; return
        CFI EndBlock cfiBlock17

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock18 Using cfiCommon0
        CFI NoFunction
        THUMB
??del_token??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock18
        REQUIRE del_token

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock19 Using cfiCommon1
        CFI Function del_token
        ARM
del_token:
        LDR      R0,??DataTable34  ;; ACCESS_TOKEN
        LDR      R3,??DataTable32  ;; APP_DIR
        LDR      R2,??DataTable33  ;; `?<Constant "%stoken">`
        PUSH     {LR}
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+4
        SUB      SP,SP,#+260
        CFI CFA R13+264
        MOV      R1,#+0
        STRB     R1,[R0, #+0]
        MOV      R1,#+255
        ADD      R0,SP,#+4
        SWI      +283
        MOV      R3,SP
        MOV      R2,#+384
        MOV      R1,#+2
        ORR      R1,R1,#0x8200
        ADD      R0,SP,#+4
        SWI      +10
        CMN      R0,#+1
        BEQ      ??del_token_0
        MOV      R1,SP
        SWI      +13
??del_token_0:
        ADD      SP,SP,#+260      ;; stack cleaning
        CFI CFA R13+4
        POP      {PC}             ;; return
        CFI EndBlock cfiBlock19

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock20 Using cfiCommon0
        CFI NoFunction
        THUMB
??Logout??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock20
        REQUIRE Logout

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock21 Using cfiCommon1
        CFI Function Logout
        ARM
Logout:
        LDR      R0,??DataTable35  ;; INET_PROCESS
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        LDR      R4,??DataTable42  ;; ipc
        MOV      R1,#+0
        STR      R1,[R0, #+0]
        ADD      R0,R4,#+24
        SWI      +396
        BL       del_token
        _BLF     end_ssl_work,??end_ssl_work??rA
        LDR      R0,[R4, #+20]
        LDR      R0,[R0, #+40]
        SWI      +309
        CMP      R0,#+0
        BNE      ??Logout_0
        MOV      R0,#+1
        SWI      +315
??Logout_0:
        LDR      R0,[R4, #+20]
        MOV      R1,#+1
        LDR      R0,[R0, #+40]
        SWI      +317
        _BLF     CreateLoginDialog,??CreateLoginDialog??rA
        LDR      R1,[R4, #+20]
        STR      R0,[R1, #+40]
        POP      {R4,PC}          ;; return
        CFI EndBlock cfiBlock21

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock22 Using cfiCommon0
        CFI NoFunction
        THUMB
??DoError??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock22
        REQUIRE DoError

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock23 Using cfiCommon1
        CFI Function DoError
        ARM
DoError:
        PUSH     {LR}
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+4
        CMP      R0,#+5
        BNE      ??DoError_0
        POP      {LR}             ;; Pop
        CFI ?RET R14
        CFI CFA R13+0
        B        Logout           ;; tailcall
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+4
??DoError_0:
        LDR      R2,??DataTable35  ;; INET_PROCESS
        LDR      R1,??DoError_1   ;; `?<Constant "cJSON parse error">`
        MOV      R3,#+0
        CMN      R0,#+1
        STR      R3,[R2, #+0]
        BEQ      ??DoError_2
        MOV      R2,R0
        LDR      R0,??DataTable47  ;; logmsg
        ADD      R1,R1,#+20
        SWI      +22
        LDR      R1,??DoError_1+0x4  ;; err_msg
??DoError_2:
        MOV      R0,#+1
        SWI      +328
        POP      {PC}             ;; return
        DATA
??DoError_1:
        DC32     `?<Constant "cJSON parse error">`
        DC32     err_msg
        CFI EndBlock cfiBlock23

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock24 Using cfiCommon0
        CFI NoFunction
        THUMB
??MainProcess??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock24
        REQUIRE MainProcess

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock25 Using cfiCommon1
        CFI Function MainProcess
        ARM
MainProcess:
        PUSH     {R0,R1,R4-R11,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R11 Frame(CFA, -8)
        CFI R10 Frame(CFA, -12)
        CFI R9 Frame(CFA, -16)
        CFI R8 Frame(CFA, -20)
        CFI R7 Frame(CFA, -24)
        CFI R6 Frame(CFA, -28)
        CFI R5 Frame(CFA, -32)
        CFI R4 Frame(CFA, -36)
        CFI CFA R13+44
        LDR      R4,??DataTable47  ;; logmsg
        LDR      R10,??DataTable35  ;; INET_PROCESS
        LDR      R5,??MainProcess_0  ;; `?<Constant "TEST_SSL_CON ok!">`
        LDR      R0,[R10, #+0]
        LDR      R6,??DataTable42  ;; ipc
        LDR      R7,??DataTable46  ;; HTTP_HEADER_LENGTH
        LDR      R8,??MainProcess_0+0x4  ;; recv_buf
        LDR      R9,??DataTable48  ;; HTTP_CONTENT_LENGTH
        MOV      R1,#+0
        STR      R1,[SP, #+4]
        MOV      R11,#+0
        SUBS     R0,R0,#+6
        BEQ      ??MainProcess_1
        SUBS     R0,R0,#+2
        BEQ      ??MainProcess_2
        SUBS     R0,R0,#+2
        BEQ      ??MainProcess_3
        SUBS     R0,R0,#+2
        BEQ      ??MainProcess_4
        SUBS     R0,R0,#+9
        BEQ      ??MainProcess_5
        SUBS     R0,R0,#+12
        POPNE    {R0,R1,R4-R11,PC}
        MOV      R1,R5
        MOV      R0,R4
        SWI      +22
        _BLF     SMART_REDRAW,??SMART_REDRAW??rA
        B        ??MainProcess_6
??MainProcess_1:
        _BLF     parse_answer_auth_direct,??parse_answer_auth_direct??rA
        STR      R0,[SP, #+0]
        _BLF     AnimWidget_Close,??AnimWidget_Close??rA
        LDR      R0,[SP, #+0]
        CMP      R0,#+0
        BNE      ??MainProcess_7
        BL       save_token
        ADD      R1,R5,#+20
        MOV      R0,R4
        SWI      +22
        _BLF     SMART_REDRAW,??SMART_REDRAW??rA
        _BLF     end_ssl_work,??end_ssl_work??rA
        _BLF     Cookies_SaveAndFree,??Cookies_SaveAndFree??rA
        LDR      R0,[R6, #+20]
        LDR      R0,[R0, #+40]
        SWI      +309
        CMP      R0,#+0
        BNE      ??MainProcess_8
        MOV      R0,#+1
        SWI      +315
??MainProcess_8:
        LDR      R0,[R6, #+20]
        MOV      R1,#+1
        LDR      R0,[R0, #+40]
        SWI      +317
        _BLF     CreateMainMenu,??CreateMainMenu??rA
        LDR      R1,[R6, #+20]
        STR      R0,[R1, #+40]
??MainProcess_9:
        B        ??MainProcess_6
??MainProcess_2:
        MOV      R0,#+1
        STR      R0,[R6, #+12]
        B        ??MainProcess_6
??MainProcess_3:
        MOV      R0,SP
        _BLF     parse_answer_messages_getLongPollServer,??parse_answer_messages_getLongPollServer??rA
        LDR      R0,[SP, #+0]
        CMP      R0,#+0
        BEQ      ??MainProcess_10
??MainProcess_7:
        BL       DoError
        POP      {R0,R1,R4-R11,PC}
??MainProcess_10:
        STR      R11,[R10, #+0]
        BL       tmr_check_new_msg_handler
        POP      {R0,R1,R4-R11,PC}
??MainProcess_4:
        _BLF     get_DialogsCount,??get_DialogsCount??rA
        CMP      R0,#+0
        BNE      ??MainProcess_11
        LDR      R0,[R7, #+0]
        LDR      R2,[R8, #+0]
        LDR      R1,[R9, #+0]
        ADD      R0,R0,R2
        BL       SaveDialogs
        SWI      +326
        _BLF     del_Dialogs,??del_Dialogs??rA
        _BLF     RefreshDialogsMenu,??RefreshDialogsMenu??rA
        SWI      +327
??MainProcess_11:
        LDR      R0,[R7, #+0]
        LDR      R2,[R8, #+0]
        ADD      R1,SP,#+4
        ADD      R0,R0,R2
        _BLF     parse_answer_messages_getConversations,??parse_answer_messages_getConversations??rA
        STR      R0,[SP, #+0]
        LDR      R0,[SP, #+4]
        _BLF     set_DialogsCount,??set_DialogsCount??rA
        _BLF     AnimWidget_Close,??AnimWidget_Close??rA
        LDR      R0,[SP, #+0]
        CMP      R0,#+0
        BNE      ??MainProcess_7
        _BLF     RefreshDialogsMenu,??RefreshDialogsMenu??rA
        B        ??MainProcess_6
??MainProcess_5:
        _BLF     get_GroupsCount,??get_GroupsCount??rA
        CMP      R0,#+0
        BNE      ??MainProcess_12
        LDR      R0,[R7, #+0]
        LDR      R2,[R8, #+0]
        LDR      R1,[R9, #+0]
        ADD      R0,R0,R2
        BL       SaveGroups
        SWI      +326
        _BLF     RefreshGroupsMenu,??RefreshGroupsMenu??rA
        SWI      +327
??MainProcess_12:
        LDR      R0,[R7, #+0]
        LDR      R2,[R8, #+0]
        ADD      R1,SP,#+4
        ADD      R0,R0,R2
        _BLF     parse_answer_groups_get,??parse_answer_groups_get??rA
        STR      R0,[SP, #+0]
        LDR      R0,[SP, #+4]
        _BLF     set_GroupsCount,??set_GroupsCount??rA
        _BLF     AnimWidget_Close,??AnimWidget_Close??rA
        LDR      R0,[SP, #+0]
        CMP      R0,#+0
        BNE      ??MainProcess_7
        _BLF     RefreshGroupsMenu,??RefreshGroupsMenu??rA
??MainProcess_6:
        STR      R11,[R10, #+0]
        POP      {R0,R1,R4-R11,PC}  ;; return
        DATA
??MainProcess_0:
        DC32     `?<Constant "TEST_SSL_CON ok!">`
        DC32     recv_buf
        CFI EndBlock cfiBlock25

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock26 Using cfiCommon0
        CFI NoFunction
        THUMB
??maincsm_oncreate??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock26
        REQUIRE maincsm_oncreate

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock27 Using cfiCommon1
        CFI Function maincsm_oncreate
        ARM
maincsm_oncreate:
        LDR      R3,??DataTable50  ;; ipc
        PUSH     {LR}
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+4
        STR      R0,[R3, #+20]
        LDR      R0,??DataTable45  ;; ipc_my_name
        MOV      R2,#+1
        STR      R0,[R3, #+0]
        STR      R0,[R3, #+4]
        MVN      R0,#+0
        STR      R0,[R3, #+8]
        MOV      R1,#+176
        ORR      R1,R1,#0xDE00
        MOV      R0,#+9
        ORR      R0,R0,#0x4200
        SWI      +256
        POP      {PC}             ;; return
        CFI EndBlock cfiBlock27

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock28 Using cfiCommon0
        CFI NoFunction
        THUMB
??ElfKiller??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock28
        REQUIRE ElfKiller

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock29 Using cfiCommon1
        CFI Function ElfKiller
        ARM
ElfKiller:
        PUSH     {LR}
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+4
        SWI      +32789
        MOV      R1,R0
        LDR      R0,??ElfKiller_0  ;; SFB(ELFBEGIN)
        POP      {LR}             ;; Pop
        CFI ?RET R14
        CFI CFA R13+0
        _BF      kill_data,??kill_data??rA  ;; tailcall
        DATA
??ElfKiller_0:
        DC32     SFB(ELFBEGIN)
        CFI EndBlock cfiBlock29

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock30 Using cfiCommon0
        CFI NoFunction
        THUMB
??maincsm_onclose??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock30
        REQUIRE maincsm_onclose

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock31 Using cfiCommon1
        CFI Function maincsm_onclose
        ARM
maincsm_onclose:
        PUSH     {LR}
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+4
        _BLF     AnimWidget_Close,??AnimWidget_Close??rA
        LDR      R0,??maincsm_onclose_0  ;; ipc + 24
        SWI      +396
        _BLF     end_socket_work,??end_socket_work??rA
        _BLF     end_ssl_work,??end_ssl_work??rA
        _BLF     del_Dialogs,??del_Dialogs??rA
        _BLF     del_Profiles,??del_Profiles??rA
        _BLF     del_Groups,??del_Groups??rA
        LDR      R0,??DataTable54  ;; Cookies_SaveAndFree
        SWI      +369
        LDR      R0,??maincsm_onclose_0+0x4  ;; FreeDynTheme
        SWI      +369
        LDR      R0,??maincsm_onclose_0+0x8  ;; PNGLIST_Free
        SWI      +369
        LDR      R0,??maincsm_onclose_0+0xC  ;; FreeDynSmiles
        SWI      +369
        LDR      R0,??maincsm_onclose_0+0x10  ;; ElfKiller
        SWI      +369
        POP      {PC}             ;; return
        DATA
??maincsm_onclose_0:
        DC32     ipc + 24
        DC32     FreeDynTheme
        DC32     PNGLIST_Free
        DC32     FreeDynSmiles
        DC32     ElfKiller
        CFI EndBlock cfiBlock31

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock32 Using cfiCommon0
        CFI NoFunction
        THUMB
??startApp??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock32
        REQUIRE startApp

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock33 Using cfiCommon1
        CFI Function startApp
        ARM
startApp:
        LDR      R3,??DataTable32  ;; APP_DIR
        LDR      R2,??DataTable33  ;; `?<Constant "%stoken">`
        PUSH     {R4-R7,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R7 Frame(CFA, -8)
        CFI R6 Frame(CFA, -12)
        CFI R5 Frame(CFA, -16)
        CFI R4 Frame(CFA, -20)
        CFI CFA R13+20
        LDR      R5,??DataTable34  ;; ACCESS_TOKEN
        SUB      SP,SP,#+172
        CFI CFA R13+192
        MOV      R1,#+127
        ADD      R0,SP,#+4
        SWI      +283
        MOV      R2,SP
        ADD      R1,SP,#+132
        ADD      R0,SP,#+4
        SWI      +132
        MOV      R4,#+0
        STRB     R4,[R5, #+0]
        LDR      R6,[SP, #+136]
        CMP      R6,#+1
        BLT      ??startApp_0
        MOV      R3,SP
        MOV      R2,#+128
        MOV      R1,#+32768
        ADD      R0,SP,#+4
        SWI      +10
        MOV      R7,R0
        CMN      R7,#+1
        BEQ      ??startApp_0
        MOV      R3,SP
        MOV      R2,R6
        MOV      R1,R5
        SWI      +11
        STRB     R4,[R6, +R5]
        MOV      R1,SP
        MOV      R0,R7
        SWI      +13
??startApp_0:
        LDR      R6,??DataTable35  ;; INET_PROCESS
        LDR      R7,??DataTable42  ;; ipc
        _BLF     LoadDynTheme,??LoadDynTheme??rA
        LDR      R0,??Subroutine24_0  ;; LoadImages
        SWI      +369
        LDR      R0,??Subroutine24_0+0x4  ;; LoadSmiles
        SWI      +369
        MOV      R0,R5
        SWI      +27
        CMP      R0,#+0
        BEQ      ??startApp_1
        _BLF     CreateMainMenu,??CreateMainMenu??rA
        LDR      R1,[R7, #+20]
        STR      R0,[R1, #+40]
        STR      R4,[R6, #+0]
        B        ??startApp_2
??startApp_1:
        STR      R4,[R6, #+0]
        _BLF     CreateLoginDialog,??CreateLoginDialog??rA
        LDR      R1,[R7, #+20]
        STR      R0,[R1, #+40]
        CFI EndBlock cfiBlock33
??startApp_2:
        REQUIRE ?Subroutine24
        ;; // Fall through to label ?Subroutine24

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock34 Using cfiCommon1
        CFI NoFunction
        CFI CFA R13+192
        CFI R4 Frame(CFA, -20)
        CFI R5 Frame(CFA, -16)
        CFI R6 Frame(CFA, -12)
        CFI R7 Frame(CFA, -8)
        CFI ?RET Frame(CFA, -4)
        ARM
?Subroutine24:
        ADD      SP,SP,#+172      ;; stack cleaning
        CFI CFA R13+20
        POP      {R4-R7,PC}       ;; return
        DATA
??Subroutine24_0:
        DC32     LoadImages
        DC32     LoadSmiles
        CFI EndBlock cfiBlock34

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable32:
        DC32     APP_DIR

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable33:
        DC32     `?<Constant "%stoken">`

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable34:
        DC32     ACCESS_TOKEN

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable35:
        DC32     INET_PROCESS

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock35 Using cfiCommon0
        CFI NoFunction
        THUMB
??CheckDoubleRun??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock35
        REQUIRE CheckDoubleRun

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock36 Using cfiCommon1
        CFI Function CheckDoubleRun
        ARM
CheckDoubleRun:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        LDR      R4,??DataTable50  ;; ipc
        LDR      R1,[R4, #+8]
        CMN      R1,#+1
        BEQ      ??CheckDoubleRun_0
        LDR      R0,??DataTable45  ;; ipc_my_name
        STR      R1,[R4, #+8]
        ADD      R2,R0,#+88
        STR      R2,[R4, #+0]
        STR      R0,[R4, #+4]
        MOV      R3,R4
        MOV      R2,#+2
        MOV      R1,#+176
        ORR      R1,R1,#0xDE00
        MOV      R0,#+9
        ORR      R0,R0,#0x4200
        SWI      +256
        SWI      +326
        LDR      R0,[R4, #+16]
        SWI      +508
        SWI      +327
        POP      {R4,PC}
??CheckDoubleRun_0:
        POP      {R4,LR}          ;; Pop
        CFI R4 SameValue
        CFI ?RET R14
        CFI CFA R13+0
        B        startApp         ;; tailcall
        CFI EndBlock cfiBlock36

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock37 Using cfiCommon0
        CFI NoFunction
        THUMB
??HandleObsFrameUpdate??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock37
        REQUIRE HandleObsFrameUpdate

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock38 Using cfiCommon1
        CFI Function HandleObsFrameUpdate
        ARM
HandleObsFrameUpdate:
        PUSH     {R0,R4-R8,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R8 Frame(CFA, -8)
        CFI R7 Frame(CFA, -12)
        CFI R6 Frame(CFA, -16)
        CFI R5 Frame(CFA, -20)
        CFI R4 Frame(CFA, -24)
        CFI CFA R13+28
        LDR      R5,??DataTable42  ;; ipc
        MOV      R4,R0
        LDR      R0,[R5, #+20]
        MOV      R1,SP
        LDR      R0,[R0, #+60]
        MOV      R6,#+0
        SWI      +607
        CMP      R0,#+0
        BNE      ??HandleObsFrameUpdate_0
        MOV      R0,#+12
        SWI      +20
        MOV      R7,R0
        LDR      R0,[SP, #+0]
        LDRH     R0,[R0, #+0]
        STRH     R0,[R7, #+0]
        LDR      R0,[SP, #+0]
        LDRH     R0,[R0, #+2]
        STRH     R0,[R7, #+2]
        LDR      R0,[SP, #+0]
        LDR      R0,[R0, #+4]
        AND      R0,R0,#0xFF
        STR      R0,[R7, #+4]
        LDR      R0,[SP, #+0]
        LDR      R2,[R0, #+4]
        LDRSH    R1,[R0, #+2]
        LDRSH    R0,[R0, #+0]
        AND      R2,R2,#0xFF
        SWI      +600
        MOV      R8,R0
        SWI      +20
        STR      R0,[R7, #+8]
        LDR      R0,[SP, #+0]
        MOV      R2,R8
        LDR      R1,[R0, #+8]
        LDR      R0,[R7, #+8]
        SWI      +286
        CMP      R7,#+0
        BEQ      ??HandleObsFrameUpdate_0
        LDR      R0,[R5, #+20]
        LDR      R1,[R0, #+48]
        CMP      R1,#+0
        STRNE    R7,[R1, #+36]
        STRNE    R6,[R0, #+48]
        _BLF     RefreshDialogsMenu,??RefreshDialogsMenu??rA
??HandleObsFrameUpdate_0:
        MOV      R0,R4
        SWI      +602
        LDR      R0,[R5, #+20]
        STR      R6,[R0, #+60]
        MOV      R0,#+0
        POP      {R1,R4-R8,PC}    ;; return
        CFI EndBlock cfiBlock38

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock39 Using cfiCommon0
        CFI NoFunction
        THUMB
??HandleObsError??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock39
        REQUIRE HandleObsError

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock40 Using cfiCommon1
        CFI Function HandleObsError
        ARM
HandleObsError:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        LDR      R4,??DataTable50  ;; ipc
        LDR      R0,[R4, #+20]
        LDR      R0,[R0, #+60]
        SWI      +602
        LDR      R1,[R4, #+20]
        MOV      R0,#+0
        STR      R0,[R1, #+60]
        LDR      R1,[R4, #+20]
        MOV      R3,R4
        LDR      R2,[R1, #+48]
        LDR      R2,[R2, #+0]
        STR      R2,[R1, #+48]
        LDR      R1,??DataTable45  ;; ipc_my_name
        STR      R0,[R4, #+8]
        STR      R1,[R4, #+0]
        STR      R1,[R4, #+4]
        MOV      R2,#+4
        MOV      R1,#+176
        ORR      R1,R1,#0xDE00
        MOV      R0,#+9
        ORR      R0,R0,#0x4200
        SWI      +256
        MOV      R0,#+0
        POP      {R4,PC}          ;; return
        CFI EndBlock cfiBlock40

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock41 Using cfiCommon0
        CFI NoFunction
        THUMB
??maincsm_onmessage??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock41
        REQUIRE maincsm_onmessage

        RSEG DATA_I:DATA:SORT:NOROOT(2)
ipc:
        DS8 12
        REQUIRE `?<Initializer for ipc>`
        DS8 4
        REQUIRE `?<Initializer for ena_statistic>`
maincsm_id:
        DS8 4
        REQUIRE `?<Initializer for maincsm_id>`
csm:
        DS8 4
        REQUIRE `?<Initializer for csm>`
        DS8 16
        REQUIRE `?<Initializer for tmr_check_new_msg>`
        DS8 24
        REQUIRE `?<Initializer for ObsEventsHandlers>`

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock42 Using cfiCommon1
        CFI Function maincsm_onmessage
        ARM
maincsm_onmessage:
        PUSH     {R0,R4-R8,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R8 Frame(CFA, -8)
        CFI R7 Frame(CFA, -12)
        CFI R6 Frame(CFA, -16)
        CFI R5 Frame(CFA, -20)
        CFI R4 Frame(CFA, -24)
        CFI CFA R13+28
        LDR      R5,??DataTable42  ;; ipc
        MOV      R7,R0
        LDR      R6,??DataTable45  ;; ipc_my_name
        MOV      R4,R1
        LDR      R0,[R4, #+4]
        MOV      R1,#+176
        ORR      R1,R1,#0xDE00
        CMP      R0,R1
        BNE      ??maincsm_onmessage_1
        LDR      R0,[R4, #+8]
        LDR      R1,??maincsm_onmessage_2  ;; 0x17621d4e
        CMP      R0,R1
        LDRNE    R8,[R4, #+12]
        CMPNE    R8,#+0
        BEQ      ??maincsm_onmessage_3
        LDR      R0,[R8, #+0]
        MOV      R1,R6
        _BLF     stricmp,??stricmp??rA
        CMP      R0,#+0
        BNE      ??maincsm_onmessage_1
        LDR      R0,[R4, #+8]
        SUB      R0,R0,#+1
        CMP      R0,#+3
        BHI      ??maincsm_onmessage_1
        ADR      R1,??maincsm_onmessage_0
        LDRB     R1,[R1, R0]
        ADD      PC,PC,R1, LSL #+2
        DATA
??maincsm_onmessage_0:
        DC8      +0,+13,+14,+10
        ARM
??maincsm_onmessage_4:
        LDR      R0,[R8, #+4]
        CMP      R0,R6
        BNE      ??maincsm_onmessage_5
        LDR      R0,??maincsm_onmessage_2+0x4  ;; CheckDoubleRun
        MOV      R1,R7
        SWI      +369
        B        ??maincsm_onmessage_1
??maincsm_onmessage_5:
        LDR      R0,[R5, #+16]
        STR      R0,[R8, #+8]
        B        ??maincsm_onmessage_1
??maincsm_onmessage_6:
        LDR      R0,[R8, #+8]
        BL       MainProcess
        B        ??maincsm_onmessage_1
??maincsm_onmessage_7:
        _BLF     AnimWidget_Close,??AnimWidget_Close??rA
??maincsm_onmessage_1:
        LDR      R0,[R4, #+4]
        MOV      R1,#+174
        ORR      R1,R1,#0xDE00
        CMP      R0,R1
        BNE      ??maincsm_onmessage_8
        LDR      R0,??DataTable49  ;; HTTP_URL
        MOV      R2,#+8
        ADD      R1,R6,#+4
        SWI      +277
        CMP      R0,#+0
        BNE      ??maincsm_onmessage_3
        MOV      R0,R4
        _BLF     ssl_socket_msg_handler,??ssl_socket_msg_handler??rA
??maincsm_onmessage_3:
        MOV      R0,#+1
        POP      {R1,R4-R8,PC}    ;; return
??maincsm_onmessage_8:
        LDR      R1,[R4, #+12]
        LDR      R2,[R5, #+20]
        MOV      R3,#+14
        ORR      R3,R3,#0x6400
        CMP      R0,R3
        BNE      ??maincsm_onmessage_9
        LDR      R0,[R2, #+40]
        CMP      R1,R0
        BNE      ??maincsm_onmessage_3
        MVN      R0,#+2
        STR      R0,[R2, #+16]
??maincsm_onmessage_9:
        LDR      R0,[R4, #+4]
        MOV      R3,#+114
        ORR      R3,R3,#0x8000
        CMP      R0,R3
        BNE      ??maincsm_onmessage_10
        LDR      R0,[R2, #+60]
        CMP      R0,#+0
        BEQ      ??maincsm_onmessage_3
        CMP      R1,R0
        BNE      ??maincsm_onmessage_3
        ADD      R1,R5,#+40
        MOV      R0,R4
        SWI      +612
        B        ??maincsm_onmessage_11
??maincsm_onmessage_10:
        SUB      R1,R3,#+29
        CMP      R0,R1
        BNE      ??maincsm_onmessage_11
        MOV      R0,R4
        _BLF     AnimWidgetHandler,??AnimWidgetHandler??rA
??maincsm_onmessage_11:
        LDR      R0,[R4, #+4]
        MOV      R1,#+175
        ORR      R1,R1,#0xDE00
        CMP      R0,R1
        BNE      ??maincsm_onmessage_3
        LDR      R0,??maincsm_onmessage_2+0x8  ;; successed_config_filename
        LDR      R1,[R4, #+12]
        LDR      R0,[R0, #+0]
        _BLF     stricmp,??stricmp??rA
        CMP      R0,#+0
        BNE      ??maincsm_onmessage_3
        _BLF     InitConfig,??InitConfig??rA
        ADD      R1,R6,#+16
        MOV      R0,#+17
        SWI      +328
        B        ??maincsm_onmessage_3
        DATA
??maincsm_onmessage_2:
        DC32     0x17621d4e
        DC32     CheckDoubleRun
        DC32     successed_config_filename
        CFI EndBlock cfiBlock42

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable42:
        DC32     ipc

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock43 Using cfiCommon0
        CFI NoFunction
        THUMB
??socket_data_read_handler??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock43
        REQUIRE socket_data_read_handler

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock44 Using cfiCommon1
        CFI Function socket_data_read_handler
        ARM
socket_data_read_handler:
        PUSH     {R4-R6,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R6 Frame(CFA, -8)
        CFI R5 Frame(CFA, -12)
        CFI R4 Frame(CFA, -16)
        CFI CFA R13+16
        LDR      R4,??DataTable45  ;; ipc_my_name
        LDR      R6,??DataTable46  ;; HTTP_HEADER_LENGTH
        SUB      SP,SP,#+32
        CFI CFA R13+48
        MOV      R5,R0
        LDR      R0,[R6, #+0]
        CMP      R0,#+0
        BNE      ??socket_data_read_handler_0
        LDR      R0,[R5, #+108]
        CMP      R0,#+0
        BEQ      ??socket_data_read_handler_0
        _BLF     ParseHeader,??ParseHeader??rA
        CMP      R0,#+0
        BNE      ??socket_data_read_handler_0
        LDR      R0,??DataTable47  ;; logmsg
        ADD      R1,R4,#+44
        SWI      +22
        _BLF     SMART_REDRAW,??SMART_REDRAW??rA
??socket_data_read_handler_0:
        LDR      R2,??DataTable48  ;; HTTP_CONTENT_LENGTH
        LDR      R0,[R5, #+108]
        LDR      R1,[R6, #+0]
        LDR      R2,[R2, #+0]
        ADD      R1,R2,R1
        CMP      R0,R1
        BLT      ??socket_data_read_handler_1
        LDR      R0,??socket_data_read_handler_2  ;; HTTP_CONNECTION
        LDR      R0,[R0, #+0]
        CMP      R0,#+0
        BNE      ??socket_data_read_handler_3
        LDR      R0,??DataTable49  ;; HTTP_URL
        MOV      R2,#+8
        ADD      R1,R4,#+4
        SWI      +277
        CMP      R0,#+0
        BNE      ??socket_data_read_handler_4
        MOV      R0,R5
        _BLF     end_ssl,??end_ssl??rA
        B        ??socket_data_read_handler_3
??socket_data_read_handler_4:
        LDR      R0,[R5, #+76]
        _BLF     end_socket,??end_socket??rA
??socket_data_read_handler_3:
        LDR      R0,??socket_data_read_handler_2+0x4  ;; HTTP_STATUS
        LDR      R2,[R0, #+0]
        MOV      R0,#+0
        CMP      R2,#+200
        MOVNE    R1,#+145
        ORRNE    R1,R1,#0x100
        CMPNE    R2,R1
        BNE      ??socket_data_read_handler_5
        LDR      R3,??DataTable50  ;; ipc
        MOV      R2,#+4
        STR      R4,[R3, #+0]
        STR      R4,[R3, #+4]
        STR      R0,[R3, #+8]
        MOV      R1,#+176
        ORR      R1,R1,#0xDE00
        MOV      R0,#+9
        ORR      R0,R0,#0x4200
        SWI      +256
        B        ??socket_data_read_handler_6
??socket_data_read_handler_5:
        LDR      R1,??DataTable53  ;; INET_PROCESS
        STR      R0,[R1, #+0]
        ADD      R1,R4,#+68
        MOV      R0,SP
        SWI      +22
        MOV      R1,SP
        MOV      R0,#+1
        SWI      +328
??socket_data_read_handler_6:
        MOV      R0,#+1
        B        ??socket_data_read_handler_7
??socket_data_read_handler_1:
        MOV      R0,#+0
??socket_data_read_handler_7:
        ADD      SP,SP,#+32       ;; stack cleaning
        CFI CFA R13+16
        POP      {R4-R6,PC}       ;; return
        DATA
??socket_data_read_handler_2:
        DC32     HTTP_CONNECTION
        DC32     HTTP_STATUS
        CFI EndBlock cfiBlock44

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable45:
        DC32     ipc_my_name

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable46:
        DC32     HTTP_HEADER_LENGTH

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable47:
        DC32     logmsg

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable48:
        DC32     HTTP_CONTENT_LENGTH

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable49:
        DC32     HTTP_URL

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable50:
        DC32     ipc

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock45 Using cfiCommon0
        CFI NoFunction
        THUMB
??socket_remote_closed_handler??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock45
        REQUIRE socket_remote_closed_handler

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock46 Using cfiCommon1
        CFI Function socket_remote_closed_handler
        ARM
socket_remote_closed_handler:
        LDR      R0,??DataTable53  ;; INET_PROCESS
        MOV      R1,#+0
        STR      R1,[R0, #+0]
        BX       LR               ;; return
        CFI EndBlock cfiBlock46

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock47 Using cfiCommon0
        CFI NoFunction
        THUMB
??socket_error_handler??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock47
        REQUIRE socket_error_handler

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock48 Using cfiCommon1
        CFI Function socket_error_handler
        ARM
socket_error_handler:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        MOV      R4,R0
        _BLF     AnimWidget_Close,??AnimWidget_Close??rA
        LDR      R0,??DataTable53  ;; INET_PROCESS
        LDR      R1,??socket_error_handler_1  ;; `?<Constant "ERROR_READ_TIMEOUT">`
        MOV      R2,#+0
        SUB      R4,R4,#+2
        CMP      R4,#+8
        POPHI    {R4,PC}
        ADR      R3,??socket_error_handler_0
        LDRB     R3,[R3, R4]
        ADD      PC,PC,R3, LSL #+2
        DATA
??socket_error_handler_0:
        DC8      +6,+10,+13,+13
        DC8      +2,+13,+4,+2
        DC8      +2,+0,+0,+0
        ARM
??socket_error_handler_2:
        STR      R2,[R0, #+0]
        POP      {R4,PC}
??socket_error_handler_3:
        STR      R2,[R0, #+0]
        B        ??socket_error_handler_4
??socket_error_handler_5:
        ADD      R1,R1,#+20
??socket_error_handler_4:
        MOV      R0,#+1
        SWI      +328
        POP      {R4,PC}
??socket_error_handler_6:
        ADD      R1,R1,#+36
        MOV      R0,#+1
        SWI      +328
??socket_error_handler_7:
        POP      {R4,PC}          ;; return
        DATA
??socket_error_handler_1:
        DC32     `?<Constant "ERROR_READ_TIMEOUT">`
        CFI EndBlock cfiBlock48

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable53:
        DC32     INET_PROCESS

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock49 Using cfiCommon0
        CFI NoFunction
        THUMB
??main??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock49
        REQUIRE main

        RSEG DATA_Z:DATA:SORT:NOROOT(2)
maincsm_name_body:
        DS8 280

        RSEG DATA_C:CONST:SORT:NOROOT(2)
percent_t:
        DATA
        DC8 "%t"
        DC8 0
        DC8 "\302\352\356\355\362\340\352\362\345"
        DC8 0, 0
        DC32 maincsm_onmessage, maincsm_oncreate, 0, 0, 0, 0, maincsm_onclose
        DC32 64, 1, minus11, maincsm_name_body, 55AACCCCH, 3333AA55H, 0
        DC16 139
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant "%sdialogs.json">`:
        DATA
        DC8 "%sdialogs.json"
        DC8 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant "%sgroups.json">`:
        DATA
        DC8 "%sgroups.json"
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
minus11:
        DATA
        DC32 -11

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock50 Using cfiCommon1
        CFI Function main
        ARM
main:
        LDR      R2,??main_0      ;; socket_remote_closed_handler
        LDR      R1,??main_0+0x4  ;; socket_data_read_handler
        LDR      R0,??main_0+0x8  ;; socket_error_handler
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        LDR      R4,??main_0+0xC  ;; percent_t
        SUB      SP,SP,#+64
        CFI CFA R13+72
        _BLF     socket_work_init,??socket_work_init??rA
        _BLF     InitConfig,??InitConfig??rA
        MOV      R1,#+64
        MOV      R0,SP
        SWI      +285
        SWI      +326
        ADD      R2,R4,#+4
        MOV      R1,R4
        ADD      R0,R4,#+56
        SWI      +292
        MOV      R2,#+0
        MOV      R1,SP
        ADD      R0,R4,#+16
        SWI      +263
        LDR      R1,??main_0+0x10  ;; ipc + 16
        STR      R0,[R1, #+0]
        SWI      +327
        MOV      R0,#+0
        ADD      SP,SP,#+64
        CFI CFA R13+8
        POP      {R4,PC}          ;; return
        DATA
??main_0:
        DC32     socket_remote_closed_handler
        DC32     socket_data_read_handler
        DC32     socket_error_handler
        DC32     percent_t
        DC32     ipc + 16
        CFI EndBlock cfiBlock50

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock51 Using cfiCommon1
        CFI NoFunction
        ARM
??url_stats_track_visitor??rA:
        LDR      R12,??Subroutine27_0  ;; url_stats_track_visitor
        BX       R12
        DATA
??Subroutine27_0:
        DC32     url_stats_track_visitor
        CFI EndBlock cfiBlock51

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock52 Using cfiCommon1
        CFI NoFunction
        ARM
??url_messages_getLongPollServer??rA:
        LDR      R12,??Subroutine28_0  ;; url_messages_getLongPollServer
        BX       R12
        DATA
??Subroutine28_0:
        DC32     url_messages_getLongPollServer
        CFI EndBlock cfiBlock52

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock53 Using cfiCommon1
        CFI NoFunction
        ARM
??url_messages_getLongPollHistory??rA:
        LDR      R12,??Subroutine29_0  ;; url_messages_getLongPollHistory
        BX       R12
        DATA
??Subroutine29_0:
        DC32     url_messages_getLongPollHistory
        CFI EndBlock cfiBlock53

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock54 Using cfiCommon1
        CFI NoFunction
        ARM
??CreateIMGHDRFromFileAsync??rA:
        LDR      R12,??Subroutine30_0  ;; CreateIMGHDRFromFileAsync
        BX       R12
        DATA
??Subroutine30_0:
        DC32     CreateIMGHDRFromFileAsync
        CFI EndBlock cfiBlock54

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock55 Using cfiCommon1
        CFI NoFunction
        ARM
??parse_answer_messages_getConversations??rA:
        LDR      R12,??Subroutine31_0  ;; parse_answer_messages_getConversations
        BX       R12
        DATA
??Subroutine31_0:
        DC32     parse_answer_messages_getConversations
        CFI EndBlock cfiBlock55

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock56 Using cfiCommon1
        CFI NoFunction
        ARM
??AnimWidget_Close??rA:
        LDR      R12,??Subroutine32_0  ;; AnimWidget_Close
        BX       R12
        DATA
??Subroutine32_0:
        DC32     AnimWidget_Close
        CFI EndBlock cfiBlock56

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock57 Using cfiCommon1
        CFI NoFunction
        ARM
??RefreshDialogsMenu??rA:
        LDR      R12,??Subroutine33_0  ;; RefreshDialogsMenu
        BX       R12
        DATA
??Subroutine33_0:
        DC32     RefreshDialogsMenu
        CFI EndBlock cfiBlock57

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock58 Using cfiCommon1
        CFI NoFunction
        ARM
??parse_answer_groups_get??rA:
        LDR      R12,??Subroutine34_0  ;; parse_answer_groups_get
        BX       R12
        DATA
??Subroutine34_0:
        DC32     parse_answer_groups_get
        CFI EndBlock cfiBlock58

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock59 Using cfiCommon1
        CFI NoFunction
        ARM
??RefreshGroupsMenu??rA:
        LDR      R12,??Subroutine35_0  ;; RefreshGroupsMenu
        BX       R12
        DATA
??Subroutine35_0:
        DC32     RefreshGroupsMenu
        CFI EndBlock cfiBlock59

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock60 Using cfiCommon1
        CFI NoFunction
        ARM
??end_ssl_work??rA:
        LDR      R12,??Subroutine36_0  ;; end_ssl_work
        BX       R12
        DATA
??Subroutine36_0:
        DC32     end_ssl_work
        CFI EndBlock cfiBlock60

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock61 Using cfiCommon1
        CFI NoFunction
        ARM
??CreateLoginDialog??rA:
        LDR      R12,??Subroutine37_0  ;; CreateLoginDialog
        BX       R12
        DATA
??Subroutine37_0:
        DC32     CreateLoginDialog
        CFI EndBlock cfiBlock61

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock62 Using cfiCommon1
        CFI NoFunction
        ARM
??SMART_REDRAW??rA:
        LDR      R12,??Subroutine38_0  ;; SMART_REDRAW
        BX       R12
        DATA
??Subroutine38_0:
        DC32     SMART_REDRAW
        CFI EndBlock cfiBlock62

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock63 Using cfiCommon1
        CFI NoFunction
        ARM
??parse_answer_auth_direct??rA:
        LDR      R12,??Subroutine39_0  ;; parse_answer_auth_direct
        BX       R12
        DATA
??Subroutine39_0:
        DC32     parse_answer_auth_direct
        CFI EndBlock cfiBlock63

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock64 Using cfiCommon1
        CFI NoFunction
        ARM
??Cookies_SaveAndFree??rA:
        LDR      R12,??DataTable54  ;; Cookies_SaveAndFree
        BX       R12
        CFI EndBlock cfiBlock64

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable54:
        DC32     Cookies_SaveAndFree

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock65 Using cfiCommon1
        CFI NoFunction
        ARM
??CreateMainMenu??rA:
        LDR      R12,??Subroutine41_0  ;; CreateMainMenu
        BX       R12
        DATA
??Subroutine41_0:
        DC32     CreateMainMenu
        CFI EndBlock cfiBlock65

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock66 Using cfiCommon1
        CFI NoFunction
        ARM
??parse_answer_messages_getLongPollServer??rA:
        LDR      R12,??Subroutine42_0  ;; parse_answer_messages_getLongPollServer
        BX       R12
        DATA
??Subroutine42_0:
        DC32     parse_answer_messages_getLongPollServer
        CFI EndBlock cfiBlock66

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock67 Using cfiCommon1
        CFI NoFunction
        ARM
??get_DialogsCount??rA:
        LDR      R12,??Subroutine43_0  ;; get_DialogsCount
        BX       R12
        DATA
??Subroutine43_0:
        DC32     get_DialogsCount
        CFI EndBlock cfiBlock67

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock68 Using cfiCommon1
        CFI NoFunction
        ARM
??del_Dialogs??rA:
        LDR      R12,??Subroutine44_0  ;; del_Dialogs
        BX       R12
        DATA
??Subroutine44_0:
        DC32     del_Dialogs
        CFI EndBlock cfiBlock68

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock69 Using cfiCommon1
        CFI NoFunction
        ARM
??set_DialogsCount??rA:
        LDR      R12,??Subroutine45_0  ;; set_DialogsCount
        BX       R12
        DATA
??Subroutine45_0:
        DC32     set_DialogsCount
        CFI EndBlock cfiBlock69

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock70 Using cfiCommon1
        CFI NoFunction
        ARM
??get_GroupsCount??rA:
        LDR      R12,??Subroutine46_0  ;; get_GroupsCount
        BX       R12
        DATA
??Subroutine46_0:
        DC32     get_GroupsCount
        CFI EndBlock cfiBlock70

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock71 Using cfiCommon1
        CFI NoFunction
        ARM
??set_GroupsCount??rA:
        LDR      R12,??Subroutine47_0  ;; set_GroupsCount
        BX       R12
        DATA
??Subroutine47_0:
        DC32     set_GroupsCount
        CFI EndBlock cfiBlock71

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock72 Using cfiCommon1
        CFI NoFunction
        ARM
??kill_data??rA:
        LDR      R12,??Subroutine48_0  ;; kill_data
        BX       R12
        DATA
??Subroutine48_0:
        DC32     kill_data
        CFI EndBlock cfiBlock72

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock73 Using cfiCommon1
        CFI NoFunction
        ARM
??end_socket_work??rA:
        LDR      R12,??Subroutine49_0  ;; end_socket_work
        BX       R12
        DATA
??Subroutine49_0:
        DC32     end_socket_work
        CFI EndBlock cfiBlock73

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock74 Using cfiCommon1
        CFI NoFunction
        ARM
??del_Profiles??rA:
        LDR      R12,??Subroutine50_0  ;; del_Profiles
        BX       R12
        DATA
??Subroutine50_0:
        DC32     del_Profiles
        CFI EndBlock cfiBlock74

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock75 Using cfiCommon1
        CFI NoFunction
        ARM
??del_Groups??rA:
        LDR      R12,??Subroutine51_0  ;; del_Groups
        BX       R12
        DATA
??Subroutine51_0:
        DC32     del_Groups
        CFI EndBlock cfiBlock75

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock76 Using cfiCommon1
        CFI NoFunction
        ARM
??LoadDynTheme??rA:
        LDR      R12,??Subroutine52_0  ;; LoadDynTheme
        BX       R12
        DATA
??Subroutine52_0:
        DC32     LoadDynTheme
        CFI EndBlock cfiBlock76

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock77 Using cfiCommon1
        CFI NoFunction
        ARM
??stricmp??rA:
        LDR      R12,??Subroutine53_0  ;; stricmp
        BX       R12
        DATA
??Subroutine53_0:
        DC32     stricmp
        CFI EndBlock cfiBlock77

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock78 Using cfiCommon1
        CFI NoFunction
        ARM
??ssl_socket_msg_handler??rA:
        LDR      R12,??Subroutine54_0  ;; ssl_socket_msg_handler
        BX       R12
        DATA
??Subroutine54_0:
        DC32     ssl_socket_msg_handler
        CFI EndBlock cfiBlock78

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock79 Using cfiCommon1
        CFI NoFunction
        ARM
??AnimWidgetHandler??rA:
        LDR      R12,??Subroutine55_0  ;; AnimWidgetHandler
        BX       R12
        DATA
??Subroutine55_0:
        DC32     AnimWidgetHandler
        CFI EndBlock cfiBlock79

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock80 Using cfiCommon1
        CFI NoFunction
        ARM
??InitConfig??rA:
        LDR      R12,??Subroutine56_0  ;; InitConfig
        BX       R12
        DATA
??Subroutine56_0:
        DC32     InitConfig
        CFI EndBlock cfiBlock80

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock81 Using cfiCommon1
        CFI NoFunction
        ARM
??ParseHeader??rA:
        LDR      R12,??Subroutine57_0  ;; ParseHeader
        BX       R12
        DATA
??Subroutine57_0:
        DC32     ParseHeader
        CFI EndBlock cfiBlock81

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock82 Using cfiCommon1
        CFI NoFunction
        ARM
??end_ssl??rA:
        LDR      R12,??Subroutine58_0  ;; end_ssl
        BX       R12
        DATA
??Subroutine58_0:
        DC32     end_ssl
        CFI EndBlock cfiBlock82

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock83 Using cfiCommon1
        CFI NoFunction
        ARM
??end_socket??rA:
        LDR      R12,??Subroutine59_0  ;; end_socket
        BX       R12
        DATA
??Subroutine59_0:
        DC32     end_socket
        CFI EndBlock cfiBlock83

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock84 Using cfiCommon1
        CFI NoFunction
        ARM
??socket_work_init??rA:
        LDR      R12,??Subroutine60_0  ;; socket_work_init
        BX       R12
        DATA
??Subroutine60_0:
        DC32     socket_work_init
        CFI EndBlock cfiBlock84

        RSEG DATA_ID:CONST:SORT:NOROOT(2)
`?<Initializer for ipc>`:
        DATA
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
`?<Initializer for ena_statistic>`:
        DC32 0
`?<Initializer for maincsm_id>`:
        DC8 0, 0, 0, 0
`?<Initializer for csm>`:
        DC8 0, 0, 0, 0
`?<Initializer for tmr_check_new_msg>`:
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
`?<Initializer for ObsEventsHandlers>`:
        DC32 10, HandleObsFrameUpdate, 12, HandleObsError, 102, 0H

        RSEG INITTAB:CODE:ROOT(2)
        DATA
?init?tab?DATA_Z:
        DCD      sfe(DATA_Z) - sfb(DATA_Z), sfb(DATA_Z), sfb(DATA_Z)

        RSEG DATA_ID:CONST:SORT:NOROOT(2)
`?*?DATA_ID`:

        RSEG INITTAB:CODE:ROOT(2)
        DATA
?init?tab?DATA_I:
        DCD      sfe(DATA_I) - sfb(DATA_I), sfb(DATA_I), sfb(DATA_ID)

        RSEG ELFBEGIN:DATA:REORDER:NOROOT(0)

        END
// 
// 4 528 bytes in segment CODE
//   373 bytes in segment DATA_C
//    64 bytes in segment DATA_I
//    64 bytes in segment DATA_ID
//   280 bytes in segment DATA_Z
//    24 bytes in segment INITTAB
// 
// 4 028 bytes of CODE  memory (+ 524 bytes shared)
//   437 bytes of CONST memory
//   344 bytes of DATA  memory
//
//Errors: none
//Warnings: 8
