//////////////////////////////////////////////////////////////////////////////
//                                                                           /
// IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION   16/Feb/2023  22:41:14 /
// Copyright 1999-2005 IAR Systems. All rights reserved.                     /
//                                                                           /
//    Cpu mode        =  interwork                                           /
//    Endian          =  little                                              /
//    Stack alignment =  4                                                   /
//    Source file     =  D:\Users\alfinant\Documents\Siemens\Dev\IAR\VK.ELF_ /
//                       C\debug_gui.c                                       /
//    Command line    =  D:\Users\alfinant\Documents\Siemens\Dev\IAR\VK.ELF_ /
//                       C\debug_gui.c -D NEWSGOLD -D ELKA -D DEBUG -lCN     /
//                       D:\Users\alfinant\Documents\Siemens\Dev\IAR\VK.ELF_ /
//                       C\Release_ELKA\List\ -la                            /
//                       D:\Users\alfinant\Documents\Siemens\Dev\IAR\VK.ELF_ /
//                       C\Release_ELKA\List\ -o D:\Users\alfinant\Documents /
//                       \Siemens\Dev\IAR\VK.ELF_C\Release_ELKA\Obj\ -z9     /
//                       --cpu_mode arm --endian little --cpu ARM926EJ-S     /
//                       --stack_align 4 --interwork --diag_suppress Pe301   /
//                       -e --fpu None --dlib_config                         /
//                       D:\Users\alfinant\Documents\Siemens\IAR\ARM\LIB\dl5 /
//                       tpainl8n.h -I D:\Users\alfinant\Documents\Siemens\I /
//                       AR\ARM\INC\ --inline_threshold=2                    /
//    List file       =  D:\Users\alfinant\Documents\Siemens\Dev\IAR\VK.ELF_ /
//                       C\Release_ELKA\List\debug_gui.s79                   /
//                                                                           /
//                                                                           /
//////////////////////////////////////////////////////////////////////////////

        NAME debug_gui

        RTMODEL "StackAlign4", "USED"
        RTMODEL "__cpu_mode", "__pcs__interwork"
        RTMODEL "__data_model", "absolute"
        RTMODEL "__dlib_file_descriptor", "0"
        RTMODEL "__endian", "little"
        RTMODEL "__rt_version", "6"

        RSEG CSTACK:DATA:NOROOT(2)

`?<Constant {93, 128, 166, 100}>` EQU 0
        MULTWEAK ??CONNDATA_getTop??rA
        MULTWEAK ??CreateDebugGUI??rT
??DataTable0 EQU 0
??DataTable1 EQU 0
        MULTWEAK ??SMART_REDRAW??rT
        MULTWEAK ??method8??rT
        MULTWEAK ??method9??rT
        PUBWEAK ?init?tab?DATA_Z
        PUBLIC CreateDebugGUI
        FUNCTION CreateDebugGUI,0201H
        LOCFRAME CSTACK, 12, STACK
        FUNCTION OnKey,0603H
        LOCFRAME CSTACK, 4, STACK
        FUNCTION OnRedraw,0603H
        LOCFRAME CSTACK, 72, STACK
        PUBLIC SMART_REDRAW
        FUNCTION SMART_REDRAW,0201H
        LOCFRAME CSTACK, 8, STACK
        PUBLIC gui_methods
        PUBLIC logmsg
        PUBLIC method8
        FUNCTION method8,0603H
        PUBLIC method9
        FUNCTION method9,0603H
        FUNCTION onClose,0603H
        LOCFRAME CSTACK, 8, STACK
        FUNCTION onCreate,0603H
        LOCFRAME CSTACK, 8, STACK
        FUNCTION onFocus,0603H
        LOCFRAME CSTACK, 8, STACK
        FUNCTION onUnfocus,0603H
        LOCFRAME CSTACK, 8, STACK
        
        CFI Names cfiNames0
        CFI StackFrame CFA R13 HUGEDATA
        CFI Resource R0:32, R1:32, R2:32, R3:32, R4:32, R5:32, R6:32, R7:32
        CFI Resource R8:32, R9:32, R10:32, R11:32, R12:32, CPSR:32, R13:32
        CFI Resource R14:32, SPSR:32
        CFI VirtualResource ?RET:32
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 2
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon0
        
        
        CFI Common cfiCommon1 Using cfiNames0
        CFI CodeAlign 4
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon1
        
CONNDATA_getTop     SYMBOL "CONNDATA_getTop"
??CONNDATA_getTop??rA SYMBOL "??rA", CONNDATA_getTop
CreateDebugGUI      SYMBOL "CreateDebugGUI"
??CreateDebugGUI??rT SYMBOL "??rT", CreateDebugGUI
SMART_REDRAW        SYMBOL "SMART_REDRAW"
??SMART_REDRAW??rT  SYMBOL "??rT", SMART_REDRAW
method8             SYMBOL "method8"
??method8??rT       SYMBOL "??rT", method8
method9             SYMBOL "method9"
??method9??rT       SYMBOL "??rT", method9

        EXTERN ALLTOTALRECEIVED
        EXTERN ALLTOTALSENDED
        EXTERN CONNDATA_getTop
        FUNCTION CONNDATA_getTop,0200H
        EXTERN kill_data
        FUNCTION kill_data,0602H
        EXTERN recv_buf


        RSEG DATA_Z:DATA:SORT:NOROOT(2)
logmsg:
        DS8 256

        RSEG DATA_C:CONST:SORT:NOROOT(2)
percent_t:
        DATA
        DC8 "%t"
        DC8 0
        DC8 "Rx:%d, Tx:%d\012"
        DC8 0, 0
        DC8 "Rxbuf: %X\012"
        DC8 0
        DC8 "-host: %s\012"
        DC8 0
        DC8 "-sock_st=%d, ssl_st=%d\012"
        DC8 "-ssl handshake OK\012"
        DC8 0
        DC8 "-cipher %s\012"
        DC8 "-LOG:<%s>\012"
        DC8 0
        DC8 "Exit"
        DC8 0, 0, 0

        RSEG DATA_Z:DATA:SORT:NOROOT(2)
gui_id:
        DS8 4

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock0 Using cfiCommon0
        CFI NoFunction
        THUMB
??SMART_REDRAW??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock0
        REQUIRE SMART_REDRAW

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock1 Using cfiCommon1
        CFI Function SMART_REDRAW
        ARM
SMART_REDRAW:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        LDR      R4,??DataTable2  ;; gui_id
        LDR      R0,[R4, #+0]
        CMP      R0,#+0
        POPEQ    {R4,PC}
        SWI      +326
        LDR      R0,[R4, #+0]
        SWI      +309
        CMP      R0,#+0
        BEQ      ??SMART_REDRAW_0
        SWI      +370
??SMART_REDRAW_0:
        SWI      +327
        POP      {R4,PC}          ;; return
        CFI EndBlock cfiBlock1

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock2 Using cfiCommon0
        CFI NoFunction
        THUMB
??OnRedraw??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock2
        REQUIRE OnRedraw

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock3 Using cfiCommon1
        CFI Function OnRedraw
        ARM
OnRedraw:
        PUSH     {R4-R10,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R10 Frame(CFA, -8)
        CFI R9 Frame(CFA, -12)
        CFI R8 Frame(CFA, -16)
        CFI R7 Frame(CFA, -20)
        CFI R6 Frame(CFA, -24)
        CFI R5 Frame(CFA, -28)
        CFI R4 Frame(CFA, -32)
        CFI CFA R13+32
        MOV      R4,R0
        MOV      R0,#+1
        SWI      +571
        SWI      +33160
        MOV      R5,R0
        SWI      +33161
        MOV      R6,R0
        LDR      R0,??OnRedraw_0  ;; ALLTOTALRECEIVED
        LDR      R8,[R0, #+0]
        LDR      R0,??OnRedraw_0+0x4  ;; ALLTOTALSENDED
        LDR      R9,[R0, #+0]
        _BLF     CONNDATA_getTop,??CONNDATA_getTop??rA
        MOV      R10,R0
        MOV      R0,#+1
        SWI      +302
        MOV      R7,R0
        MOV      R0,#+1
        SWI      +302
        PUSH     {R7}
        CFI CFA R13+36
        LDR      R7,??OnRedraw_0+0x8  ;; percent_t
        PUSH     {R0}
        CFI CFA R13+40
        SUB      R3,R6,#+1
        SUB      R2,R5,#+1
        MOV      R1,#+0
        MOV      R0,#+0
        PUSH     {R0}
        CFI CFA R13+44
        PUSH     {R0}
        CFI CFA R13+48
        PUSH     {R0}
        CFI CFA R13+52
        SWI      +336
        LDR      R0,[R4, #+52]
        MOV      R2,#+0
        LDR      R1,[R0, #+0]
        MOV      R3,R9
        STRH     R2,[R1, #+0]
        MOV      R2,R8
        ADD      R1,R7,#+4
        SWI      +534
        LDR      R0,??OnRedraw_0+0xC  ;; recv_buf
        ADD      R1,R7,#+20
        LDR      R2,[R0, #+0]
        LDR      R0,[R4, #+52]
        SWI      +534
        CMP      R10,#+0
        ADD      SP,SP,#+20
        CFI CFA R13+32
        BEQ      ??OnRedraw_1
        LDR      R0,[R4, #+52]
        ADD      R2,R10,#+12
        ADD      R1,R7,#+32
        SWI      +534
        LDR      R3,[R10, #+148]
        LDR      R2,[R10, #+84]
        LDR      R0,[R4, #+52]
        ADD      R1,R7,#+44
        SWI      +534
        LDR      R0,[R10, #+148]
        CMP      R0,#+1
        BNE      ??OnRedraw_1
        LDR      R0,[R4, #+52]
        ADD      R1,R7,#+68
        SWI      +534
        LDR      R0,[R10, #+144]
        ADD      R1,R7,#+88
        LDR      R0,[R0, #+176]
        LDR      R0,[R0, #+172]
        LDR      R2,[R0, #+4]
        LDR      R0,[R4, #+52]
        SWI      +534
??OnRedraw_1:
        LDR      R0,[R4, #+52]
        LDR      R2,??OnRedraw_0+0x10  ;; logmsg
        ADD      R1,R7,#+100
        SWI      +534
        MOV      R0,#+23
        SWI      +302
        MOV      R8,R0
        MOV      R0,#+0
        SWI      +302
        MOV      R9,R0
        MOV      R0,#+5
        SWI      +453
        PUSH     {R8}
        CFI CFA R13+36
        PUSH     {R9}
        CFI CFA R13+40
        MOV      R1,#+0
        PUSH     {R1}
        CFI CFA R13+44
        SUB      R6,R6,#+4
        SUB      R0,R6,R0
        SUB      R10,R5,#+4
        MOV      R1,#+8
        PUSH     {R1}
        CFI CFA R13+48
        PUSH     {R0}
        CFI CFA R13+52
        MOV      R3,R10
        MOV      R2,#+3
        LDR      R0,[R4, #+52]
        MOV      R1,#+3
        SWI      +332
        LDR      R0,[R4, #+52]
        ADD      R2,R7,#+112
        MOV      R1,R7
        SWI      +292
        MOV      R0,#+23
        SWI      +302
        MOV      R7,R0
        MOV      R0,#+0
        SWI      +302
        MOV      R8,R0
        MOV      R0,#+5
        SWI      +453
        PUSH     {R7}
        CFI CFA R13+56
        PUSH     {R8}
        CFI CFA R13+60
        MOV      R1,#+4
        PUSH     {R1}
        CFI CFA R13+64
        MOV      R3,R10
        SUB      R2,R6,R0
        MOV      R1,#+5
        PUSH     {R1}
        CFI CFA R13+68
        MOV      R1,R6
        PUSH     {R1}
        CFI CFA R13+72
        LDR      R0,[R4, #+52]
        ASR      R1,R5,#+1
        SWI      +332
        ADD      SP,SP,#+40
        CFI CFA R13+32
        POP      {R4-R10,PC}      ;; return
        DATA
??OnRedraw_0:
        DC32     ALLTOTALRECEIVED
        DC32     ALLTOTALSENDED
        DC32     percent_t
        DC32     recv_buf
        DC32     logmsg
        CFI EndBlock cfiBlock3

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock4 Using cfiCommon0
        CFI NoFunction
        THUMB
??onCreate??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock4
        REQUIRE onCreate

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock5 Using cfiCommon1
        CFI Function onCreate
        ARM
onCreate:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        MOV      R4,R0
        MOV      R0,#+256
        SWI      +293
        STR      R0,[R4, #+52]
        MOV      R0,#+1
        STRB     R0,[R4, #+12]
        POP      {R4,PC}          ;; return
        CFI EndBlock cfiBlock5

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock6 Using cfiCommon0
        CFI NoFunction
        THUMB
??onClose??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock6
        REQUIRE onClose

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock7 Using cfiCommon1
        CFI Function onClose
        ARM
onClose:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        MOV      R4,#+0
        STRB     R4,[R0, #+12]
        LDR      R0,[R0, #+52]
        SWI      +297
        LDR      R0,??DataTable2  ;; gui_id
        STR      R4,[R0, #+0]
        POP      {R4,PC}          ;; return
        CFI EndBlock cfiBlock7

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock8 Using cfiCommon0
        CFI NoFunction
        THUMB
??onFocus??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock8
        REQUIRE onFocus

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock9 Using cfiCommon1
        CFI Function onFocus
        ARM
onFocus:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        MOV      R4,R0
        MOV      R0,#+1
        SWI      +571
        SWI      +383
        MOV      R0,#+2
        STRB     R0,[R4, #+12]
        SWI      +319
        POP      {R4,PC}          ;; return
        CFI EndBlock cfiBlock9

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock10 Using cfiCommon0
        CFI NoFunction
        THUMB
??onUnfocus??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock10
        REQUIRE onUnfocus

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock11 Using cfiCommon1
        CFI Function onUnfocus
        ARM
onUnfocus:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        MOV      R4,R0
        MOV      R0,#+0
        SWI      +571
        LDRB     R0,[R4, #+12]
        CMP      R0,#+2
        MOVEQ    R0,#+1
        STRBEQ   R0,[R4, #+12]
        POP      {R4,PC}          ;; return
        CFI EndBlock cfiBlock11

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock12 Using cfiCommon0
        CFI NoFunction
        THUMB
??OnKey??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock12
        REQUIRE OnKey

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock13 Using cfiCommon1
        CFI Function OnKey
        ARM
OnKey:
        PUSH     {LR}
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+4
        LDR      R0,[R1, #+4]
        MOV      R2,#+147
        LDR      R1,[R0, #+4]
        ORR      R2,R2,#0x100
        CMP      R1,R2
        BNE      ??OnKey_0
        LDR      R0,[R0, #+8]
        SUBS     R0,R0,#+4
        BEQ      ??OnKey_1
        SUBS     R0,R0,#+44
        BNE      ??OnKey_0
        BL       SMART_REDRAW
??OnKey_0:
        BL       SMART_REDRAW
        MOV      R0,#+0
        POP      {PC}             ;; return
??OnKey_1:
        MOV      R0,#+1
        POP      {PC}
        CFI EndBlock cfiBlock13

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock14 Using cfiCommon0
        CFI NoFunction
        THUMB
??method8??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock14
        REQUIRE method8

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock15 Using cfiCommon1
        CFI Function method8
        ARM
method8:
        B        ?Subroutine10
        CFI EndBlock cfiBlock15

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock16 Using cfiCommon0
        CFI NoFunction
        THUMB
??method9??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock16
        REQUIRE method9

        RSEG CODE:CODE:NOROOT(2)
        ARM
method9:
        REQUIRE ?Subroutine10
        ;; // Fall through to label ?Subroutine10

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock17 Using cfiCommon1
        CFI NoFunction
        ARM
?Subroutine10:
        MOV      R0,#+0
        BX       LR               ;; return
        CFI EndBlock cfiBlock17

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock18 Using cfiCommon0
        CFI NoFunction
        THUMB
??CreateDebugGUI??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock18
        REQUIRE CreateDebugGUI

        RSEG DATA_C:CONST:SORT:NOROOT(2)
Canvas:
        DATA
        DC16 0, 0, 0, 0
gui_methods:
        DC32 OnRedraw, onCreate, onClose, onFocus, onUnfocus, OnKey, 0H
        DC32 kill_data, method8, method9, 0H

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock19 Using cfiCommon1
        CFI Function CreateDebugGUI
        ARM
CreateDebugGUI:
        PUSH     {R4,R5,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R5 Frame(CFA, -8)
        CFI R4 Frame(CFA, -12)
        CFI CFA R13+12
        MOV      R0,#+56
        SWI      +20
        MOV      R4,R0
        MOV      R1,#+56
        SWI      +285
        SWI      +33161
        MOV      R5,R0
        SWI      +33160
        LDR      R3,??CreateDebugGUI_0  ;; Canvas
        SUB      R1,R5,#+1
        SUB      R0,R0,#+1
        MOV      R2,#+0
        STRH     R2,[R3, #+0]
        MOV      R5,#+24
        STRH     R5,[R3, #+2]
        STRH     R0,[R3, #+4]
        STRH     R1,[R3, #+6]
        STR      R3,[R4, #+0]
        STR      R2,[R4, #+48]
        ADD      R0,R3,#+8
        STR      R0,[R4, #+4]
        SWI      +32789
        STR      R0,[R4, #+32]
        MOV      R0,R4
        SWI      +311
        LDR      R1,??DataTable2  ;; gui_id
        STR      R0,[R1, #+0]
        POP      {R4,R5,PC}       ;; return
        DATA
??CreateDebugGUI_0:
        DC32     Canvas
        CFI EndBlock cfiBlock19

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable2:
        DC32     gui_id

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock20 Using cfiCommon1
        CFI NoFunction
        ARM
??CONNDATA_getTop??rA:
        LDR      R12,??Subroutine11_0  ;; CONNDATA_getTop
        BX       R12
        DATA
??Subroutine11_0:
        DC32     CONNDATA_getTop
        CFI EndBlock cfiBlock20

        RSEG INITTAB:CODE:ROOT(2)
        DATA
?init?tab?DATA_Z:
        DCD      sfe(DATA_Z) - sfb(DATA_Z), sfb(DATA_Z), sfb(DATA_Z)

        END
// 
// 956 bytes in segment CODE
// 172 bytes in segment DATA_C
// 260 bytes in segment DATA_Z
//  12 bytes in segment INITTAB
// 
// 904 bytes of CODE  memory (+ 64 bytes shared)
// 172 bytes of CONST memory
// 260 bytes of DATA  memory
//
//Errors: none
//Warnings: 1
