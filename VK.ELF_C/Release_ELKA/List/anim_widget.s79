//////////////////////////////////////////////////////////////////////////////
//                                                                           /
// IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION   16/Feb/2023  22:41:15 /
// Copyright 1999-2005 IAR Systems. All rights reserved.                     /
//                                                                           /
//    Cpu mode        =  interwork                                           /
//    Endian          =  little                                              /
//    Stack alignment =  4                                                   /
//    Source file     =  D:\Users\alfinant\Documents\Siemens\Dev\IAR\VK.ELF_ /
//                       C\anim_widget.c                                     /
//    Command line    =  D:\Users\alfinant\Documents\Siemens\Dev\IAR\VK.ELF_ /
//                       C\anim_widget.c -D NEWSGOLD -D ELKA -D DEBUG -lCN   /
//                       D:\Users\alfinant\Documents\Siemens\Dev\IAR\VK.ELF_ /
//                       C\Release_ELKA\List\ -la                            /
//                       D:\Users\alfinant\Documents\Siemens\Dev\IAR\VK.ELF_ /
//                       C\Release_ELKA\List\ -o D:\Users\alfinant\Documents /
//                       \Siemens\Dev\IAR\VK.ELF_C\Release_ELKA\Obj\ -z9     /
//                       --cpu_mode arm --endian little --cpu ARM926EJ-S     /
//                       --stack_align 4 --interwork --diag_suppress Pe301   /
//                       -e --fpu None --dlib_config                         /
//                       D:\Users\alfinant\Documents\Siemens\IAR\ARM\LIB\dl5 /
//                       tpainl8n.h -I D:\Users\alfinant\Documents\Siemens\I /
//                       AR\ARM\INC\ --inline_threshold=2                    /
//    List file       =  D:\Users\alfinant\Documents\Siemens\Dev\IAR\VK.ELF_ /
//                       C\Release_ELKA\List\anim_widget.s79                 /
//                                                                           /
//                                                                           /
//////////////////////////////////////////////////////////////////////////////

        NAME anim_widget

        RTMODEL "StackAlign4", "USED"
        RTMODEL "__cpu_mode", "__pcs__interwork"
        RTMODEL "__data_model", "absolute"
        RTMODEL "__dlib_file_descriptor", "0"
        RTMODEL "__endian", "little"
        RTMODEL "__rt_version", "6"

        RSEG CSTACK:DATA:NOROOT(2)

        PUBWEAK `?*?DATA_ID`
        MULTWEAK ??AnimWidgetHandler??rT
        MULTWEAK ??AnimWidget_Close??rT
        MULTWEAK ??AnimWidget_IsBottom??rT
        MULTWEAK ??AnimWidget_Load_body??rT
        MULTWEAK ??AnimWidget_Wait_bottom??rT
        MULTWEAK ??AnimWidget_Wait_center??rT
        MULTWEAK ??AnimWidget_Wait_headline??rT
??DataTable0 EQU 0
??DataTable1 EQU 0
??DataTable11 EQU 0
??DataTable13 EQU 0
??DataTable2 EQU 0
??DataTable3 EQU 0
??DataTable4 EQU 0
??DataTable5 EQU 0
??DataTable6 EQU 0
??DataTable7 EQU 0
??DataTable8 EQU 0
??DataTable9 EQU 0
        PUBWEAK ?init?tab?DATA_I
        PUBLIC AnimWidgetHandler
        FUNCTION AnimWidgetHandler,0203H
        LOCFRAME CSTACK, 4, STACK
        PUBLIC AnimWidget_Close
        FUNCTION AnimWidget_Close,0201H
        LOCFRAME CSTACK, 12, STACK
        PUBLIC AnimWidget_IsBottom
        FUNCTION AnimWidget_IsBottom,0201H
        PUBLIC AnimWidget_Load_body
        FUNCTION AnimWidget_Load_body,0201H
        LOCFRAME CSTACK, 280, STACK
        FUNCTION AnimWidget_Wait,0203H
        LOCFRAME CSTACK, 28, STACK
        PUBLIC AnimWidget_Wait_bottom
        FUNCTION AnimWidget_Wait_bottom,0201H
        LOCFRAME CSTACK, 280, STACK
        PUBLIC AnimWidget_Wait_center
        FUNCTION AnimWidget_Wait_center,0201H
        LOCFRAME CSTACK, 280, STACK
        PUBLIC AnimWidget_Wait_headline
        FUNCTION AnimWidget_Wait_headline,0201H
        LOCFRAME CSTACK, 280, STACK
        FUNCTION HandleObsError,0603H
        LOCFRAME CSTACK, 8, STACK
        FUNCTION HandleObsFrameUpdate,0603H
        LOCFRAME CSTACK, 80, STACK
        FUNCTION HandleObsPrepareCon,0603H
        LOCFRAME CSTACK, 4, STACK
        
        CFI Names cfiNames0
        CFI StackFrame CFA R13 HUGEDATA
        CFI Resource R0:32, R1:32, R2:32, R3:32, R4:32, R5:32, R6:32, R7:32
        CFI Resource R8:32, R9:32, R10:32, R11:32, R12:32, CPSR:32, R13:32
        CFI Resource R14:32, SPSR:32
        CFI VirtualResource ?RET:32
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 2
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon0
        
        
        CFI Common cfiCommon1 Using cfiNames0
        CFI CodeAlign 4
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon1
        
AnimWidgetHandler   SYMBOL "AnimWidgetHandler"
??AnimWidgetHandler??rT SYMBOL "??rT", AnimWidgetHandler
AnimWidget_Close    SYMBOL "AnimWidget_Close"
??AnimWidget_Close??rT SYMBOL "??rT", AnimWidget_Close
AnimWidget_IsBottom SYMBOL "AnimWidget_IsBottom"
??AnimWidget_IsBottom??rT SYMBOL "??rT", AnimWidget_IsBottom
AnimWidget_Load_body SYMBOL "AnimWidget_Load_body"
??AnimWidget_Load_body??rT SYMBOL "??rT", AnimWidget_Load_body
AnimWidget_Wait_bottom SYMBOL "AnimWidget_Wait_bottom"
??AnimWidget_Wait_bottom??rT SYMBOL "??rT", AnimWidget_Wait_bottom
AnimWidget_Wait_center SYMBOL "AnimWidget_Wait_center"
??AnimWidget_Wait_center??rT SYMBOL "??rT", AnimWidget_Wait_center
AnimWidget_Wait_headline SYMBOL "AnimWidget_Wait_headline"
??AnimWidget_Wait_headline??rT SYMBOL "??rT", AnimWidget_Wait_headline

        EXTERN APP_DIR
        EXTERN csm


        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock0 Using cfiCommon0
        CFI NoFunction
        THUMB
??AnimWidget_IsBottom??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock0
        REQUIRE AnimWidget_IsBottom

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock1 Using cfiCommon1
        CFI Function AnimWidget_IsBottom
        ARM
AnimWidget_IsBottom:
        LDR      R0,??AnimWidget_IsBottom_0  ;; obj_anim + 8
        LDR      R0,[R0, #+0]
        CMP      R0,#+2
        MOVEQ    R0,#+1
        BXEQ     LR
        MOV      R0,#+0
        BX       LR               ;; return
        DATA
??AnimWidget_IsBottom_0:
        DC32     obj_anim + 8
        CFI EndBlock cfiBlock1

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock2 Using cfiCommon0
        CFI NoFunction
        THUMB
??HandleObsPrepareCon??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock2
        REQUIRE HandleObsPrepareCon

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock3 Using cfiCommon1
        CFI Function HandleObsPrepareCon
        ARM
HandleObsPrepareCon:
        PUSH     {LR}
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+4
        SWI      +606
        MOV      R0,#+0
        POP      {PC}             ;; return
        CFI EndBlock cfiBlock3

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock4 Using cfiCommon0
        CFI NoFunction
        THUMB
??HandleObsFrameUpdate??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock4
        REQUIRE HandleObsFrameUpdate

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock5 Using cfiCommon1
        CFI Function HandleObsFrameUpdate
        ARM
HandleObsFrameUpdate:
        PUSH     {R4-R9,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R9 Frame(CFA, -8)
        CFI R8 Frame(CFA, -12)
        CFI R7 Frame(CFA, -16)
        CFI R6 Frame(CFA, -20)
        CFI R5 Frame(CFA, -24)
        CFI R4 Frame(CFA, -28)
        CFI CFA R13+28
        LDR      R4,??DataTable14  ;; obj_anim
        SUB      SP,SP,#+48
        CFI CFA R13+76
        MOV      R5,#+0
        MOV      R6,#+0
        MOV      R1,SP
        SWI      +607
        CMP      R0,#+0
        BNE      ??HandleObsFrameUpdate_0
        LDR      R0,[R4, #+4]
        CMP      R0,#+0
        BEQ      ??HandleObsFrameUpdate_1
        LDR      R0,[R0, #+8]
        SWI      +21
        LDR      R0,[R4, #+4]
        SWI      +21
??HandleObsFrameUpdate_1:
        MOV      R0,#+12
        SWI      +20
        STR      R0,[R4, #+4]
        LDR      R1,[SP, #+0]
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR      R1,[SP, #+0]
        LDRH     R1,[R1, #+2]
        STRH     R1,[R0, #+2]
        LDR      R1,[SP, #+0]
        LDR      R1,[R1, #+4]
        AND      R1,R1,#0xFF
        STR      R1,[R0, #+4]
        LDR      R0,[SP, #+0]
        LDR      R2,[R0, #+4]
        LDRSH    R1,[R0, #+2]
        LDRSH    R0,[R0, #+0]
        AND      R2,R2,#0xFF
        SWI      +600
        MOV      R7,R0
        SWI      +20
        LDR      R3,[R4, #+4]
        MOV      R2,R7
        STR      R0,[R3, #+8]
        LDR      R0,[SP, #+0]
        LDR      R1,[R0, #+8]
        LDR      R0,[R3, #+8]
        SWI      +286
??HandleObsFrameUpdate_0:
        LDR      R0,[R4, #+4]
        LDRSH    R7,[R0, #+0]
        LDRSH    R8,[R0, #+2]
        LDR      R0,[R4, #+0]
        CMP      R0,#+0
        BEQ      ??HandleObsFrameUpdate_2
        LDR      R0,[R4, #+8]
        ASR      R9,R7,#+1
        CMP      R0,#+0
        BNE      ??HandleObsFrameUpdate_3
        SWI      +33160
        RSB      R5,R9,R0, ASR #+1
        SWI      +33162
        MOV      R6,R0
        SWI      +33161
        MOV      R9,R0
        SWI      +33162
        SUB      R1,R9,#+24
        SUB      R9,R1,R0
        SWI      +33163
        SUB      R0,R9,R0
        ADD      R0,R6,R0, ASR #+1
        ADD      R0,R0,#+24
        SUB      R6,R0,R8, ASR #+1
        B        ??HandleObsFrameUpdate_4
??HandleObsFrameUpdate_3:
        CMP      R0,#+1
        BNE      ??HandleObsFrameUpdate_5
        SWI      +33160
        SUB      R0,R0,R7
        SUB      R5,R0,#+2
        MOV      R6,#+24
        B        ??HandleObsFrameUpdate_4
??HandleObsFrameUpdate_5:
        CMP      R0,#+2
        BNE      ??HandleObsFrameUpdate_4
        SWI      +33160
        RSB      R5,R9,R0, ASR #+1
        SWI      +33161
        MOV      R6,R0
        SWI      +33163
        SUB      R0,R6,R0
        SUB      R0,R0,R8
        ADD      R6,R0,#+1
??HandleObsFrameUpdate_4:
        ADD      R0,R8,R6
        PUSH     {R0}
        CFI CFA R13+80
        ADD      R3,R7,R5
        MOV      R2,R6
        MOV      R1,R5
        ADD      R0,SP,#+8
        SWI      +308
        LDR      R3,[R4, #+4]
        MOV      R2,#+0
        ADD      R1,SP,#+8
        ADD      R0,SP,#+16
        SWI      +337
        LDR      R0,[R4, #+12]
        ADD      SP,SP,#+4
        CFI CFA R13+76
        CMP      R0,#+0
        BEQ      ??HandleObsFrameUpdate_6
        SWI      +319
??HandleObsFrameUpdate_6:
        ADD      R0,SP,#+12
        SWI      +298
        MOV      R0,#+0
??HandleObsFrameUpdate_2:
        ADD      SP,SP,#+48       ;; stack cleaning
        CFI CFA R13+28
        POP      {R4-R9,PC}       ;; return
        CFI EndBlock cfiBlock5

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock6 Using cfiCommon0
        CFI NoFunction
        THUMB
??HandleObsError??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock6
        REQUIRE HandleObsError

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock7 Using cfiCommon1
        CFI Function HandleObsError
        ARM
HandleObsError:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        LDR      R4,??DataTable14  ;; obj_anim
        MOV      R1,#+0
        LDR      R0,[R4, #+0]
        SWI      +635
        LDR      R0,[R4, #+0]
        SWI      +602
        MOV      R0,#+0
        STR      R0,[R4, #+0]
        POP      {R4,PC}          ;; return
        CFI EndBlock cfiBlock7

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock8 Using cfiCommon0
        CFI NoFunction
        THUMB
??AnimWidgetHandler??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock8
        REQUIRE AnimWidgetHandler

        RSEG DATA_I:DATA:SORT:NOROOT(2)
obj_anim:
        DS8 4
        REQUIRE `?<Initializer for obj_anim>`
        DS8 4
        REQUIRE `?<Initializer for img_anim>`
        DS8 4
        REQUIRE `?<Initializer for widget_type>`
        DS8 4
        REQUIRE `?<Initializer for transparent>`
        DS8 32
        REQUIRE `?<Initializer for ObsEventsHandlers>`

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock9 Using cfiCommon1
        CFI Function AnimWidgetHandler
        ARM
AnimWidgetHandler:
        LDR      R1,??DataTable14  ;; obj_anim
        PUSH     {LR}
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+4
        LDR      R2,[R1, #+0]
        CMP      R2,#+0
        POPEQ    {PC}
        LDR      R3,[R0, #+12]
        CMP      R3,R2
        POPNE    {PC}
        ADD      R1,R1,#+16
        SWI      +612
        POP      {PC}             ;; return
        CFI EndBlock cfiBlock9

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock10 Using cfiCommon0
        CFI NoFunction
        THUMB
??AnimWidget_Wait??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock10
        REQUIRE AnimWidget_Wait

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock11 Using cfiCommon1
        CFI Function AnimWidget_Wait
        ARM
AnimWidget_Wait:
        PUSH     {R0,R4,R5,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R5 Frame(CFA, -8)
        CFI R4 Frame(CFA, -12)
        CFI CFA R13+16
        MOV      R1,#+0
        MOV      R4,R0
        STR      R1,[SP, #+0]
        SWI      +737
        MOV      R1,SP
        PUSH     {R1}
        CFI CFA R13+20
        MOV      R3,#+85
        ORR      R3,R3,#0x8000
        MOV      R2,#+2
        MOV      R1,#+0
        PUSH     {R1}
        CFI CFA R13+24
        MOV      R1,#+1
        PUSH     {R1}
        CFI CFA R13+28
        MOV      R1,#+45
        SWI      +601
        MOV      R5,R0
        LDR      R0,[SP, #+12]
        ADD      SP,SP,#+12
        CFI CFA R13+16
        CMP      R0,#+0
        BNE      ??AnimWidget_Wait_0
        LDR      R0,??AnimWidget_Wait_1  ;; csm
        LDR      R1,[R0, #+0]
        MOV      R0,R5
        SWI      +635
        STR      R0,[SP, #+0]
        MOV      R2,R4
        MOV      R1,#+0
        MOV      R0,R5
        SWI      +603
        STR      R0,[SP, #+0]
        CMP      R0,#+0
        BNE      ??AnimWidget_Wait_0
        MOV      R1,#+0
        MOV      R0,R5
        SWI      +609
        STR      R0,[SP, #+0]
        CMP      R0,#+0
        BNE      ??AnimWidget_Wait_0
        LDR      R4,??DataTable14  ;; obj_anim
        LDR      R0,[R4, #+8]
        CMP      R0,#+1
        MOVEQ    R2,#+32
        MOVEQ    R1,#+32
        MOVNE    R2,#+232
        MOVNE    R1,#+240
        MOV      R0,R5
        SWI      +605
        STR      R0,[SP, #+0]
        LDR      R0,[SP, #+0]
        CMP      R0,#+0
        BNE      ??AnimWidget_Wait_0
        MOV      R1,#+5
        MOV      R0,R5
        SWI      +611
        STR      R0,[SP, #+0]
        CMP      R0,#+0
        BNE      ??AnimWidget_Wait_0
        MOV      R0,R5
        SWI      +616
        STR      R0,[SP, #+0]
        MOV      R1,#+6
        ORR      R1,R1,#0x8000
        CMP      R0,R1
        STREQ    R5,[R4, #+0]
        POPEQ    {R0,R4,R5,PC}
??AnimWidget_Wait_0:
        MOV      R0,R5
        SWI      +602
        POP      {R0,R4,R5,PC}    ;; return
        DATA
??AnimWidget_Wait_1:
        DC32     csm
        CFI EndBlock cfiBlock11

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock12 Using cfiCommon0
        CFI NoFunction
        THUMB
??AnimWidget_Wait_center??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock12
        REQUIRE AnimWidget_Wait_center

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock13 Using cfiCommon1
        CFI Function AnimWidget_Wait_center
        ARM
AnimWidget_Wait_center:
        PUSH     {LR}
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+4
        SUB      SP,SP,#+276
        CFI CFA R13+280
        BL       AnimWidget_Close
        MOV      R2,#+127
        ADD      R1,SP,#+20
        MOV      R0,SP
        SWI      +295
        LDR      R2,??DataTable12  ;; APP_DIR
        LDR      R1,??DataTable10  ;; `?<Constant "%simg\\\\body_wait.gif">`
        MOV      R0,SP
        SWI      +292
        LDR      R0,??DataTable14  ;; obj_anim
        MOV      R1,#+0
        B        ?Subroutine11
        CFI EndBlock cfiBlock13

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock14 Using cfiCommon0
        CFI NoFunction
        THUMB
??AnimWidget_Load_body??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock14
        REQUIRE AnimWidget_Load_body

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock15 Using cfiCommon1
        CFI Function AnimWidget_Load_body
        ARM
AnimWidget_Load_body:
        PUSH     {LR}
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+4
        SUB      SP,SP,#+276
        CFI CFA R13+280
        BL       AnimWidget_Close
        MOV      R2,#+127
        ADD      R1,SP,#+20
        MOV      R0,SP
        SWI      +295
        LDR      R2,??DataTable12  ;; APP_DIR
        LDR      R1,??AnimWidget_Load_body_0  ;; `?<Constant "%simg\\\\body_load.gif">`
        MOV      R0,SP
        SWI      +292
        LDR      R0,??DataTable14  ;; obj_anim
        MOV      R1,#+0
        STR      R1,[R0, #+8]
        B        ??Subroutine11_0
        DATA
??AnimWidget_Load_body_0:
        DC32     `?<Constant "%simg\\\\body_load.gif">`
        CFI EndBlock cfiBlock15

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock16 Using cfiCommon0
        CFI NoFunction
        THUMB
??AnimWidget_Wait_bottom??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock16
        REQUIRE AnimWidget_Wait_bottom

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock17 Using cfiCommon1
        CFI Function AnimWidget_Wait_bottom
        ARM
AnimWidget_Wait_bottom:
        PUSH     {LR}
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+4
        SUB      SP,SP,#+276
        CFI CFA R13+280
        BL       AnimWidget_Close
        MOV      R2,#+127
        ADD      R1,SP,#+20
        MOV      R0,SP
        SWI      +295
        LDR      R2,??DataTable12  ;; APP_DIR
        LDR      R1,??DataTable10  ;; `?<Constant "%simg\\\\body_wait.gif">`
        MOV      R0,SP
        SWI      +292
        LDR      R0,??DataTable14  ;; obj_anim
        MOV      R1,#+2
        CFI EndBlock cfiBlock17
        REQUIRE ?Subroutine11
        ;; // Fall through to label ?Subroutine11

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock18 Using cfiCommon1
        CFI NoFunction
        CFI CFA R13+280
        CFI ?RET Frame(CFA, -4)
        ARM
?Subroutine11:
        STR      R1,[R0, #+8]
        MOV      R1,#+1
??Subroutine11_0:
        STR      R1,[R0, #+12]
        MOV      R0,SP
        BL       AnimWidget_Wait
        ADD      SP,SP,#+276
        CFI CFA R13+4
        POP      {PC}             ;; return
        CFI EndBlock cfiBlock18

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable10:
        DC32     `?<Constant "%simg\\\\body_wait.gif">`

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock19 Using cfiCommon0
        CFI NoFunction
        THUMB
??AnimWidget_Wait_headline??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock19
        REQUIRE AnimWidget_Wait_headline

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock20 Using cfiCommon1
        CFI Function AnimWidget_Wait_headline
        ARM
AnimWidget_Wait_headline:
        PUSH     {LR}
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+4
        SUB      SP,SP,#+276
        CFI CFA R13+280
        BL       AnimWidget_Close
        MOV      R2,#+127
        ADD      R1,SP,#+20
        MOV      R0,SP
        SWI      +295
        LDR      R2,??DataTable12  ;; APP_DIR
        LDR      R1,??AnimWidget_Wait_headline_0  ;; `?<Constant "%simg\\\\headline_wait.gif">`
        MOV      R0,SP
        SWI      +292
        LDR      R0,??DataTable14  ;; obj_anim
        MOV      R1,#+1
        STR      R1,[R0, #+8]
        B        ??Subroutine11_0
        DATA
??AnimWidget_Wait_headline_0:
        DC32     `?<Constant "%simg\\\\headline_wait.gif">`
        CFI EndBlock cfiBlock20

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable12:
        DC32     APP_DIR

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock21 Using cfiCommon0
        CFI NoFunction
        THUMB
??AnimWidget_Close??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock21
        REQUIRE AnimWidget_Close

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock22 Using cfiCommon1
        CFI Function AnimWidget_Close
        ARM
AnimWidget_Close:
        PUSH     {R4,R5,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R5 Frame(CFA, -8)
        CFI R4 Frame(CFA, -12)
        CFI CFA R13+12
        LDR      R4,??DataTable14  ;; obj_anim
        MOV      R5,#+0
        LDR      R0,[R4, #+0]
        CMP      R0,#+0
        BEQ      ??AnimWidget_Close_0
        MOV      R1,#+0
        SWI      +635
        LDR      R0,[R4, #+0]
        SWI      +602
        STR      R5,[R4, #+0]
??AnimWidget_Close_0:
        LDR      R0,[R4, #+4]
        CMP      R0,#+0
        POPEQ    {R4,R5,PC}
        LDR      R0,[R0, #+8]
        SWI      +21
        LDR      R0,[R4, #+4]
        SWI      +21
        STR      R5,[R4, #+4]
        POP      {R4,R5,PC}       ;; return
        CFI EndBlock cfiBlock22

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable14:
        DC32     obj_anim

        RSEG DATA_ID:CONST:SORT:NOROOT(2)
`?<Initializer for obj_anim>`:
        DATA
        DC32 0
`?<Initializer for img_anim>`:
        DC32 0H
`?<Initializer for widget_type>`:
        DC8 0, 0, 0, 0
`?<Initializer for transparent>`:
        DC8 0, 0, 0, 0
`?<Initializer for ObsEventsHandlers>`:
        DC32 53, HandleObsPrepareCon, 10, HandleObsFrameUpdate, 12
        DC32 HandleObsError, 102, 0H

        RSEG DATA_ID:CONST:SORT:NOROOT(2)
`?*?DATA_ID`:

        RSEG INITTAB:CODE:ROOT(2)
        DATA
?init?tab?DATA_I:
        DCD      sfe(DATA_I) - sfb(DATA_I), sfb(DATA_I), sfb(DATA_ID)

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant "%simg\\\\body_wait.gif">`:
        DATA
        DC8 "%simg\\body_wait.gif"

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant "%simg\\\\body_load.gif">`:
        DATA
        DC8 "%simg\\body_load.gif"

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant "%simg\\\\headline_wait.gif">`:
        DATA
        DC8 "%simg\\headline_wait.gif"

        END
// 
// 1 244 bytes in segment CODE
//    64 bytes in segment DATA_C
//    48 bytes in segment DATA_I
//    48 bytes in segment DATA_ID
//    12 bytes in segment INITTAB
// 
// 1 200 bytes of CODE  memory (+ 56 bytes shared)
//   112 bytes of CONST memory
//    48 bytes of DATA  memory
//
//Errors: none
//Warnings: 1
