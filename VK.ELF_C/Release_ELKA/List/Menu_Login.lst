##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION    16/Feb/2023  22:41:15 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  D:\Users\alfinant\Documents\Siemens\Dev\IAR\VK.ELF_C #
#                       \Menu_Login.c                                        #
#    Command line    =  D:\Users\alfinant\Documents\Siemens\Dev\IAR\VK.ELF_C #
#                       \Menu_Login.c -D NEWSGOLD -D ELKA -D DEBUG -lCN      #
#                       D:\Users\alfinant\Documents\Siemens\Dev\IAR\VK.ELF_C #
#                       \Release_ELKA\List\ -la D:\Users\alfinant\Documents\ #
#                       Siemens\Dev\IAR\VK.ELF_C\Release_ELKA\List\ -o       #
#                       D:\Users\alfinant\Documents\Siemens\Dev\IAR\VK.ELF_C #
#                       \Release_ELKA\Obj\ -z9 --cpu_mode arm --endian       #
#                       little --cpu ARM926EJ-S --stack_align 4 --interwork  #
#                       --diag_suppress Pe301 -e --fpu None --dlib_config    #
#                       D:\Users\alfinant\Documents\Siemens\IAR\ARM\LIB\dl5t #
#                       painl8n.h -I D:\Users\alfinant\Documents\Siemens\IAR #
#                       \ARM\INC\ --inline_threshold=2                       #
#    List file       =  D:\Users\alfinant\Documents\Siemens\Dev\IAR\VK.ELF_C #
#                       \Release_ELKA\List\Menu_Login.lst                    #
#    Object file     =  D:\Users\alfinant\Documents\Siemens\Dev\IAR\VK.ELF_C #
#                       \Release_ELKA\Obj\Menu_Login.r79                     #
#                                                                            #
#                                                                            #
##############################################################################

D:\Users\alfinant\Documents\Siemens\Dev\IAR\VK.ELF_C\Menu_Login.c
      1          #include <siemens\swilib.h>
      2          #include "rect_patcher.h"

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void patch_header(HEADER_DESC const *)
   \                     patch_header:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0000A0E3           MOV      R0,#+0
   \   0000000C   B000C4E1           STRH     R0,[R4, #+0]
   \   00000010   1800A0E3           MOV      R0,#+24
   \   00000014   B200C4E1           STRH     R0,[R4, #+2]
   \   00000018   888100EF           SWI      +33160
   \   0000001C   010040E2           SUB      R0,R0,#+1
   \   00000020   B400C4E1           STRH     R0,[R4, #+4]
   \   00000024   8A8100EF           SWI      +33162
   \   00000028   170080E2           ADD      R0,R0,#+23
   \   0000002C   B600C4E1           STRH     R0,[R4, #+6]
   \   00000030   1080BDE8           POP      {R4,PC}          ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void patch_input(INPUTDIA_DESC const *)
   \                     patch_input:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0400A0E3           MOV      R0,#+4
   \   0000000C   B801C4E1           STRH     R0,[R4, #+24]
   \   00000010   8A8100EF           SWI      +33162
   \   00000014   1A0080E2           ADD      R0,R0,#+26
   \   00000018   BA01C4E1           STRH     R0,[R4, #+26]
   \   0000001C   888100EF           SWI      +33160
   \   00000020   040040E2           SUB      R0,R0,#+4
   \   00000024   BC01C4E1           STRH     R0,[R4, #+28]
   \   00000028   898100EF           SWI      +33161
   \   0000002C   0050A0E1           MOV      R5,R0
   \   00000030   8B8100EF           SWI      +33163
   \   00000034   000045E0           SUB      R0,R5,R0
   \   00000038   020040E2           SUB      R0,R0,#+2
   \   0000003C   BE01C4E1           STRH     R0,[R4, #+30]
   \   00000040   3080BDE8           POP      {R4,R5,PC}       ;; return
      3          #include "dyn_images.h"
      4          #include "dyn_theme.h"
      5          #include "anim_widget.h"
      6          #include "main.h"
      7          #include "socket_work.h"
      8          //#include "ssl_work.h
      9          #include "http.h"
     10          #include "process.h"
     11          #include "vk_api.h"
     12          
     13          static int gui_id = 0;
     14          

   \                                 In segment DATA_C, align 4, align-sorted
     15          static const char percent_t[]="%t";
   \                     percent_t:
   \   00000000   257400             DC8 "%t"
   \   00000003   00                 DC8 0
   \   00000004   C2EAEEEDF2E0       DC8 "\302\352\356\355\362\340\352\362\345"
   \              EAF2E500    
   \   0000000E   0000               DC8 0, 0
     16          static const char HEADER_TEXT[]="Вконтакте";
     17          
     18          extern int CreateDebugGUI();
     19          

   \                                 In segment DATA_Z, align 4, align-sorted
     20          int vk_com_parsed=0;
   \                     vk_com_parsed:
   \   00000000                      DS8 4

   \                                 In segment DATA_Z, align 4, align-sorted
     21          char action_url[256];
   \                     action_url:
   \   00000000                      DS8 256

   \                                 In segment DATA_Z, align 4, align-sorted
     22          char login[32];
     23          char pass[32];
     24          char captcha_key[32];
   \                     captcha_key:
   \   00000000                      DS8 32
   \                     login:
   \   00000020                      DS8 32
   \                     pass:
   \   00000040                      DS8 32

   \                                 In segment DATA_Z, align 4, align-sorted
     25          char captcha_sid[32];
   \                     captcha_sid:
   \   00000000                      DS8 32
     26          //static char post_data[128];
     27          
     28          
     29          static HEADER_DESC hdr = {0,0,0,0,NULL,NULL,LGP_NULL};
     30          
     31          //static const int softkeys[] = {0, 1, 2};
     32          
     33          static SOFTKEY_DESC sk[]=
     34          {
     35            {0x0018, 0x0000, (int)"Ок "},
     36            {0x0001, 0x0000, (int)"Выход"},
     37            {0x003D, 0x0000, (int)LGP_DOIT_PIC}
     38          };
     39          
     40          static SOFTKEYSTAB skt=
     41          {
     42            sk, 0
     43          };
     44          

   \                                 In segment CODE, align 4, keep-with-next
     45          static void ed_inp_locret(void){}
   \                     ed_inp_locret:
   \   00000000   1EFF2FE1           BX       LR               ;; return
     46          

   \                                 In segment CODE, align 4, keep-with-next
     47          static int ed_inp_onkey(GUI *data, GUI_MSG *msg)
     48          {
   \                     ed_inp_onkey:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   84D04DE2           SUB      SP,SP,#+132
   \   00000008   0140A0E1           MOV      R4,R1
   \   0000000C   0060A0E1           MOV      R6,R0
     49            EDITCONTROL ec_login;
     50            EDITCONTROL ec_pass;
     51            EDITCONTROL ec_captcha;
     52            
     53            if (msg->keys==0xFFF)  // OK
   \   00000010   F200D4E1           LDRSH    R0,[R4, #+2]
   \   00000014   FF10A0E3           MOV      R1,#+255
   \   00000018   F01E81E3           ORR      R1,R1,#0xF00
   \   0000001C   010050E1           CMP      R0,R1
   \   00000020   3400001A           BNE      ??ed_inp_onkey_0
     54            {
     55              ExtractEditControl(data, 2, &ec_login);//email orr number
     56                ws_2str(ec_login.pWS, login, 31);
   \   00000024   1C519FE5           LDR      R5,??ed_inp_onkey_1  ;; captcha_key
   \   00000028   0D20A0E1           MOV      R2,SP
   \   0000002C   0210A0E3           MOV      R1,#+2
   \   00000030   0600A0E1           MOV      R0,R6
   \   00000034   690100EF           SWI      +361
   \   00000038   28009DE5           LDR      R0,[SP, #+40]
   \   0000003C   1F20A0E3           MOV      R2,#+31
   \   00000040   201085E2           ADD      R1,R5,#+32
   \   00000044   A30000EF           SWI      +163
     57                
     58                ExtractEditControl(data, 4, &ec_pass);//pass
   \   00000048   2C208DE2           ADD      R2,SP,#+44
   \   0000004C   0410A0E3           MOV      R1,#+4
   \   00000050   0600A0E1           MOV      R0,R6
   \   00000054   690100EF           SWI      +361
     59                ws_2str(ec_pass.pWS, pass, 31);
   \   00000058   54009DE5           LDR      R0,[SP, #+84]
   \   0000005C   1F20A0E3           MOV      R2,#+31
   \   00000060   401085E2           ADD      R1,R5,#+64
   \   00000064   A30000EF           SWI      +163
     60                
     61                *captcha_key = '\0';
   \   00000068   0000A0E3           MOV      R0,#+0
   \   0000006C   0000C5E5           STRB     R0,[R5, #+0]
     62                if (ExtractEditControl(data,6,&ec_captcha))//captcha_key
   \   00000070   58208DE2           ADD      R2,SP,#+88
   \   00000074   0610A0E3           MOV      R1,#+6
   \   00000078   0600A0E1           MOV      R0,R6
   \   0000007C   690100EF           SWI      +361
   \   00000080   000050E3           CMP      R0,#+0
   \   00000084   0300000A           BEQ      ??ed_inp_onkey_2
     63                  ws_2str(ec_captcha.pWS, captcha_key, 31); 
   \   00000088   80009DE5           LDR      R0,[SP, #+128]
   \   0000008C   1F20A0E3           MOV      R2,#+31
   \   00000090   0510A0E1           MOV      R1,R5
   \   00000094   A30000EF           SWI      +163
     64                
     65                if (wstrlen(ec_login.pWS) && wstrlen(ec_pass.pWS))
   \                     ??ed_inp_onkey_2:
   \   00000098   28009DE5           LDR      R0,[SP, #+40]
   \   0000009C   230100EF           SWI      +291
   \   000000A0   000050E3           CMP      R0,#+0
   \   000000A4   1000000A           BEQ      ??ed_inp_onkey_3
   \   000000A8   54009DE5           LDR      R0,[SP, #+84]
   \   000000AC   230100EF           SWI      +291
   \   000000B0   000050E3           CMP      R0,#+0
   \   000000B4   0C00000A           BEQ      ??ed_inp_onkey_3
     66                {
     67                  INET_PROCESS = AUTH_DIRECT;
   \   000000B8   ........           LDR      R0,??DataTable1  ;; INET_PROCESS
     68                  //sock_keepalive = 1;
     69                  SUBPROC((void *)HttpSendReq, url_auth_direct(login, pass, STATUS+MESSAGES+FRIENDS+GROUPS), 0);
   \   000000BC   88209FE5           LDR      R2,??ed_inp_onkey_1+0x4  ;; 0x41402
   \   000000C0   0610A0E3           MOV      R1,#+6
   \   000000C4   001080E5           STR      R1,[R0, #+0]
   \   000000C8   401085E2           ADD      R1,R5,#+64
   \   000000CC   200085E2           ADD      R0,R5,#+32
   \   000000D0   ........           _BLF     url_auth_direct,??url_auth_direct??rA
   \   000000D4   0020A0E3           MOV      R2,#+0
   \   000000D8   0010A0E1           MOV      R1,R0
   \   000000DC   6C009FE5           LDR      R0,??ed_inp_onkey_1+0x8  ;; HttpSendReq
   \   000000E0   710100EF           SWI      +369
     70                  AnimWidget_Wait_bottom();
   \   000000E4   ........           _BLF     AnimWidget_Wait_bottom,??AnimWidget_Wait_bottom??rA
   \   000000E8   020000EA           B        ??ed_inp_onkey_0
     71                }
     72                else
     73                  ShowMSG(1, (int)"Заполните все поля");    
   \                     ??ed_inp_onkey_3:
   \   000000EC   60109FE5           LDR      R1,??ed_inp_onkey_1+0xC  ;; `?<Constant "\\307\\340\\357\\356\\353\\355\\350\\362\\3`
   \   000000F0   0100A0E3           MOV      R0,#+1
   \   000000F4   480100EF           SWI      +328
     74            }
     75            
     76            if (msg->keys==0xFFE)  // close
   \                     ??ed_inp_onkey_0:
   \   000000F8   F200D4E1           LDRSH    R0,[R4, #+2]
   \   000000FC   FE10A0E3           MOV      R1,#+254
   \   00000100   F01E81E3           ORR      R1,R1,#0xF00
   \   00000104   010050E1           CMP      R0,R1
     77            {
     78              return (1);
   \   00000108   0100A003           MOVEQ    R0,#+1
   \   0000010C   0B00000A           BEQ      ??ed_inp_onkey_4
     79            }
     80           
     81            if ((msg->gbsmsg->msg==KEY_DOWN)||(msg->gbsmsg->msg==LONG_PRESS))
   \   00000110   040094E5           LDR      R0,[R4, #+4]
   \   00000114   9320A0E3           MOV      R2,#+147
   \   00000118   041090E5           LDR      R1,[R0, #+4]
   \   0000011C   402F82E3           ORR      R2,R2,#0x100
   \   00000120   020051E1           CMP      R1,R2
   \   00000124   02208212           ADDNE    R2,R2,#+2
   \   00000128   02005111           CMPNE    R1,R2
     82            { 
     83              switch(msg->gbsmsg->submess)
   \   0000012C   08009005           LDREQ    R0,[R0, #+8]
   \   00000130   0B005003           CMPEQ    R0,#+11
   \   00000134   0000001A           BNE      ??ed_inp_onkey_5
     84              {
     85              case GREEN_BUTTON: CreateDebugGUI();
   \   00000138   ........           _BLF     CreateDebugGUI,??CreateDebugGUI??rA
     86              break;
     87              }
     88            }
     89          
     90            return(0);
   \                     ??ed_inp_onkey_5:
   \   0000013C   0000A0E3           MOV      R0,#+0
   \                     ??ed_inp_onkey_4:
   \   00000140   84D08DE2           ADD      SP,SP,#+132      ;; stack cleaning
   \   00000144   7080BDE8           POP      {R4-R6,PC}       ;; return
   \                     ??ed_inp_onkey_1:
   \   00000148   ........           DC32     captcha_key
   \   0000014C   02140400           DC32     0x41402
   \   00000150   ........           DC32     HttpSendReq
   \   00000154   ........           DC32     `?<Constant "\\307\\340\\357\\356\\353\\355\\350\\362\\3`
     91          }
     92          

   \                                 In segment CODE, align 4, keep-with-next
     93          static void ed_inp_ghook(GUI *data, int cmd)
     94          {
   \                     ed_inp_ghook:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
     95            static SOFTKEY_DESC ok = {0x0FFF, 0x0000,(int)"OK"};
     96            static SOFTKEY_DESC close = {0x0FFE, 0x0000,(int)"Отмена"};
     97          
     98           // static int hdr_pic;
     99             
    100            if (cmd == TI_CMD_CREATE)
   \   00000008   020051E3           CMP      R1,#+2
   \   0000000C   1000001A           BNE      ??ed_inp_ghook_0
    101            {    
    102              //hdr_pic=GetDynPicNum(VK_HEADER_ICON);
    103              //hdr.icon=&hdr_pic;
    104              
    105              void *hdr_pointer = GetHeaderPointer(data);
   \   00000010   AE0200EF           SWI      +686
   \   00000014   0040A0E1           MOV      R4,R0
    106              WSHDR *ws = AllocWS(32);
   \   00000018   2000A0E3           MOV      R0,#+32
   \   0000001C   250100EF           SWI      +293
    107              wsprintf(ws, percent_t, HEADER_TEXT);
   \   00000020   C8109FE5           LDR      R1,??ed_inp_ghook_1  ;; percent_t
   \   00000024   0050A0E1           MOV      R5,R0
   \   00000028   042081E2           ADD      R2,R1,#+4
   \   0000002C   240100EF           SWI      +292
    108              SetHeaderText(hdr_pointer, ws, malloc_adr(), mfree_adr());   
   \   00000030   158000EF           SWI      +32789
   \   00000034   0060A0E1           MOV      R6,R0
   \   00000038   148000EF           SWI      +32788
   \   0000003C   0630A0E1           MOV      R3,R6
   \   00000040   0020A0E1           MOV      R2,R0
   \   00000044   0510A0E1           MOV      R1,R5
   \   00000048   0400A0E1           MOV      R0,R4
   \   0000004C   AF0200EF           SWI      +687
   \   00000050   7080BDE8           POP      {R4-R6,PC}
    109            }
    110               
    111            if (cmd == TI_CMD_UNFOCUS)
   \                     ??ed_inp_ghook_0:
   \   00000054   090051E3           CMP      R1,#+9
   \   00000058   0300001A           BNE      ??ed_inp_ghook_2
    112            {
    113              AnimWidget_Close();
   \   0000005C   ........           _BLF     AnimWidget_Close,??AnimWidget_Close??rA
    114              
    115              DisableDynImages();  
   \   00000060   ........           _BLF     DisableDynImages,??DisableDynImages??rA
    116              DisableDynTheme();
   \   00000064   ........           _BLF     DisableDynTheme,??DisableDynTheme??rA
   \   00000068   7080BDE8           POP      {R4-R6,PC}
    117            }
    118            
    119            if (cmd == TI_CMD_FOCUS)
   \                     ??ed_inp_ghook_2:
   \   0000006C   0A0051E3           CMP      R1,#+10
   \   00000070   0800001A           BNE      ??ed_inp_ghook_3
    120            {
    121              EnableDynImages();
   \   00000074   ........           _BLF     EnableDynImages,??EnableDynImages??rA
    122              EnableDynTheme();
   \   00000078   ........           _BLF     EnableDynTheme,??EnableDynTheme??rA
    123              DisableIDLETMR();
   \   0000007C   7F0100EF           SWI      +383
    124              
    125              if (INET_PROCESS == AUTH_DIRECT)
   \   00000080   ........           LDR      R0,??DataTable1  ;; INET_PROCESS
   \   00000084   000090E5           LDR      R0,[R0, #+0]
   \   00000088   060050E3           CMP      R0,#+6
   \   0000008C   7080BD18           POPNE    {R4-R6,PC}
    126                AnimWidget_Wait_bottom();
   \   00000090   ........           _BLF     AnimWidget_Wait_bottom,??AnimWidget_Wait_bottom??rA
   \   00000094   7080BDE8           POP      {R4-R6,PC}
    127            }  
    128            
    129            if (cmd == TI_CMD_REDRAW)
   \                     ??ed_inp_ghook_3:
   \   00000098   ........           LDR      R5,??DataTable3  ;; gui_id
   \   0000009C   070051E3           CMP      R1,#+7
   \   000000A0   0B00001A           BNE      ??ed_inp_ghook_4
    130            {
    131              //EnableDynImages();    
    132              SetSoftKey(data, &ok, SET_SOFT_KEY_N);
   \   000000A4   0020A0E3           MOV      R2,#+0
   \   000000A8   181085E2           ADD      R1,R5,#+24
   \   000000AC   680100EF           SWI      +360
    133              int i = EDIT_GetCursorPos(data);
    134             
    135              if (i == 1)
   \   000000B0   0400A0E1           MOV      R0,R4
   \   000000B4   D30100EF           SWI      +467
   \   000000B8   010050E3           CMP      R0,#+1
   \   000000BC   7080BD18           POPNE    {R4-R6,PC}
    136                SetSoftKey(data, &close, !SET_SOFT_KEY_N);
   \   000000C0   0120A0E3           MOV      R2,#+1
   \   000000C4   201085E2           ADD      R1,R5,#+32
   \   000000C8   0400A0E1           MOV      R0,R4
   \   000000CC   680100EF           SWI      +360
   \   000000D0   7080BDE8           POP      {R4-R6,PC}
    137            }
    138            
    139            if (cmd == TI_CMD_DESTROY)
   \                     ??ed_inp_ghook_4:
   \   000000D4   030051E3           CMP      R1,#+3
   \   000000D8   7080BD18           POPNE    {R4-R6,PC}
    140            { 
    141              DisableDynTheme();
   \   000000DC   ........           _BLF     DisableDynTheme,??DisableDynTheme??rA
    142              DisableDynImages();
   \   000000E0   ........           _BLF     DisableDynImages,??DisableDynImages??rA
    143              gui_id = 0;
   \   000000E4   0000A0E3           MOV      R0,#+0
   \   000000E8   000085E5           STR      R0,[R5, #+0]
    144            }
    145          }
   \   000000EC   7080BDE8           POP      {R4-R6,PC}       ;; return
   \                     ??ed_inp_ghook_1:
   \   000000F0   ........           DC32     percent_t

   \                                 In segment DATA_I, align 4, align-sorted
   \                     gui_id:
   \   00000000                      DS8 4
   \   00000004                      REQUIRE `?<Initializer for gui_id>`
   \   00000004                      DS8 20
   \   00000018                      REQUIRE `?<Initializer for hdr>`
   \   00000018                      DS8 8
   \   00000020                      REQUIRE `?<Initializer for ok>`
   \   00000020                      DS8 8
   \   00000028                      REQUIRE `?<Initializer for close>`
   \   00000028                      DS8 56
   \   00000060                      REQUIRE `?<Initializer for ed_inp_desc>`

   \                                 In segment DATA_I, align 4, align-sorted
   \                     sk:
   \   00000000                      DS8 24
   \   00000018                      REQUIRE `?<Initializer for sk>`

   \                                 In segment DATA_I, align 4, align-sorted
   \                     skt:
   \   00000000                      DS8 8
   \   00000008                      REQUIRE `?<Initializer for skt>`
    146          
    147          static INPUTDIA_DESC ed_inp_desc=
    148          {
    149            1,
    150            ed_inp_onkey,
    151            ed_inp_ghook,
    152            (void *)ed_inp_locret,
    153            0,
    154            &skt,
    155          #ifdef ELKA  
    156            {1,56,238,287},
    157          #else
    158            {1,23,130,154},
    159          #endif
    160            FONT_SMALL,
    161            100,
    162            101,
    163            0,
    164          //  0x00000001 - Выровнять по правому краю
    165          //  0x00000002 - Выровнять по центру
    166          //  0x00000004 - Инверсия знакомест
    167          //  0x00000008 - UnderLine
    168          //  0x00000020 - Не переносить слова
    169          //  0x00000200 - bold
    170            0,
    171          //  0x00000002 - ReadOnly
    172          //  0x00000004 - Не двигается курсор
    173          //  0x40000000 - Поменять местами софт-кнопки
    174            0x40000000
    175          };
    176          

   \                                 In segment CODE, align 4, keep-with-next
    177          int CreateLoginDialog()
    178          {
   \                     CreateLoginDialog:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
    179            void *ma = malloc_adr();
    180            void *eq;
    181            EDITCONTROL ec;
    182          
    183            if (gui_id)//закрываем до этого созданный гуй
   \   00000004   ........           LDR      R4,??DataTable3  ;; gui_id
   \   00000008   90DF4DE2           SUB      SP,SP,#+576
   \   0000000C   148000EF           SWI      +32788
   \   00000010   0050A0E1           MOV      R5,R0
   \   00000014   000094E5           LDR      R0,[R4, #+0]
   \   00000018   000050E3           CMP      R0,#+0
   \   0000001C   0300000A           BEQ      ??CreateLoginDialog_0
    184            {
    185              GeneralFunc_flag1(gui_id, 1);
   \   00000020   0110A0E3           MOV      R1,#+1
   \   00000024   3D0100EF           SWI      +317
    186              gui_id = 0;
   \   00000028   0000A0E3           MOV      R0,#+0
   \   0000002C   000084E5           STR      R0,[R4, #+0]
    187            }
    188            
    189            WSHDR ws;
    190            unsigned short wsbody[256];
    191            
    192            CreateLocalWS(&ws, wsbody, 255);
    193            
    194            PrepareEditControl(&ec);
    195            eq = AllocEQueue(ma, mfree_adr());
    196          
    197            wsprintf(&ws, "\n%t", "Телефон или email:");
   \                     ??CreateLoginDialog_0:
   \   00000030   4C719FE5           LDR      R7,??CreateLoginDialog_1+0xC  ;; `?<Constant "\\322\\345\\353\\345\\364\\356\\355 \\350\\`
   \   00000034   FF20A0E3           MOV      R2,#+255
   \   00000038   40108DE2           ADD      R1,SP,#+64
   \   0000003C   0D00A0E1           MOV      R0,SP
   \   00000040   270100EF           SWI      +295
   \   00000044   14008DE2           ADD      R0,SP,#+20
   \   00000048   640100EF           SWI      +356
   \   0000004C   158000EF           SWI      +32789
   \   00000050   0010A0E1           MOV      R1,R0
   \   00000054   0500A0E1           MOV      R0,R5
   \   00000058   630100EF           SWI      +355
   \   0000005C   0060A0E1           MOV      R6,R0
   \   00000060   0720A0E1           MOV      R2,R7
   \   00000064   431F8FE2           ADR      R1,??CreateLoginDialog_1  ;; "\n%t"
   \   00000068   0D00A0E1           MOV      R0,SP
   \   0000006C   240100EF           SWI      +292
    198            ConstructEditControl(&ec, ECT_HEADER, ECF_APPEND_EOL, &ws, 32);
   \   00000070   2000A0E3           MOV      R0,#+32
   \   00000074   01002DE9           PUSH     {R0}
   \   00000078   04308DE2           ADD      R3,SP,#+4
   \   0000007C   4020A0E3           MOV      R2,#+64
   \   00000080   0110A0E3           MOV      R1,#+1
   \   00000084   18008DE2           ADD      R0,SP,#+24
   \   00000088   650100EF           SWI      +357
    199            AddEditControlToEditQend(eq, &ec, ma);
   \   0000008C   0520A0E1           MOV      R2,R5
   \   00000090   18108DE2           ADD      R1,SP,#+24
   \   00000094   0600A0E1           MOV      R0,R6
   \   00000098   660100EF           SWI      +358
    200            
    201            wsprintf(&ws, "%s", "alfinant@gmail.com");
   \   0000009C   142087E2           ADD      R2,R7,#+20
   \   000000A0   351F8FE2           ADR      R1,??CreateLoginDialog_1+0x4  ;; "%s"
   \   000000A4   04008DE2           ADD      R0,SP,#+4
   \   000000A8   240100EF           SWI      +292
    202            ConstructEditControl(&ec, ECT_NORMAL_TEXT, ECF_NORMAL_STR | ECF_APPEND_EOL, &ws, 32);
   \   000000AC   2000A0E3           MOV      R0,#+32
   \   000000B0   01002DE9           PUSH     {R0}
   \   000000B4   08308DE2           ADD      R3,SP,#+8
   \   000000B8   4020A0E3           MOV      R2,#+64
   \   000000BC   0310A0E3           MOV      R1,#+3
   \   000000C0   1C008DE2           ADD      R0,SP,#+28
   \   000000C4   650100EF           SWI      +357
    203            AddEditControlToEditQend(eq, &ec, ma);
   \   000000C8   0520A0E1           MOV      R2,R5
   \   000000CC   1C108DE2           ADD      R1,SP,#+28
   \   000000D0   0600A0E1           MOV      R0,R6
   \   000000D4   660100EF           SWI      +358
    204            
    205            wsprintf(&ws, "%t", "Пароль:");
   \   000000D8   282087E2           ADD      R2,R7,#+40
   \   000000DC   271F8FE2           ADR      R1,??CreateLoginDialog_1+0x8  ;; "%t"
   \   000000E0   08008DE2           ADD      R0,SP,#+8
   \   000000E4   240100EF           SWI      +292
    206            ConstructEditControl(&ec, ECT_HEADER, ECF_APPEND_EOL, &ws, 32);
   \   000000E8   2000A0E3           MOV      R0,#+32
   \   000000EC   01002DE9           PUSH     {R0}
   \   000000F0   0C308DE2           ADD      R3,SP,#+12
   \   000000F4   4020A0E3           MOV      R2,#+64
   \   000000F8   0110A0E3           MOV      R1,#+1
   \   000000FC   20008DE2           ADD      R0,SP,#+32
   \   00000100   650100EF           SWI      +357
    207            AddEditControlToEditQend(eq, &ec, ma);
   \   00000104   0520A0E1           MOV      R2,R5
   \   00000108   20108DE2           ADD      R1,SP,#+32
   \   0000010C   0600A0E1           MOV      R0,R6
   \   00000110   660100EF           SWI      +358
    208            
    209            ConstructEditControl(&ec, ECT_NORMAL_TEXT, ECF_PASSW | ECF_APPEND_EOL , NULL, 32);
   \   00000114   2000A0E3           MOV      R0,#+32
   \   00000118   01002DE9           PUSH     {R0}
   \   0000011C   0030A0E3           MOV      R3,#+0
   \   00000120   5020A0E3           MOV      R2,#+80
   \   00000124   0310A0E3           MOV      R1,#+3
   \   00000128   24008DE2           ADD      R0,SP,#+36
   \   0000012C   650100EF           SWI      +357
    210            AddEditControlToEditQend(eq, &ec, ma); 
   \   00000130   0520A0E1           MOV      R2,R5
   \   00000134   24108DE2           ADD      R1,SP,#+36
   \   00000138   0600A0E1           MOV      R0,R6
   \   0000013C   660100EF           SWI      +358
    211            
    212            patch_header(&hdr);
   \   00000140   040084E2           ADD      R0,R4,#+4
   \   00000144   ........           _BLF     patch_header,??patch_header??rA
    213            patch_input(&ed_inp_desc);
   \   00000148   280084E2           ADD      R0,R4,#+40
   \   0000014C   ........           _BLF     patch_input,??patch_input??rA
    214            
    215            return (gui_id = CreateInputTextDialog(&ed_inp_desc, &hdr, eq, 1, 0));
   \   00000150   0000A0E3           MOV      R0,#+0
   \   00000154   01002DE9           PUSH     {R0}
   \   00000158   0130A0E3           MOV      R3,#+1
   \   0000015C   0620A0E1           MOV      R2,R6
   \   00000160   041084E2           ADD      R1,R4,#+4
   \   00000164   280084E2           ADD      R0,R4,#+40
   \   00000168   670100EF           SWI      +359
   \   0000016C   000084E5           STR      R0,[R4, #+0]
   \   00000170   95DF8DE2           ADD      SP,SP,#+596
   \   00000174   F080BDE8           POP      {R4-R7,PC}       ;; return
   \                     ??CreateLoginDialog_1:
   \   00000178   0A257400           DC8      "\n%t"
   \   0000017C   25730000           DC8      "%s",+0
   \   00000180   25740000           DC8      "%t",+0
   \   00000184   ........           DC32     `?<Constant "\\322\\345\\353\\345\\364\\356\\355 \\350\\`
    216          }

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   ........           DC32     INET_PROCESS

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   ........           DC32     gui_id

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for gui_id>`:
   \   00000000   00000000           DC32 0
   \                     `?<Initializer for hdr>`:
   \   00000004   000000000000       DC16 0, 0, 0, 0
   \              0000        
   \   0000000C   000000000000       DC32 0H, 0, 2147483647
   \              0000FFFFFF7F
   \                     `?<Initializer for ok>`:
   \   00000018   FF0F0000           DC16 4095, 0
   \   0000001C   ........           DC32 `?<Constant "OK">`
   \                     `?<Initializer for close>`:
   \   00000020   FE0F0000           DC16 4094, 0
   \   00000024   ........           DC32 `?<Constant "\\316\\362\\354\\345\\355\\340">`
   \                     `?<Initializer for ed_inp_desc>`:
   \   00000028   01000000....       DC32 1, ed_inp_onkey, ed_inp_ghook, ed_inp_locret, 0, skt
   \              ............
   \              ........0000
   \              0000........
   \   00000040   01003800EE00       DC16 1, 56, 238, 287
   \              1F01        
   \   00000048   080000006400       DC32 8, 100, 101, 0, 0, 1073741824
   \              000065000000
   \              000000000000
   \              000000000040

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for sk>`:
   \   00000000   18000000           DC16 24, 0
   \   00000004   ........           DC32 `?<Constant "\\316\\352 ">`
   \   00000008   01000000           DC16 1, 0
   \   0000000C   ........           DC32 `?<Constant "\\302\\373\\365\\356\\344">`
   \   00000010   3D000000           DC16 61, 0
   \   00000014   FBC0FF7F           DC32 2147467515

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for skt>`:
   \   00000000   ........0000       DC32 sk, 0
   \              0000        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\316\\352 ">`:
   \   00000000   CEEA2000           DC8 "\316\352 "

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\302\\373\\365\\356\\344">`:
   \   00000000   C2FBF5EEE400       DC8 "\302\373\365\356\344"
   \   00000006   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\307\\340\\357\\356\\353\\355\\350\\362\\3`:
   \   00000000   C7E0EFEEEBED       DC8 "\307\340\357\356\353\355\350\362\345 \342\361\345 \357\356\353\377"
   \              E8F2E520E2F1
   \              E520EFEEEBFF
   \              00          
   \   00000013   00                 DC8 0

   \                                 In segment DATA_C, align 1, align-sorted
   \                     `?<Constant "OK">`:
   \   00000000   4F4B00             DC8 "OK"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\316\\362\\354\\345\\355\\340">`:
   \   00000000   CEF2ECE5EDE0       DC8 "\316\362\354\345\355\340"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \   00000000   0A257400           DC8 "\012%t"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\322\\345\\353\\345\\364\\356\\355 \\350\\`:
   \   00000000   D2E5EBE5F4EE       DC8 "\322\345\353\345\364\356\355 \350\353\350 email:"
   \              ED20E8EBE820
   \              656D61696C3A
   \              00          
   \   00000013   00                 DC8 0
   \   00000014   616C66696E61       DC8 "alfinant@gmail.com"
   \              6E7440676D61
   \              696C2E636F6D
   \              00          
   \   00000027   00                 DC8 0
   \   00000028   CFE0F0EEEBFC       DC8 "\317\340\360\356\353\374:"
   \              3A00        

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   257300             DC8 "%s"

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   257400             DC8 "%t"

   Maximum stack usage in bytes:

     Function          CSTACK
     --------          ------
     CreateLoginDialog   616
     ed_inp_ghook         16
     ed_inp_locret         0
     ed_inp_onkey        148
     patch_header          8
     patch_input          12


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     patch_header                     52
     patch_input                      68
     percent_t                        16
     vk_com_parsed                     4
     action_url                      256
     captcha_key                      96
     captcha_sid                      32
     ed_inp_locret                     4
     ed_inp_onkey                    344
     ed_inp_ghook                    244
     gui_id                           96
     sk                               24
     skt                               8
     CreateLoginDialog               392
     ??DataTable1                      4
     ??DataTable3                      4
     ?<Initializer for gui_id>        96
     ?<Initializer for sk>            24
     ?<Initializer for skt>            8
     ?<Constant "\316\352 ">           4
     ?<Constant "\302\373\365\356\344">
                                       8
     ?<Constant "\307\340\357\356\353\355\350\362\3
                                      20
     ?<Constant "OK">                  3
     ?<Constant "\316\362\354\345\355\340">
                                       8
     ?<Constant "\n%t">                4
     ?<Constant "\322\345\353\345\364\356\355 \350\
                                      48
     ?<Constant "%s">                  3
     ?<Constant "%t">                  3
      Others                         160

 
 1 248 bytes in segment CODE
   117 bytes in segment DATA_C
   128 bytes in segment DATA_I
   128 bytes in segment DATA_ID
   388 bytes in segment DATA_Z
    24 bytes in segment INITTAB
 
 992 bytes of CODE  memory (+ 280 bytes shared)
 245 bytes of CONST memory
 516 bytes of DATA  memory

Errors: none
Warnings: none
