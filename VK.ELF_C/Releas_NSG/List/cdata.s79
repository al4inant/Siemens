//////////////////////////////////////////////////////////////////////////////
//                                                                           /
// IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION   15/Dec/2019  12:18:37 /
// Copyright 1999-2005 IAR Systems. All rights reserved.                     /
//                                                                           /
//    Cpu mode        =  interwork                                           /
//    Endian          =  little                                              /
//    Stack alignment =  4                                                   /
//    Source file     =  D:\alfinant\Documents\Siemens\alfinant\VK.ELF_C\cda /
//                       ta.c                                                /
//    Command line    =  D:\alfinant\Documents\Siemens\alfinant\VK.ELF_C\cda /
//                       ta.c -D NEWSGOLD -D DEBUG -lCN                      /
//                       D:\alfinant\Documents\Siemens\alfinant\VK.ELF_C\Rel /
//                       eas_NSG\List\ -la D:\alfinant\Documents\Siemens\alf /
//                       inant\VK.ELF_C\Releas_NSG\List\ -o                  /
//                       D:\alfinant\Documents\Siemens\alfinant\VK.ELF_C\Rel /
//                       eas_NSG\Obj\ -z9 --cpu_mode arm --endian little     /
//                       --cpu ARM926EJ-S --stack_align 4 --interwork        /
//                       --diag_suppress Pe301 -e --fpu None --dlib_config   /
//                       D:\alfinant\Documents\Siemens\IAR\ARM\LIB\dl5tpainl /
//                       8n.h -I D:\alfinant\Documents\Siemens\IAR\ARM\INC\  /
//                       --inline_threshold=2                                /
//    List file       =  D:\alfinant\Documents\Siemens\alfinant\VK.ELF_C\Rel /
//                       eas_NSG\List\cdata.s79                              /
//                                                                           /
//                                                                           /
//////////////////////////////////////////////////////////////////////////////

        NAME cdata

        RTMODEL "StackAlign4", "USED"
        RTMODEL "__cpu_mode", "__pcs__interwork"
        RTMODEL "__data_model", "absolute"
        RTMODEL "__dlib_file_descriptor", "0"
        RTMODEL "__endian", "little"
        RTMODEL "__rt_version", "6"

        RSEG CSTACK:DATA:NOROOT(2)

        PUBWEAK `?*?DATA_ID`
        MULTWEAK ??CONNECTION_findByHostname??rT
        MULTWEAK ??CONNECTION_findBySSL??rT
        MULTWEAK ??CONNECTION_findBySock??rT
        MULTWEAK ??CONNECTION_getTop??rT
        MULTWEAK ??CONNECTION_new??rT
        MULTWEAK ??CONNECTION_set2Top??rT
??DataTable0 EQU 0
??DataTable1 EQU 0
??DataTable2 EQU 0
??DataTable3 EQU 0
??DataTable4 EQU 0
        MULTWEAK ??get_host_from_url??rA
        PUBWEAK ?init?tab?DATA_I
        PUBLIC CONNECTION_findByHostname
        FUNCTION CONNECTION_findByHostname,0203H
        LOCFRAME CSTACK, 16, STACK
        PUBLIC CONNECTION_findBySSL
        FUNCTION CONNECTION_findBySSL,0203H
        PUBLIC CONNECTION_findBySock
        FUNCTION CONNECTION_findBySock,0203H
        PUBLIC CONNECTION_getTop
        FUNCTION CONNECTION_getTop,0201H
        PUBLIC CONNECTION_new
        FUNCTION CONNECTION_new,0203H
        LOCFRAME CSTACK, 20, STACK
        PUBLIC CONNECTION_set2Top
        FUNCTION CONNECTION_set2Top,0203H
        
        CFI Names cfiNames0
        CFI StackFrame CFA R13 HUGEDATA
        CFI Resource R0:32, R1:32, R2:32, R3:32, R4:32, R5:32, R6:32, R7:32
        CFI Resource R8:32, R9:32, R10:32, R11:32, R12:32, CPSR:32, R13:32
        CFI Resource R14:32, SPSR:32
        CFI VirtualResource ?RET:32
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 2
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon0
        
        
        CFI Common cfiCommon1 Using cfiNames0
        CFI CodeAlign 4
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon1
        
get_host_from_url   SYMBOL "get_host_from_url"
CONNECTION_findByHostname SYMBOL "CONNECTION_findByHostname"
??CONNECTION_findByHostname??rT SYMBOL "??rT", CONNECTION_findByHostname
CONNECTION_findBySSL SYMBOL "CONNECTION_findBySSL"
??CONNECTION_findBySSL??rT SYMBOL "??rT", CONNECTION_findBySSL
CONNECTION_findBySock SYMBOL "CONNECTION_findBySock"
??CONNECTION_findBySock??rT SYMBOL "??rT", CONNECTION_findBySock
CONNECTION_getTop   SYMBOL "CONNECTION_getTop"
??CONNECTION_getTop??rT SYMBOL "??rT", CONNECTION_getTop
CONNECTION_new      SYMBOL "CONNECTION_new"
??CONNECTION_new??rT SYMBOL "??rT", CONNECTION_new
CONNECTION_set2Top  SYMBOL "CONNECTION_set2Top"
??CONNECTION_set2Top??rT SYMBOL "??rT", CONNECTION_set2Top
??get_host_from_url??rA SYMBOL "??rA", get_host_from_url

        EXTERN get_host_from_url
        FUNCTION get_host_from_url,0202H


        RSEG DATA_I:DATA:SORT:NOROOT(2)
connection_list:
        DS8 8
        REQUIRE `?<Initializer for connection_list>`

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock0 Using cfiCommon0
        CFI NoFunction
        THUMB
??CONNECTION_new??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock0
        REQUIRE CONNECTION_new

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock1 Using cfiCommon1
        CFI Function CONNECTION_new
        ARM
CONNECTION_new:
        PUSH     {R4-R7,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R7 Frame(CFA, -8)
        CFI R6 Frame(CFA, -12)
        CFI R5 Frame(CFA, -16)
        CFI R4 Frame(CFA, -20)
        CFI CFA R13+20
        MOV      R5,R0
        MOV      R6,R1
        MOV      R0,#+108
        SWI      +20
        MOV      R4,R0
        LDR      R0,??DataTable5  ;; connection_list
        STR      R4,[R4, #+0]
        STR      R4,[R4, #+4]
        LDR      R1,[R0, #+0]
        MOV      R7,#+0
        STR      R4,[R1, #+4]
        STR      R1,[R4, #+0]
        STR      R0,[R4, #+4]
        STR      R4,[R0, #+0]
        MOV      R1,R5
        ADD      R0,R4,#+28
        _BLF     get_host_from_url,??get_host_from_url??rA
        MOV      R0,R5
        SWI      +27
        ADD      R0,R0,#+1
        SWI      +20
        STR      R0,[R4, #+92]
        MOV      R1,R5
        SWI      +26
        MVN      R0,#+0
        STR      R0,[R4, #+16]
        STR      R7,[R4, #+8]
        MOV      R1,#+3
        STR      R1,[R4, #+12]
        LDR      R1,??CONNECTION_new_0  ;; `?<Constant "https://">`
        STR      R0,[R4, #+20]
        STR      R6,[R4, #+96]
        MOV      R2,#+8
        MOV      R0,R5
        SWI      +277
        CMP      R0,#+0
        MOVEQ    R0,#+187
        ORREQ    R0,R0,#0x100
        MOVNE    R0,#+80
        STR      R0,[R4, #+24]
        STR      R7,[R4, #+100]
        STR      R7,[R4, #+104]
        MOV      R0,R4
        POP      {R4-R7,PC}       ;; return
        DATA
??CONNECTION_new_0:
        DC32     `?<Constant "https://">`
        CFI EndBlock cfiBlock1

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock2 Using cfiCommon0
        CFI NoFunction
        THUMB
??CONNECTION_getTop??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock2
        REQUIRE CONNECTION_getTop

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock3 Using cfiCommon1
        CFI Function CONNECTION_getTop
        ARM
CONNECTION_getTop:
        LDR      R1,??DataTable5  ;; connection_list
        LDR      R0,[R1, #+0]
        CMP      R0,R1
        MOVEQ    R0,#+0
        BX       LR               ;; return
        CFI EndBlock cfiBlock3

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock4 Using cfiCommon0
        CFI NoFunction
        THUMB
??CONNECTION_set2Top??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock4
        REQUIRE CONNECTION_set2Top

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock5 Using cfiCommon1
        CFI Function CONNECTION_set2Top
        ARM
CONNECTION_set2Top:
        LDR      R1,??DataTable5  ;; connection_list
        LDR      R2,[R1, #+0]
        LDR      R3,[R1, #+4]
        STR      R3,[R2, #+4]
        STR      R2,[R3, #+0]
        LDR      R2,[R0, #+0]
        STR      R1,[R2, #+4]
        STR      R2,[R1, #+0]
        STR      R0,[R1, #+4]
        STR      R1,[R0, #+0]
        BX       LR               ;; return
        CFI EndBlock cfiBlock5

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock6 Using cfiCommon0
        CFI NoFunction
        THUMB
??CONNECTION_findBySSL??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock6
        REQUIRE CONNECTION_findBySSL

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock7 Using cfiCommon1
        CFI Function CONNECTION_findBySSL
        ARM
CONNECTION_findBySSL:
        LDR      R2,??DataTable5  ;; connection_list
        LDR      R1,[R2, #+0]
        B        ??CONNECTION_findBySSL_0
??CONNECTION_findBySSL_1:
        LDR      R1,[R1, #+0]
??CONNECTION_findBySSL_0:
        CMP      R1,R2
        BEQ      ??CONNECTION_findBySSL_2
        LDR      R3,[R1, #+100]
        CMP      R3,R0
        BNE      ??CONNECTION_findBySSL_1
        B        ?Subroutine7
??CONNECTION_findBySSL_2:
        B        ?Subroutine6
        CFI EndBlock cfiBlock7

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock8 Using cfiCommon0
        CFI NoFunction
        THUMB
??CONNECTION_findBySock??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock8
        REQUIRE CONNECTION_findBySock

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock9 Using cfiCommon1
        CFI Function CONNECTION_findBySock
        ARM
CONNECTION_findBySock:
        LDR      R2,??DataTable5  ;; connection_list
        LDR      R1,[R2, #+0]
        B        ??CONNECTION_findBySock_0
??CONNECTION_findBySock_1:
        LDR      R1,[R1, #+0]
??CONNECTION_findBySock_0:
        CMP      R1,R2
        BEQ      ??CONNECTION_findBySock_2
        LDR      R3,[R1, #+20]
        CMP      R3,R0
        BNE      ??CONNECTION_findBySock_1
        LDR      R3,[R1, #+100]
        CMP      R3,#+0
        BEQ      ??CONNECTION_findBySock_1
        B        ?Subroutine7
??CONNECTION_findBySock_2:
        B        ?Subroutine6
        CFI EndBlock cfiBlock9

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock10 Using cfiCommon1
        CFI NoFunction
        ARM
?Subroutine7:
        MOV      R0,R1
        BX       LR
        CFI EndBlock cfiBlock10

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock11 Using cfiCommon1
        CFI NoFunction
        ARM
?Subroutine6:
        MOV      R0,#+0
        BX       LR               ;; return
        CFI EndBlock cfiBlock11

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock12 Using cfiCommon0
        CFI NoFunction
        THUMB
??CONNECTION_findByHostname??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock12
        REQUIRE CONNECTION_findByHostname

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock13 Using cfiCommon1
        CFI Function CONNECTION_findByHostname
        ARM
CONNECTION_findByHostname:
        PUSH     {R4-R6,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R6 Frame(CFA, -8)
        CFI R5 Frame(CFA, -12)
        CFI R4 Frame(CFA, -16)
        CFI CFA R13+16
        LDR      R5,??DataTable5  ;; connection_list
        MOV      R4,R0
        LDR      R6,[R5, #+0]
        B        ??CONNECTION_findByHostname_0
??CONNECTION_findByHostname_1:
        LDR      R6,[R6, #+0]
??CONNECTION_findByHostname_0:
        CMP      R6,R5
        BEQ      ??CONNECTION_findByHostname_2
        MOV      R1,R4
        ADD      R0,R6,#+28
        SWI      +25
        CMP      R0,#+0
        BNE      ??CONNECTION_findByHostname_1
        MOV      R0,R6
        POP      {R4-R6,PC}
??CONNECTION_findByHostname_2:
        MOV      R0,#+0
        POP      {R4-R6,PC}       ;; return
        CFI EndBlock cfiBlock13

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable5:
        DC32     connection_list

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock14 Using cfiCommon1
        CFI NoFunction
        ARM
??get_host_from_url??rA:
        LDR      R12,??Subroutine8_0  ;; get_host_from_url
        BX       R12
        DATA
??Subroutine8_0:
        DC32     get_host_from_url
        CFI EndBlock cfiBlock14

        RSEG DATA_ID:CONST:SORT:NOROOT(2)
`?<Initializer for connection_list>`:
        DATA
        DC32 connection_list, connection_list

        RSEG DATA_ID:CONST:SORT:NOROOT(2)
`?*?DATA_ID`:

        RSEG INITTAB:CODE:ROOT(2)
        DATA
?init?tab?DATA_I:
        DCD      sfe(DATA_I) - sfb(DATA_I), sfb(DATA_I), sfb(DATA_ID)

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant "https://">`:
        DATA
        DC8 "https://"
        DC8 0, 0, 0

        END
// 
// 472 bytes in segment CODE
//  12 bytes in segment DATA_C
//   8 bytes in segment DATA_I
//   8 bytes in segment DATA_ID
//  12 bytes in segment INITTAB
// 
// 436 bytes of CODE  memory (+ 48 bytes shared)
//  20 bytes of CONST memory
//   8 bytes of DATA  memory
//
//Errors: none
//Warnings: none
