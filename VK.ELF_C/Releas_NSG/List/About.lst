##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION    14/Dec/2018  23:20:53 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  E:\Users\alfinant\Documents\Siemens\alfinant\src_iar #
#                       \VK.ELF_C\About.c                                    #
#    Command line    =  E:\Users\alfinant\Documents\Siemens\alfinant\src_iar #
#                       \VK.ELF_C\About.c -D NEWSGOLD -D DEVELOP -lCN        #
#                       E:\Users\alfinant\Documents\Siemens\alfinant\src_iar #
#                       \VK.ELF_C\Releas_NSG\List\ -la                       #
#                       E:\Users\alfinant\Documents\Siemens\alfinant\src_iar #
#                       \VK.ELF_C\Releas_NSG\List\ -o                        #
#                       E:\Users\alfinant\Documents\Siemens\alfinant\src_iar #
#                       \VK.ELF_C\Releas_NSG\Obj\ -z9 --cpu_mode arm         #
#                       --endian little --cpu ARM926EJ-S --stack_align 4     #
#                       --interwork --diag_suppress Pe301 -e --fpu None      #
#                       --dlib_config E:\Users\alfinant\Documents\Siemens\IA #
#                       R\ARM\LIB\dl5tpainl8n.h -I                           #
#                       E:\Users\alfinant\Documents\Siemens\IAR\ARM\INC\     #
#                       --inline_threshold=2                                 #
#    List file       =  E:\Users\alfinant\Documents\Siemens\alfinant\src_iar #
#                       \VK.ELF_C\Releas_NSG\List\About.lst                  #
#    Object file     =  E:\Users\alfinant\Documents\Siemens\alfinant\src_iar #
#                       \VK.ELF_C\Releas_NSG\Obj\About.r79                   #
#                                                                            #
#                                                                            #
##############################################################################

E:\Users\alfinant\Documents\Siemens\alfinant\src_iar\VK.ELF_C\About.c
      1          #include <siemens\swilib.h>
      2          #include "rect_patcher.h"

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void patch_header(HEADER_DESC const *)
   \                     patch_header:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0000A0E3           MOV      R0,#+0
   \   0000000C   B000C4E1           STRH     R0,[R4, #+0]
   \   00000010   B200C4E1           STRH     R0,[R4, #+2]
   \   00000014   888100EF           SWI      +33160
   \   00000018   010040E2           SUB      R0,R0,#+1
   \   0000001C   B400C4E1           STRH     R0,[R4, #+4]
   \   00000020   8A8100EF           SWI      +33162
   \   00000024   010040E2           SUB      R0,R0,#+1
   \   00000028   B600C4E1           STRH     R0,[R4, #+6]
   \   0000002C   1080BDE8           POP      {R4,PC}          ;; return
      3          #include "dyn_images.h"
      4          #include "dyn_theme.h"
      5          #include "anim_widget.h"
      6          
      7          extern const char DIR[];
      8          

   \                                 In segment DATA_C, align 4, align-sorted
      9          static const char percent_t[]="%t";
   \                     percent_t:
   \   00000000   257400             DC8 "%t"
   \   00000003   00                 DC8 0
   \   00000004   CEE120FDEBFC       DC8 "\316\341 \375\353\374\364\345"
   \              F4E500      
   \   0000000D   000000             DC8 0, 0, 0
     10          static const char HEADER_TEXT[]="Об эльфе";
     11          static int header_icon=0x4E74;
     12          
     13          static IMGHDR* img_logo=NULL;
     14          static IMGHDR* img_icon=NULL;
     15          
     16          static HEADER_DESC hdr={0,0,0,0,NULL,NULL,LGP_NULL};
     17          

   \                                 In segment DATA_C, align 4, align-sorted
     18          static const int mmenusoftkeys[]={0,1,2};
   \                     mmenusoftkeys:
   \   00000000   000000000100       DC32 0, 1, 2
   \              000002000000
     19          
     20          static SOFTKEY_DESC sk[]=
     21          {
     22            {0x0018,0x0000,(int)""},
     23            {0x0001,0x0000, (int)"Назад"},
     24            {0x0000,0x0000,0xFFFFFFFF},
     25          };
     26          
     27          static SOFTKEYSTAB skt=
     28          {
     29            sk,0
     30          };
     31          
     32          

   \                                 In segment CODE, align 4, keep-with-next
     33          static void proc3(){}
   \                     proc3:
   \   00000000   1EFF2FE1           BX       LR               ;; return
     34          

   \                                 In segment CODE, align 4, keep-with-next
     35          static int onKey(void* gui, GUI_MSG *msg)
     36          {
     37            if (msg->keys==1)//закрытие
   \                     onKey:
   \   00000000   F200D1E1           LDRSH    R0,[R1, #+2]
   \   00000004   010050E3           CMP      R0,#+1
   \   00000008   0100001A           BNE      ??onKey_0
     38            {
     39              //
     40              return (0);
   \                     ??onKey_1:
   \   0000000C   0000A0E3           MOV      R0,#+0
   \   00000010   1EFF2FE1           BX       LR
     41            }
     42            
     43            if ((msg->gbsmsg->msg==KEY_DOWN)||(msg->gbsmsg->msg==LONG_PRESS))
   \                     ??onKey_0:
   \   00000014   040091E5           LDR      R0,[R1, #+4]
   \   00000018   9320A0E3           MOV      R2,#+147
   \   0000001C   041090E5           LDR      R1,[R0, #+4]
   \   00000020   402F82E3           ORR      R2,R2,#0x100
   \   00000024   020051E1           CMP      R1,R2
   \   00000028   02208212           ADDNE    R2,R2,#+2
   \   0000002C   02005111           CMPNE    R1,R2
     44            { 
     45              switch(msg->gbsmsg->submess)
   \   00000030   08009005           LDREQ    R0,[R0, #+8]
   \   00000034   04005003           CMPEQ    R0,#+4
   \   00000038   F3FFFF1A           BNE      ??onKey_1
     46              {
     47              case LEFT_SOFT:
     48                break;
     49                
     50              case RIGHT_SOFT:
     51                return(1);
   \   0000003C   0100A0E3           MOV      R0,#+1
   \   00000040   1EFF2FE1           BX       LR               ;; return
     52              }
     53            }
     54            return(0);
     55          }
     56          

   \                                 In segment CODE, align 4, keep-with-next
     57          static void gHook(void* data, int cmd)
     58          {
   \                     gHook:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
     59            //static int hdr_pic;
     60            
     61            if (cmd==TI_CMD_CREATE)
   \   00000008   D0509FE5           LDR      R5,??gHook_0     ;; tv_desc
   \   0000000C   020051E3           CMP      R1,#+2
   \   00000010   1600001A           BNE      ??gHook_1
     62            {
     63              LoadDynTheme();
   \   00000014   ........           _BLF     LoadDynTheme,??LoadDynTheme??rA
     64              if (img_icon)
   \   00000018   4C0095E5           LDR      R0,[R5, #+76]
   \   0000001C   000050E3           CMP      R0,#+0
     65                hdr.icon=&header_icon;
   \   00000020   B4008512           ADDNE    R0,R5,#+180
   \   00000024   3C008515           STRNE    R0,[R5, #+60]
     66              void* hdr_pointer=GetHeaderPointer(data);
   \   00000028   0400A0E1           MOV      R0,R4
   \   0000002C   AE0200EF           SWI      +686
   \   00000030   0040A0E1           MOV      R4,R0
     67              WSHDR* ws=AllocWS(32);
   \   00000034   2000A0E3           MOV      R0,#+32
   \   00000038   250100EF           SWI      +293
     68              wsprintf(ws, percent_t, HEADER_TEXT);
   \   0000003C   A0109FE5           LDR      R1,??gHook_0+0x4  ;; percent_t
   \   00000040   0050A0E1           MOV      R5,R0
   \   00000044   042081E2           ADD      R2,R1,#+4
   \   00000048   240100EF           SWI      +292
     69              SetHeaderText(hdr_pointer, ws, malloc_adr(), mfree_adr());
   \   0000004C   158000EF           SWI      +32789
   \   00000050   0060A0E1           MOV      R6,R0
   \   00000054   148000EF           SWI      +32788
   \   00000058   0630A0E1           MOV      R3,R6
   \   0000005C   0020A0E1           MOV      R2,R0
   \   00000060   0510A0E1           MOV      R1,R5
   \   00000064   0400A0E1           MOV      R0,R4
   \   00000068   AF0200EF           SWI      +687
   \   0000006C   7080BDE8           POP      {R4-R6,PC}
     70            }
     71            
     72            if (cmd==TI_CMD_UNFOCUS)
   \                     ??gHook_1:
   \   00000070   090051E3           CMP      R1,#+9
   \   00000074   1700000A           BEQ      ??gHook_2
     73            {
     74              DisableDynTheme();
     75            }
     76            
     77            if (cmd==TI_CMD_FOCUS)
   \                     ??gHook_3:
   \   00000078   0A0051E3           CMP      R1,#+10
   \   0000007C   0200001A           BNE      ??gHook_4
     78            {
     79              EnableDynTheme();  
   \   00000080   ........           _BLF     EnableDynTheme,??EnableDynTheme??rA
     80              DisableIDLETMR();
   \   00000084   7F0100EF           SWI      +383
   \   00000088   7080BDE8           POP      {R4-R6,PC}
     81            }
     82            
     83            if (cmd==TI_CMD_DESTROY)
   \                     ??gHook_4:
   \   0000008C   030051E3           CMP      R1,#+3
   \   00000090   7080BD18           POPNE    {R4-R6,PC}
     84            {
     85              if (img_logo)
   \   00000094   480095E5           LDR      R0,[R5, #+72]
   \   00000098   0040A0E3           MOV      R4,#+0
   \   0000009C   000050E3           CMP      R0,#+0
   \   000000A0   0400000A           BEQ      ??gHook_5
     86              {
     87                mfree(img_logo->bitmap);
   \   000000A4   040090E5           LDR      R0,[R0, #+4]
   \   000000A8   150000EF           SWI      +21
     88                mfree(img_logo);
   \   000000AC   480095E5           LDR      R0,[R5, #+72]
   \   000000B0   150000EF           SWI      +21
     89                img_logo=NULL;
   \   000000B4   484085E5           STR      R4,[R5, #+72]
     90              }
     91              
     92              if (img_icon)
   \                     ??gHook_5:
   \   000000B8   4C0095E5           LDR      R0,[R5, #+76]
   \   000000BC   000050E3           CMP      R0,#+0
   \   000000C0   0400000A           BEQ      ??gHook_2
     93              {
     94                mfree(img_icon->bitmap);
   \   000000C4   040090E5           LDR      R0,[R0, #+4]
   \   000000C8   150000EF           SWI      +21
     95                mfree(img_icon);
   \   000000CC   4C0095E5           LDR      R0,[R5, #+76]
   \   000000D0   150000EF           SWI      +21
     96                img_icon=NULL;      
   \   000000D4   4C4085E5           STR      R4,[R5, #+76]
     97              }
     98              DisableDynTheme();
   \                     ??gHook_2:
   \   000000D8   ........           _BLF     DisableDynTheme,??DisableDynTheme??rA
     99            }
    100            
    101          }
   \   000000DC   7080BDE8           POP      {R4-R6,PC}       ;; return
   \                     ??gHook_0:
   \   000000E0   ........           DC32     tv_desc
   \   000000E4   ........           DC32     percent_t

   \                                 In segment DATA_I, align 4, align-sorted
    102          
    103          static TVIEW_DESC tv_desc=
   \                     tv_desc:
   \   00000000                      DS8 52
   \   00000034                      REQUIRE `?<Initializer for tv_desc>`
   \   00000034                      DS8 20
   \   00000048                      REQUIRE `?<Initializer for hdr>`
   \   00000048                      DS8 4
   \   0000004C                      REQUIRE `?<Initializer for img_logo>`
   \   0000004C                      DS8 4
   \   00000050                      REQUIRE `?<Initializer for img_icon>`
   \   00000050                      DS8 4
   \   00000054                      REQUIRE `?<Initializer for OnRedraw>`
   \   00000054                      DS8 96
   \   000000B4                      REQUIRE `?<Initializer for gui_methods_copy>`
   \   000000B4                      DS8 4
   \   000000B8                      REQUIRE `?<Initializer for header_icon>`

   \                                 In segment DATA_I, align 4, align-sorted
   \                     sk:
   \   00000000                      DS8 24
   \   00000018                      REQUIRE `?<Initializer for sk>`

   \                                 In segment DATA_I, align 4, align-sorted
   \                     skt:
   \   00000000                      DS8 8
   \   00000008                      REQUIRE `?<Initializer for skt>`
    104          {
    105            8,
    106            onKey,
    107            gHook,
    108            proc3,
    109            mmenusoftkeys,
    110            &skt,
    111          #ifdef ELKA  
    112            {4,56,239,287},
    113          #else
    114            {0,26,131,153},
    115          #endif
    116            8,//font
    117            0x64,
    118            0x65,
    119            0,
    120            2 //выравнивание по центру
    121          };
    122          
    123          static void (*OnRedraw)(void*);
    124          static void* gui_methods_copy[24];
    125          

   \                                 In segment CODE, align 4, keep-with-next
    126          static void MyOnRedraw(void *data)
    127          {
   \                     MyOnRedraw:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
    128            OnRedraw(data);
   \   00000004   ........           LDR      R4,??DataTable1  ;; tv_desc
   \   00000008   501094E5           LDR      R1,[R4, #+80]
   \   0000000C   31FF2FE1           BLX      R1
    129            
    130            if (img_logo)
   \   00000010   480094E5           LDR      R0,[R4, #+72]
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   3080BD08           POPEQ    {R4,R5,PC}
    131            { 
    132              int x=(ScreenW() >> 1) - (img_logo->w >> 1);
   \   0000001C   888100EF           SWI      +33160
   \   00000020   481094E5           LDR      R1,[R4, #+72]
   \   00000024   0010D1E5           LDRB     R1,[R1, #+0]
   \   00000028   A110A0E1           LSR      R1,R1,#+1
   \   0000002C   C05061E0           RSB      R5,R1,R0, ASR #+1
    133              int y=tv_desc.rc.y + GetFontYSIZE(tv_desc.font);
   \   00000030   200094E5           LDR      R0,[R4, #+32]
   \   00000034   C50100EF           SWI      +453
   \   00000038   FA11D4E1           LDRSH    R1,[R4, #+26]
    134              DrawIMGHDR(x,y, img_logo);
   \   0000003C   482094E5           LDR      R2,[R4, #+72]
   \   00000040   011080E0           ADD      R1,R0,R1
   \   00000044   0500A0E1           MOV      R0,R5
   \   00000048   A50300EF           SWI      +933
    135            }
    136          }
   \   0000004C   3080BDE8           POP      {R4,R5,PC}       ;; return
    137          
    138          

   \                                 In segment CODE, align 4, keep-with-next
    139          int OpenAboutMenu()
    140          {
   \                     OpenAboutMenu:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
    141            WSHDR* ws;
    142            char path[128];
    143            
    144            GUI* tvgui=TViewGetGUI(malloc_adr(), mfree_adr());
    145            TViewSetDefinition(tvgui, &tv_desc);
   \   00000004   ........           LDR      R5,??DataTable1  ;; tv_desc
    146            patch_header(&hdr);
    147            SetHeaderToMenu(tvgui, &hdr, malloc_adr());
    148            patch_header(&hdr);
    149            
    150            ws=AllocWS(256);
    151            wsAppendChar(ws, UTF16_INK_RGBA);
    152            wsAppendChar(ws, 0x8080);//RG
    153            wsAppendChar(ws, 0x8064);//BA-серый
    154            wsAppendChar(ws, UTF16_FONT_SMALL); 
    155            wstrcatprintf(ws, "\n\n\n\n\n\n"
    156                          "VK ELF\n"
    157                            "%t 5.68\n"
    158                              "rev. %s", "версия апи", __DATE__);
   \   00000008   60619FE5           LDR      R6,??OpenAboutMenu_0  ;; `?<Constant "\\n\\n\\n\\n\\n\\nVK ELF\\n%t 5.68\\n...">`
   \   0000000C   80D04DE2           SUB      SP,SP,#+128
   \   00000010   158000EF           SWI      +32789
   \   00000014   0040A0E1           MOV      R4,R0
   \   00000018   148000EF           SWI      +32788
   \   0000001C   0410A0E1           MOV      R1,R4
   \   00000020   D60200EF           SWI      +726
   \   00000024   0040A0E1           MOV      R4,R0
   \   00000028   0510A0E1           MOV      R1,R5
   \   0000002C   D70200EF           SWI      +727
   \   00000030   340085E2           ADD      R0,R5,#+52
   \   00000034   ........           _BLF     patch_header,??patch_header??rA
   \   00000038   148000EF           SWI      +32788
   \   0000003C   0020A0E1           MOV      R2,R0
   \   00000040   341085E2           ADD      R1,R5,#+52
   \   00000044   0400A0E1           MOV      R0,R4
   \   00000048   A60200EF           SWI      +678
   \   0000004C   340085E2           ADD      R0,R5,#+52
   \   00000050   ........           _BLF     patch_header,??patch_header??rA
   \   00000054   400FA0E3           MOV      R0,#+256
   \   00000058   250100EF           SWI      +293
   \   0000005C   0070A0E1           MOV      R7,R0
   \   00000060   0610A0E3           MOV      R1,#+6
   \   00000064   E01C81E3           ORR      R1,R1,#0xE000
   \   00000068   1C0000EF           SWI      +28
   \   0000006C   8010A0E3           MOV      R1,#+128
   \   00000070   801C81E3           ORR      R1,R1,#0x8000
   \   00000074   0700A0E1           MOV      R0,R7
   \   00000078   1C0000EF           SWI      +28
   \   0000007C   6410A0E3           MOV      R1,#+100
   \   00000080   801C81E3           ORR      R1,R1,#0x8000
   \   00000084   0700A0E1           MOV      R0,R7
   \   00000088   1C0000EF           SWI      +28
   \   0000008C   1210A0E3           MOV      R1,#+18
   \   00000090   E01C81E3           ORR      R1,R1,#0xE000
   \   00000094   0700A0E1           MOV      R0,R7
   \   00000098   1C0000EF           SWI      +28
   \   0000009C   2C3086E2           ADD      R3,R6,#+44
   \   000000A0   202086E2           ADD      R2,R6,#+32
   \   000000A4   0610A0E1           MOV      R1,R6
   \   000000A8   0700A0E1           MOV      R0,R7
   \   000000AC   160200EF           SWI      +534
    159            TViewSetText(tvgui, ws, malloc_adr(), mfree_adr());
   \   000000B0   158000EF           SWI      +32789
   \   000000B4   0080A0E1           MOV      R8,R0
   \   000000B8   148000EF           SWI      +32788
   \   000000BC   0830A0E1           MOV      R3,R8
   \   000000C0   0020A0E1           MOV      R2,R0
   \   000000C4   0710A0E1           MOV      R1,R7
    160            
    161            //захват OnRedraw
    162            memcpy(gui_methods_copy, tvgui->methods, sizeof(gui_methods_copy));
    163            OnRedraw=(void(*)(void*))gui_methods_copy[0];
    164            gui_methods_copy[0]=(void*)MyOnRedraw;
    165            tvgui->methods=gui_methods_copy;
    166          
    167            snprintf(path, 127, "%simg\\%about.png", DIR);
   \   000000C8   A4709FE5           LDR      R7,??OpenAboutMenu_0+0x4  ;; DIR
   \   000000CC   0400A0E1           MOV      R0,R4
   \   000000D0   D80200EF           SWI      +728
   \   000000D4   041094E5           LDR      R1,[R4, #+4]
   \   000000D8   6020A0E3           MOV      R2,#+96
   \   000000DC   540085E2           ADD      R0,R5,#+84
   \   000000E0   1E0100EF           SWI      +286
   \   000000E4   540095E5           LDR      R0,[R5, #+84]
   \   000000E8   0730A0E1           MOV      R3,R7
   \   000000EC   500085E5           STR      R0,[R5, #+80]
   \   000000F0   80009FE5           LDR      R0,??OpenAboutMenu_0+0x8  ;; MyOnRedraw
   \   000000F4   382086E2           ADD      R2,R6,#+56
   \   000000F8   540085E5           STR      R0,[R5, #+84]
   \   000000FC   540085E2           ADD      R0,R5,#+84
   \   00000100   040084E5           STR      R0,[R4, #+4]
   \   00000104   7F10A0E3           MOV      R1,#+127
   \   00000108   0D00A0E1           MOV      R0,SP
   \   0000010C   1B0100EF           SWI      +283
    168            img_logo=CreateIMGHDRFromPngFile(path, 2);
   \   00000110   0210A0E3           MOV      R1,#+2
   \   00000114   0D00A0E1           MOV      R0,SP
   \   00000118   E90100EF           SWI      +489
   \   0000011C   480085E5           STR      R0,[R5, #+72]
    169            
    170            snprintf(path, 127, "%simg\\%about_h.png", DIR);
   \   00000120   0730A0E1           MOV      R3,R7
   \   00000124   4C2086E2           ADD      R2,R6,#+76
   \   00000128   7F10A0E3           MOV      R1,#+127
   \   0000012C   0D00A0E1           MOV      R0,SP
   \   00000130   1B0100EF           SWI      +283
    171            img_icon=CreateIMGHDRFromPngFile(path, 2);
   \   00000134   0210A0E3           MOV      R1,#+2
   \   00000138   0D00A0E1           MOV      R0,SP
   \   0000013C   E90100EF           SWI      +489
   \   00000140   4C0085E5           STR      R0,[R5, #+76]
    172            if (img_icon)
   \   00000144   0010A0E1           MOV      R1,R0
   \   00000148   000051E3           CMP      R1,#+0
   \   0000014C   0300000A           BEQ      ??OpenAboutMenu_1
    173              SetDynIcon(0x4E74, img_icon, 0);
   \   00000150   0020A0E3           MOV      R2,#+0
   \   00000154   7400A0E3           MOV      R0,#+116
   \   00000158   4E0C80E3           ORR      R0,R0,#0x4E00
   \   0000015C   EF0100EF           SWI      +495
    174            
    175            return CreateGUI(tvgui);
   \                     ??OpenAboutMenu_1:
   \   00000160   0400A0E1           MOV      R0,R4
   \   00000164   370100EF           SWI      +311
   \   00000168   80D08DE2           ADD      SP,SP,#+128
   \   0000016C   F081BDE8           POP      {R4-R8,PC}       ;; return
   \                     ??OpenAboutMenu_0:
   \   00000170   ........           DC32     `?<Constant "\\n\\n\\n\\n\\n\\nVK ELF\\n%t 5.68\\n...">`
   \   00000174   ........           DC32     DIR
   \   00000178   ........           DC32     MyOnRedraw
    176          }

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   ........           DC32     tv_desc

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for tv_desc>`:
   \   00000000   08000000....       DC32 8, onKey, gHook, proc3, mmenusoftkeys, skt
   \              ............
   \              ............
   \              ............
   \   00000018   00001A008300       DC16 0, 26, 131, 153
   \              9900        
   \   00000020   080000006400       DC32 8, 100, 101, 0, 2
   \              000065000000
   \              000000000200
   \              0000        
   \                     `?<Initializer for hdr>`:
   \   00000034   000000000000       DC16 0, 0, 0, 0
   \              0000        
   \   0000003C   000000000000       DC32 0H, 0, 2147483647
   \              0000FFFFFF7F
   \                     `?<Initializer for img_logo>`:
   \   00000048   00000000           DC32 0H
   \                     `?<Initializer for img_icon>`:
   \   0000004C   00000000           DC32 0H
   \                     `?<Initializer for OnRedraw>`:
   \   00000050   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for gui_methods_copy>`:
   \   00000054   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000064   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000074   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000084   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000094   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000A4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \                     `?<Initializer for header_icon>`:
   \   000000B4   744E0000           DC32 20084

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for sk>`:
   \   00000000   18000000           DC16 24, 0
   \   00000004   ........           DC32 `?<Constant "">`
   \   00000008   01000000           DC16 1, 0
   \   0000000C   ........           DC32 `?<Constant "\\315\\340\\347\\340\\344">`
   \   00000010   00000000           DC16 0, 0
   \   00000014   FFFFFFFF           DC32 -1

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for skt>`:
   \   00000000   ........0000       DC32 sk, 0
   \              0000        

   \                                 In segment DATA_C, align 1, align-sorted
   \                     `?<Constant "">`:
   \   00000000   00                 DC8 ""

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\315\\340\\347\\340\\344">`:
   \   00000000   CDE0E7E0E400       DC8 "\315\340\347\340\344"
   \   00000006   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\n\\n\\n\\n\\n\\nVK ELF\\n%t 5.68\\n...">`:
   \   00000000   0A0A0A0A0A0A       DC8 "\012\012\012\012\012\012VK ELF\012%t 5.68\012rev. %s"
   \              564B20454C46
   \              0A257420352E
   \              36380A726576
   \              2E20257300  
   \   0000001D   000000             DC8 0, 0, 0
   \   00000020   E2E5F0F1E8FF       DC8 "\342\345\360\361\350\377 \340\357\350"
   \              20E0EFE800  
   \   0000002B   00                 DC8 0
   \   0000002C   446563203134       DC8 "Dec 14 2018"
   \              203230313800
   \   00000038   2573696D675C       DC8 "%simg\\%about.png"
   \              2561626F7574
   \              2E706E6700  
   \   00000049   000000             DC8 0, 0, 0
   \   0000004C   2573696D675C       DC8 "%simg\\%about_h.png"
   \              2561626F7574
   \              5F682E706E67
   \              00          
   \   0000005F   00                 DC8 0
    177          

   Maximum stack usage in bytes:

     Function      CSTACK
     --------      ------
     MyOnRedraw       12
     OpenAboutMenu   152
     gHook            16
     onKey             0
     patch_header      8
     proc3             0


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     patch_header                     48
     percent_t                        16
     mmenusoftkeys                    12
     proc3                             4
     onKey                            68
     gHook                           232
     tv_desc                         184
     sk                               24
     skt                               8
     MyOnRedraw                       80
     OpenAboutMenu                   380
     ??DataTable1                      4
     ?<Initializer for tv_desc>      184
     ?<Initializer for sk>            24
     ?<Initializer for skt>            8
     ?<Constant "">                    1
     ?<Constant "\315\340\347\340\344">
                                       8
     ?<Constant "\n\n\n\n\n\nVK ELF\n%t 5.68\n...">
                                      96
      Others                          80

 
 884 bytes in segment CODE
 133 bytes in segment DATA_C
 216 bytes in segment DATA_I
 216 bytes in segment DATA_ID
  12 bytes in segment INITTAB
 
 768 bytes of CODE  memory (+ 128 bytes shared)
 349 bytes of CONST memory
 216 bytes of DATA  memory

Errors: none
Warnings: none
