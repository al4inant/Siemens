##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION    14/Dec/2018  23:20:52 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  E:\Users\alfinant\Documents\Siemens\alfinant\src_iar #
#                       \VK.ELF_C\AccessDialog.c                             #
#    Command line    =  E:\Users\alfinant\Documents\Siemens\alfinant\src_iar #
#                       \VK.ELF_C\AccessDialog.c -D NEWSGOLD -D DEVELOP      #
#                       -lCN E:\Users\alfinant\Documents\Siemens\alfinant\sr #
#                       c_iar\VK.ELF_C\Releas_NSG\List\ -la                  #
#                       E:\Users\alfinant\Documents\Siemens\alfinant\src_iar #
#                       \VK.ELF_C\Releas_NSG\List\ -o                        #
#                       E:\Users\alfinant\Documents\Siemens\alfinant\src_iar #
#                       \VK.ELF_C\Releas_NSG\Obj\ -z9 --cpu_mode arm         #
#                       --endian little --cpu ARM926EJ-S --stack_align 4     #
#                       --interwork --diag_suppress Pe301 -e --fpu None      #
#                       --dlib_config E:\Users\alfinant\Documents\Siemens\IA #
#                       R\ARM\LIB\dl5tpainl8n.h -I                           #
#                       E:\Users\alfinant\Documents\Siemens\IAR\ARM\INC\     #
#                       --inline_threshold=2                                 #
#    List file       =  E:\Users\alfinant\Documents\Siemens\alfinant\src_iar #
#                       \VK.ELF_C\Releas_NSG\List\AccessDialog.lst           #
#    Object file     =  E:\Users\alfinant\Documents\Siemens\alfinant\src_iar #
#                       \VK.ELF_C\Releas_NSG\Obj\AccessDialog.r79            #
#                                                                            #
#                                                                            #
##############################################################################

E:\Users\alfinant\Documents\Siemens\alfinant\src_iar\VK.ELF_C\AccessDialog.c
      1          #include <siemens\swilib.h>
      2          #include "rect_patcher.h"

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void patch_header(HEADER_DESC const *)
   \                     patch_header:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0000A0E3           MOV      R0,#+0
   \   0000000C   B000C4E1           STRH     R0,[R4, #+0]
   \   00000010   B200C4E1           STRH     R0,[R4, #+2]
   \   00000014   888100EF           SWI      +33160
   \   00000018   010040E2           SUB      R0,R0,#+1
   \   0000001C   B400C4E1           STRH     R0,[R4, #+4]
   \   00000020   8A8100EF           SWI      +33162
   \   00000024   010040E2           SUB      R0,R0,#+1
   \   00000028   B600C4E1           STRH     R0,[R4, #+6]
   \   0000002C   1080BDE8           POP      {R4,PC}          ;; return
      3          #include "dyn_images.h"
      4          #include "dyn_theme.h"
      5          #include "anim_widget.h"
      6          #include "main.h"
      7          
      8          #include "http.h"
      9          #include "process.h"
     10          

   \                                 In segment DATA_C, align 4, align-sorted
     11          static const char percent_t[]="%t";
   \                     percent_t:
   \   00000000   257400             DC8 "%t"
   \   00000003   00                 DC8 0
   \   00000004   C2EAEEEDF2E0       DC8 "\302\352\356\355\362\340\352\362\345"
   \              EAF2E500    
   \   0000000E   0000               DC8 0, 0
     12          static const char HEADER_TEXT[]="Вконтакте";
     13          
     14          static char* action_url=NULL;
     15          
     16          static HEADER_DESC hdr={0,0,0,0,NULL,NULL,LGP_NULL};
     17          

   \                                 In segment DATA_C, align 4, align-sorted
     18          static const int mmenusoftkeys[]={0,1,2};
   \                     mmenusoftkeys:
   \   00000000   000000000100       DC32 0, 1, 2
   \              000002000000
     19          
     20          static SOFTKEY_DESC sk[]=
     21          {
     22            {0x0018,0x0000,(int)"Разреш."},
     23            {0x0001,0x0000, (int)"Отмена"},
     24            {0x003D,0x0000,(int)LGP_DOIT_PIC}
     25          };
     26          
     27          static SOFTKEYSTAB skt=
     28          {
     29            sk,0
     30          };
     31          
     32          

   \                                 In segment CODE, align 4, keep-with-next
     33          static void proc3(){}
   \                     proc3:
   \   00000000   1EFF2FE1           BX       LR               ;; return
     34          

   \                                 In segment CODE, align 4, keep-with-next
     35          static int onKey(void* gui, GUI_MSG *msg)
     36          {
     37            if (msg->keys==1)//закрытие
   \                     onKey:
   \   00000000   ........           LDR      R0,??DataTable5  ;; csm
   \   00000004   00402DE9           PUSH     {LR}
   \   00000008   F230D1E1           LDRSH    R3,[R1, #+2]
   \   0000000C   000090E5           LDR      R0,[R0, #+0]
   \   00000010   0020A0E3           MOV      R2,#+0
   \   00000014   010053E3           CMP      R3,#+1
   \   00000018   0200001A           BNE      ??onKey_0
     38            {
     39              csm->access_dialog_gui_id=NULL;
   \   0000001C   302080E5           STR      R2,[R0, #+48]
     40              return (0);
     41            }
     42            
     43            if ((msg->gbsmsg->msg==KEY_DOWN)||(msg->gbsmsg->msg==LONG_PRESS))
     44            { 
     45              switch(msg->gbsmsg->submess)
     46              {
     47              case LEFT_SOFT:
     48                AnimWidget_Wait_headline(); 
     49                process=OAUTH_GET_TOKEN;
     50                SUBPROC((void*)HttpSendReq, action_url);
     51                
     52               // if(gui_id)//закрываем гуй
     53                  //GeneralFunc_flag1(gui_id, 1);
     54                break;
     55                
     56              case RIGHT_SOFT:
     57                csm->access_dialog_gui_id=NULL;
     58                return(1);
     59              }
     60            }
     61            return(0);
   \                     ??onKey_1:
   \   00000020   0000A0E3           MOV      R0,#+0
   \   00000024   0080BDE8           POP      {PC}             ;; return
   \                     ??onKey_0:
   \   00000028   041091E5           LDR      R1,[R1, #+4]
   \   0000002C   93C0A0E3           MOV      R12,#+147
   \   00000030   043091E5           LDR      R3,[R1, #+4]
   \   00000034   40CF8CE3           ORR      R12,R12,#0x100
   \   00000038   0C0053E1           CMP      R3,R12
   \   0000003C   02C08C12           ADDNE    R12,R12,#+2
   \   00000040   0C005311           CMPNE    R3,R12
   \   00000044   F5FFFF1A           BNE      ??onKey_1
   \   00000048   081091E5           LDR      R1,[R1, #+8]
   \   0000004C   011051E2           SUBS     R1,R1,#+1
   \   00000050   0200000A           BEQ      ??onKey_2
   \   00000054   031051E2           SUBS     R1,R1,#+3
   \   00000058   0900000A           BEQ      ??onKey_3
   \   0000005C   EFFFFFEA           B        ??onKey_1
   \                     ??onKey_2:
   \   00000060   ........           _BLF     AnimWidget_Wait_headline,??AnimWidget_Wait_headline??rA
   \   00000064   ........           LDR      R0,??DataTable3  ;; process
   \   00000068   0510A0E3           MOV      R1,#+5
   \   0000006C   001080E5           STR      R1,[R0, #+0]
   \   00000070   ........           LDR      R0,??DataTable4  ;; action_url
   \   00000074   001090E5           LDR      R1,[R0, #+0]
   \   00000078   10009FE5           LDR      R0,??onKey_4     ;; HttpSendReq
   \   0000007C   710100EF           SWI      +369
   \   00000080   E6FFFFEA           B        ??onKey_1
   \                     ??onKey_3:
   \   00000084   302080E5           STR      R2,[R0, #+48]
   \   00000088   0100A0E3           MOV      R0,#+1
   \   0000008C   0080BDE8           POP      {PC}
   \                     ??onKey_4:
   \   00000090   ........           DC32     HttpSendReq
     62          }
     63          

   \                                 In segment CODE, align 4, keep-with-next
     64          static void gHook(void* data, int cmd)
     65          {
   \                     gHook:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
     66            //static int hdr_pic;
     67            
     68            if (cmd==TI_CMD_CREATE)
   \   00000008   020051E3           CMP      R1,#+2
   \   0000000C   1200001A           BNE      ??gHook_0
     69            {
     70              LoadDynTheme();
   \   00000010   ........           _BLF     LoadDynTheme,??LoadDynTheme??rA
     71              //LoadDynImages();
     72              
     73              //hdr_pic=GetDynPicNum(VK_HEADER_ICON);
     74              //hdr.icon=&hdr_pic;
     75              void* hdr_pointer=GetHeaderPointer(data);
   \   00000014   0400A0E1           MOV      R0,R4
   \   00000018   AE0200EF           SWI      +686
   \   0000001C   0040A0E1           MOV      R4,R0
     76              WSHDR* ws=AllocWS(32);
   \   00000020   2000A0E3           MOV      R0,#+32
   \   00000024   250100EF           SWI      +293
     77              wsprintf(ws, percent_t, HEADER_TEXT);
   \   00000028   84109FE5           LDR      R1,??gHook_1     ;; percent_t
   \   0000002C   0050A0E1           MOV      R5,R0
   \   00000030   042081E2           ADD      R2,R1,#+4
   \   00000034   240100EF           SWI      +292
     78              SetHeaderText(hdr_pointer, ws, malloc_adr(), mfree_adr());
   \   00000038   158000EF           SWI      +32789
   \   0000003C   0060A0E1           MOV      R6,R0
   \   00000040   148000EF           SWI      +32788
   \   00000044   0630A0E1           MOV      R3,R6
   \   00000048   0020A0E1           MOV      R2,R0
   \   0000004C   0510A0E1           MOV      R1,R5
   \   00000050   0400A0E1           MOV      R0,R4
   \   00000054   AF0200EF           SWI      +687
   \   00000058   7080BDE8           POP      {R4-R6,PC}
     79            }
     80            
     81            if (cmd==TI_CMD_UNFOCUS)
   \                     ??gHook_0:
   \   0000005C   090051E3           CMP      R1,#+9
   \   00000060   0300001A           BNE      ??gHook_2
     82            {
     83              AnimWidget_Close();
   \   00000064   ........           _BLF     AnimWidget_Close,??AnimWidget_Close??rA
     84              DisableDynImages();
   \   00000068   ........           _BLF     DisableDynImages,??DisableDynImages??rA
     85              DisableDynTheme();
   \   0000006C   ........           _BLF     DisableDynTheme,??DisableDynTheme??rA
   \   00000070   7080BDE8           POP      {R4-R6,PC}
     86            }
     87            
     88            if (cmd==TI_CMD_FOCUS)
   \                     ??gHook_2:
   \   00000074   0A0051E3           CMP      R1,#+10
   \   00000078   0800001A           BNE      ??gHook_3
     89            {
     90              if (process)
   \   0000007C   ........           LDR      R0,??DataTable3  ;; process
   \   00000080   000090E5           LDR      R0,[R0, #+0]
   \   00000084   000050E3           CMP      R0,#+0
   \   00000088   0000000A           BEQ      ??gHook_4
     91                AnimWidget_Wait_headline(); 
   \   0000008C   ........           _BLF     AnimWidget_Wait_headline,??AnimWidget_Wait_headline??rA
     92              
     93              EnableDynImages();
   \                     ??gHook_4:
   \   00000090   ........           _BLF     EnableDynImages,??EnableDynImages??rA
     94              EnableDynTheme();  
   \   00000094   ........           _BLF     EnableDynTheme,??EnableDynTheme??rA
     95              DisableIDLETMR();
   \   00000098   7F0100EF           SWI      +383
   \   0000009C   7080BDE8           POP      {R4-R6,PC}
     96            }
     97            
     98            if (cmd==TI_CMD_DESTROY)
   \                     ??gHook_3:
   \   000000A0   030051E3           CMP      R1,#+3
   \   000000A4   7080BD18           POPNE    {R4-R6,PC}
     99            {
    100              DisableDynTheme();
   \   000000A8   ........           _BLF     DisableDynTheme,??DisableDynTheme??rA
    101              DisableDynImages();
   \   000000AC   ........           _BLF     DisableDynImages,??DisableDynImages??rA
    102            }
    103            
    104          }
   \   000000B0   7080BDE8           POP      {R4-R6,PC}       ;; return
   \                     ??gHook_1:
   \   000000B4   ........           DC32     percent_t

   \                                 In segment DATA_I, align 4, align-sorted
   \                     action_url:
   \   00000000                      DS8 4
   \   00000004                      REQUIRE `?<Initializer for action_url>`
   \   00000004                      DS8 20
   \   00000018                      REQUIRE `?<Initializer for hdr>`
   \   00000018                      DS8 52
   \   0000004C                      REQUIRE `?<Initializer for tv_desc>`

   \                                 In segment DATA_I, align 4, align-sorted
   \                     sk:
   \   00000000                      DS8 24
   \   00000018                      REQUIRE `?<Initializer for sk>`

   \                                 In segment DATA_I, align 4, align-sorted
   \                     skt:
   \   00000000                      DS8 8
   \   00000008                      REQUIRE `?<Initializer for skt>`
    105          
    106          static TVIEW_DESC tv_desc=
    107          {
    108            8,
    109            onKey,
    110            gHook,
    111            proc3,
    112            mmenusoftkeys,
    113            &skt,
    114          #ifdef ELKA  
    115            {4,60,238,287},
    116          #else
    117            {4,28,131,150},
    118          #endif
    119            8,
    120            0x64,
    121            0x65
    122          };
    123          
    124          

   \                                 In segment CODE, align 4, keep-with-next
    125          int CreateAccessDialog(char* url)
    126          {
   \                     CreateAccessDialog:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
    127            WSHDR* ws;
    128            
    129            action_url=url;
   \   00000004   ........           LDR      R4,??DataTable4  ;; action_url
    130            
    131            void* tvgui=TViewGetGUI(malloc_adr(), mfree_adr());
    132            TViewSetDefinition(tvgui, &tv_desc);
    133            patch_header(&hdr);
    134            SetHeaderToMenu(tvgui, &hdr, malloc_adr());
    135          
    136            ws=AllocWS(256);
    137          
    138            wsAppendChar(ws, UTF16_FONT_MEDIUM_BOLD);
    139            wsAppendChar(ws, UTF16_INK_RGBA);
    140            wsAppendChar(ws, 0x0000);//RG
    141            wsAppendChar(ws, 0x0064);//BA-черный
    142            wstrcatprintf(ws, "%s", "VK.ELF ");
   \   00000008   A8819FE5           LDR      R8,??CreateAccessDialog_0+0x8  ;; `?<Constant "VK.ELF ">`
   \   0000000C   000084E5           STR      R0,[R4, #+0]
   \   00000010   158000EF           SWI      +32789
   \   00000014   0050A0E1           MOV      R5,R0
   \   00000018   148000EF           SWI      +32788
   \   0000001C   0510A0E1           MOV      R1,R5
   \   00000020   D60200EF           SWI      +726
   \   00000024   0050A0E1           MOV      R5,R0
   \   00000028   181084E2           ADD      R1,R4,#+24
   \   0000002C   D70200EF           SWI      +727
   \   00000030   040084E2           ADD      R0,R4,#+4
   \   00000034   ........           _BLF     patch_header,??patch_header??rA
   \   00000038   148000EF           SWI      +32788
   \   0000003C   0020A0E1           MOV      R2,R0
   \   00000040   041084E2           ADD      R1,R4,#+4
   \   00000044   0500A0E1           MOV      R0,R5
   \   00000048   A60200EF           SWI      +678
   \   0000004C   400FA0E3           MOV      R0,#+256
   \   00000050   250100EF           SWI      +293
   \   00000054   0060A0E1           MOV      R6,R0
   \   00000058   1510A0E3           MOV      R1,#+21
   \   0000005C   E01C81E3           ORR      R1,R1,#0xE000
   \   00000060   1C0000EF           SWI      +28
   \   00000064   0670A0E3           MOV      R7,#+6
   \   00000068   E07C87E3           ORR      R7,R7,#0xE000
   \   0000006C   0710A0E1           MOV      R1,R7
   \   00000070   0600A0E1           MOV      R0,R6
   \   00000074   1C0000EF           SWI      +28
   \   00000078   0010A0E3           MOV      R1,#+0
   \   0000007C   0600A0E1           MOV      R0,R6
   \   00000080   1C0000EF           SWI      +28
   \   00000084   6410A0E3           MOV      R1,#+100
   \   00000088   0600A0E1           MOV      R0,R6
   \   0000008C   1C0000EF           SWI      +28
   \   00000090   0820A0E1           MOV      R2,R8
   \   00000094   451F8FE2           ADR      R1,??CreateAccessDialog_0  ;; "%s"
   \   00000098   0600A0E1           MOV      R0,R6
   \   0000009C   160200EF           SWI      +534
   \   000000A0   0C1087E2           ADD      R1,R7,#+12
   \   000000A4   0600A0E1           MOV      R0,R6
    143          
    144            wsAppendChar(ws, UTF16_FONT_SMALL);
   \   000000A8   1C0000EF           SWI      +28
    145            wsAppendChar(ws, UTF16_INK_RGBA);
   \   000000AC   0710A0E1           MOV      R1,R7
   \   000000B0   0600A0E1           MOV      R0,R6
   \   000000B4   1C0000EF           SWI      +28
    146            wsAppendChar(ws, 0x8080);//RG
   \   000000B8   8090A0E3           MOV      R9,#+128
   \   000000BC   809C89E3           ORR      R9,R9,#0x8000
   \   000000C0   0910A0E1           MOV      R1,R9
   \   000000C4   0600A0E1           MOV      R0,R6
   \   000000C8   1C0000EF           SWI      +28
    147            wsAppendChar(ws, 0x8064);//BA-серый
   \   000000CC   1CA049E2           SUB      R10,R9,#+28
   \   000000D0   0A10A0E1           MOV      R1,R10
   \   000000D4   0600A0E1           MOV      R0,R6
   \   000000D8   1C0000EF           SWI      +28
    148            wstrcatprintf(ws, "%t", "запрашивает доступ к Вашему аккаунту\n\n");
   \   000000DC   34BF8FE2           ADR      R11,??CreateAccessDialog_0+0x4  ;; "%t"
   \   000000E0   082088E2           ADD      R2,R8,#+8
   \   000000E4   0B10A0E1           MOV      R1,R11
   \   000000E8   0600A0E1           MOV      R0,R6
   \   000000EC   160200EF           SWI      +534
    149            
    150            wsAppendChar(ws, UTF16_FONT_SMALL_BOLD);
   \   000000F0   0D1087E2           ADD      R1,R7,#+13
   \   000000F4   0600A0E1           MOV      R0,R6
   \   000000F8   1C0000EF           SWI      +28
    151            wsAppendChar(ws, UTF16_INK_RGBA);
   \   000000FC   0710A0E1           MOV      R1,R7
   \   00000100   0600A0E1           MOV      R0,R6
   \   00000104   1C0000EF           SWI      +28
    152            wsAppendChar(ws, 0x0000);//RG
   \   00000108   0010A0E3           MOV      R1,#+0
   \   0000010C   0600A0E1           MOV      R0,R6
   \   00000110   1C0000EF           SWI      +28
    153            wsAppendChar(ws, 0x0064);//BA - черный  
   \   00000114   6410A0E3           MOV      R1,#+100
   \   00000118   0600A0E1           MOV      R0,R6
   \   0000011C   1C0000EF           SWI      +28
    154            wstrcatprintf(ws, "%t", "Приложению будут доступны:\n");
   \   00000120   302088E2           ADD      R2,R8,#+48
   \   00000124   0B10A0E1           MOV      R1,R11
   \   00000128   0600A0E1           MOV      R0,R6
   \   0000012C   160200EF           SWI      +534
    155          
    156            wsAppendChar(ws, UTF16_FONT_SMALL);
   \   00000130   0C1087E2           ADD      R1,R7,#+12
   \   00000134   0600A0E1           MOV      R0,R6
   \   00000138   1C0000EF           SWI      +28
    157            wsAppendChar(ws, UTF16_INK_RGBA);
   \   0000013C   0710A0E1           MOV      R1,R7
   \   00000140   0600A0E1           MOV      R0,R6
   \   00000144   1C0000EF           SWI      +28
    158            wsAppendChar(ws, 0x8080);//RG
   \   00000148   0910A0E1           MOV      R1,R9
   \   0000014C   0600A0E1           MOV      R0,R6
   \   00000150   1C0000EF           SWI      +28
    159            wsAppendChar(ws, 0x8064);//BA - серый
   \   00000154   0A10A0E1           MOV      R1,R10
   \   00000158   0600A0E1           MOV      R0,R6
   \   0000015C   1C0000EF           SWI      +28
    160            wstrcatprintf(ws, "%t", "- сообщения\n"
    161                          "- список Ваших друзей\n"
    162                          "- информация\n  страницы\n"
    163                            "- фотографии\n"
    164                              "- доступ в любое\n  время");
   \   00000160   4C2088E2           ADD      R2,R8,#+76
   \   00000164   0B10A0E1           MOV      R1,R11
   \   00000168   0600A0E1           MOV      R0,R6
   \   0000016C   160200EF           SWI      +534
    165            
    166            patch_header(&hdr);
   \   00000170   040084E2           ADD      R0,R4,#+4
   \   00000174   ........           _BLF     patch_header,??patch_header??rA
    167            TViewSetText(tvgui, ws, malloc_adr(), mfree_adr());
   \   00000178   158000EF           SWI      +32789
   \   0000017C   0040A0E1           MOV      R4,R0
   \   00000180   148000EF           SWI      +32788
   \   00000184   0430A0E1           MOV      R3,R4
   \   00000188   0020A0E1           MOV      R2,R0
   \   0000018C   0610A0E1           MOV      R1,R6
   \   00000190   0500A0E1           MOV      R0,R5
   \   00000194   D80200EF           SWI      +728
    168            
    169            return (csm->access_dialog_gui_id=CreateGUI(tvgui));
   \   00000198   0500A0E1           MOV      R0,R5
   \   0000019C   370100EF           SWI      +311
   \   000001A0   ........           LDR      R1,??DataTable5  ;; csm
   \   000001A4   001091E5           LDR      R1,[R1, #+0]
   \   000001A8   300081E5           STR      R0,[R1, #+48]
   \   000001AC   F08FBDE8           POP      {R4-R11,PC}      ;; return
   \                     ??CreateAccessDialog_0:
   \   000001B0   25730000           DC8      "%s",+0
   \   000001B4   25740000           DC8      "%t",+0
   \   000001B8   ........           DC32     `?<Constant "VK.ELF ">`
    170          }

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   ........           DC32     process

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   ........           DC32     action_url

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable5:
   \   00000000   ........           DC32     csm

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for action_url>`:
   \   00000000   00000000           DC32 0H
   \                     `?<Initializer for hdr>`:
   \   00000004   000000000000       DC16 0, 0, 0, 0
   \              0000        
   \   0000000C   000000000000       DC32 0H, 0, 2147483647
   \              0000FFFFFF7F
   \                     `?<Initializer for tv_desc>`:
   \   00000018   08000000....       DC32 8, onKey, gHook, proc3, mmenusoftkeys, skt
   \              ............
   \              ............
   \              ............
   \   00000030   04001C008300       DC16 4, 28, 131, 150
   \              9600        
   \   00000038   080000006400       DC32 8, 100, 101
   \              000065000000
   \   00000044   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0000        

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for sk>`:
   \   00000000   18000000           DC16 24, 0
   \   00000004   ........           DC32 `?<Constant "\\320\\340\\347\\360\\345\\370.">`
   \   00000008   01000000           DC16 1, 0
   \   0000000C   ........           DC32 `?<Constant "\\316\\362\\354\\345\\355\\340">`
   \   00000010   3D000000           DC16 61, 0
   \   00000014   FBC0FF7F           DC32 2147467515

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for skt>`:
   \   00000000   ........0000       DC32 sk, 0
   \              0000        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\320\\340\\347\\360\\345\\370.">`:
   \   00000000   D0E0E7F0E5F8       DC8 "\320\340\347\360\345\370."
   \              2E00        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\316\\362\\354\\345\\355\\340">`:
   \   00000000   CEF2ECE5EDE0       DC8 "\316\362\354\345\355\340"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   257300             DC8 "%s"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "VK.ELF ">`:
   \   00000000   564B2E454C46       DC8 "VK.ELF "
   \              2000        
   \   00000008   E7E0EFF0E0F8       DC8 "\347\340\357\360\340\370\350\342\340\345\362 \344\356\361\362\363\357 \352 \302\340\370\345\354\363 \340\352\352\340\363\355\362\363\012\012"
   \              E8E2E0E5F220
   \              E4EEF1F2F3EF
   \              20EA20C2E0F8
   \              E5ECF320E0EA
   \              EAE0F3EDF2F3
   \              0A0A00      
   \   0000002F   00                 DC8 0
   \   00000030   CFF0E8EBEEE6       DC8 "\317\360\350\353\356\346\345\355\350\376 \341\363\344\363\362 \344\356\361\362\363\357\355\373:\012"
   \              E5EDE8FE20E1
   \              F3E4F3F220E4
   \              EEF1F2F3EFED
   \              FB3A0A00    
   \   0000004C   2D20F1EEEEE1       DC8 2DH, 20H, 0F1H, 0EEH, 0EEH, 0E1H, 0F9H, 0E5H
   \              F9E5        
   \   00000054   EDE8FF0A2D20       DC8 0EDH, 0E8H, 0FFH, 0AH, 2DH, 20H, 0F1H, 0EFH
   \              F1EF        
   \   0000005C   E8F1EEEA20C2       DC8 0E8H, 0F1H, 0EEH, 0EAH, 20H, 0C2H, 0E0H, 0F8H
   \              E0F8        
   \   00000064   E8F520E4F0F3       DC8 0E8H, 0F5H, 20H, 0E4H, 0F0H, 0F3H, 0E7H, 0E5H
   \              E7E5        
   \   0000006C   E90A2D20E8ED       DC8 0E9H, 0AH, 2DH, 20H, 0E8H, 0EDH, 0F4H, 0EEH
   \              F4EE        
   \   00000074   F0ECE0F6E8FF       DC8 0F0H, 0ECH, 0E0H, 0F6H, 0E8H, 0FFH, 0AH, 20H
   \              0A20        
   \   0000007C   20F1F2F0E0ED       DC8 20H, 0F1H, 0F2H, 0F0H, 0E0H, 0EDH, 0E8H, 0F6H
   \              E8F6        
   \   00000084   FB0A2D20F4EE       DC8 0FBH, 0AH, 2DH, 20H, 0F4H, 0EEH, 0F2H, 0EEH
   \              F2EE        
   \   0000008C   E3F0E0F4E8E8       DC8 0E3H, 0F0H, 0E0H, 0F4H, 0E8H, 0E8H, 0AH, 2DH
   \              0A2D        
   \   00000094   20E4EEF1F2F3       DC8 20H, 0E4H, 0EEH, 0F1H, 0F2H, 0F3H, 0EFH, 20H
   \              EF20        
   \   0000009C   E220EBFEE1EE       DC8 0E2H, 20H, 0EBH, 0FEH, 0E1H, 0EEH, 0E5H, 0AH
   \              E50A        
   \   000000A4   2020E2F0E5EC       DC8 20H, 20H, 0E2H, 0F0H, 0E5H, 0ECH, 0FFH, 0
   \              FF00        

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   257400             DC8 "%t"
    171          

   Maximum stack usage in bytes:

     Function           CSTACK
     --------           ------
     CreateAccessDialog    36
     gHook                 16
     onKey                  4
     patch_header           8
     proc3                  0


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     patch_header                     48
     percent_t                        16
     mmenusoftkeys                    12
     proc3                             4
     onKey                           148
     gHook                           184
     action_url                       76
     sk                               24
     skt                               8
     CreateAccessDialog              444
     ??DataTable3                      4
     ??DataTable4                      4
     ??DataTable5                      4
     ?<Initializer for action_url>    76
     ?<Initializer for sk>            24
     ?<Initializer for skt>            8
     ?<Constant "\320\340\347\360\345\370.">
                                       8
     ?<Constant "\316\362\354\345\355\340">
                                       8
     ?<Constant "%s">                  3
     ?<Constant "VK.ELF ">           172
     ?<Constant "%t">                  3
      Others                         124

 
 952 bytes in segment CODE
 222 bytes in segment DATA_C
 108 bytes in segment DATA_I
 108 bytes in segment DATA_ID
  12 bytes in segment INITTAB
 
 792 bytes of CODE  memory (+ 172 bytes shared)
 330 bytes of CONST memory
 108 bytes of DATA  memory

Errors: none
Warnings: none
