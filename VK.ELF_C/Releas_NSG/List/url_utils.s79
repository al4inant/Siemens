//////////////////////////////////////////////////////////////////////////////
//                                                                           /
// IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION   15/Mar/2023  22:35:38 /
// Copyright 1999-2005 IAR Systems. All rights reserved.                     /
//                                                                           /
//    Cpu mode        =  interwork                                           /
//    Endian          =  little                                              /
//    Stack alignment =  4                                                   /
//    Source file     =  D:\Users\alfinant\Documents\Siemens\Dev\IAR\VK.ELF_ /
//                       C\url_utils.c                                       /
//    Command line    =  D:\Users\alfinant\Documents\Siemens\Dev\IAR\VK.ELF_ /
//                       C\url_utils.c -D NEWSGOLD -D DEBUG -lCN             /
//                       D:\Users\alfinant\Documents\Siemens\Dev\IAR\VK.ELF_ /
//                       C\Releas_NSG\List\ -la D:\Users\alfinant\Documents\ /
//                       Siemens\Dev\IAR\VK.ELF_C\Releas_NSG\List\ -o        /
//                       D:\Users\alfinant\Documents\Siemens\Dev\IAR\VK.ELF_ /
//                       C\Releas_NSG\Obj\ -s9 --cpu_mode arm --endian       /
//                       little --cpu ARM926EJ-S --stack_align 4             /
//                       --interwork --diag_suppress Pe301 -e --fpu None     /
//                       --dlib_config D:\Users\alfinant\Documents\Siemens\I /
//                       AR\ARM\LIB\dl5tpainl8n.h -I                         /
//                       D:\Users\alfinant\Documents\Siemens\IAR\ARM\INC\    /
//                       --inline_threshold=2                                /
//    List file       =  D:\Users\alfinant\Documents\Siemens\Dev\IAR\VK.ELF_ /
//                       C\Releas_NSG\List\url_utils.s79                     /
//                                                                           /
//                                                                           /
//////////////////////////////////////////////////////////////////////////////

        NAME url_utils

        RTMODEL "StackAlign4", "USED"
        RTMODEL "__cpu_mode", "__pcs__interwork"
        RTMODEL "__data_model", "absolute"
        RTMODEL "__dlib_file_descriptor", "0"
        RTMODEL "__endian", "little"
        RTMODEL "__rt_version", "6"

        RSEG CSTACK:DATA:NOROOT(2)

        MULTWEAK ??CharNeedsEscaping??rT
??DataTable0 EQU 0
        MULTWEAK ??URL_reencode_escapes??rT
        MULTWEAK ??URL_unescape??rT
        MULTWEAK ??get_host_from_url??rT
        PUBLIC CharNeedsEscaping
        FUNCTION CharNeedsEscaping,0203H
        PUBLIC URL_reencode_escapes
        FUNCTION URL_reencode_escapes,0203H
        LOCFRAME CSTACK, 16, STACK
        PUBLIC URL_unescape
        FUNCTION URL_unescape,0203H
        PUBLIC _sch_istable
        PUBLIC _sch_tolower
        PUBLIC _sch_toupper
        PUBLIC get_host_from_url
        FUNCTION get_host_from_url,0203H
        LOCFRAME CSTACK, 16, STACK
        
        CFI Names cfiNames0
        CFI StackFrame CFA R13 HUGEDATA
        CFI Resource R0:32, R1:32, R2:32, R3:32, R4:32, R5:32, R6:32, R7:32
        CFI Resource R8:32, R9:32, R10:32, R11:32, R12:32, CPSR:32, R13:32
        CFI Resource R14:32, SPSR:32
        CFI VirtualResource ?RET:32
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 2
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon0
        
        
        CFI Common cfiCommon1 Using cfiNames0
        CFI CodeAlign 4
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon1
        
CharNeedsEscaping   SYMBOL "CharNeedsEscaping"
??CharNeedsEscaping??rT SYMBOL "??rT", CharNeedsEscaping
URL_reencode_escapes SYMBOL "URL_reencode_escapes"
??URL_reencode_escapes??rT SYMBOL "??rT", URL_reencode_escapes
URL_unescape        SYMBOL "URL_unescape"
??URL_unescape??rT  SYMBOL "??rT", URL_unescape
get_host_from_url   SYMBOL "get_host_from_url"
??get_host_from_url??rT SYMBOL "??rT", get_host_from_url


        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant "0123456789ABCDEF">`:
        DATA
        DC8 "0123456789ABCDEF"
        DC8 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
_sch_istable:
        DATA
        DC16 2050, 2, 2, 2, 2, 2, 2, 2, 2, 2115, 1090, 2114, 2114, 1090, 2, 2
        DC16 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2129, 48, 48, 48
        DC16 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 276, 276, 276, 276
        DC16 276, 276, 276, 276, 276, 276, 48, 48, 48, 48, 48, 48, 48, 912, 912
        DC16 912, 912, 912, 912, 656, 656, 656, 656, 656, 656, 656, 656, 656
        DC16 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 48, 48, 48
        DC16 48, 560, 48, 792, 792, 792, 792, 792, 792, 536, 536, 536, 536, 536
        DC16 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536
        DC16 536, 536, 48, 48, 48, 48, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC16 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC16 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC16 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC16 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC16 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC16 0, 0, 0, 0, 0
_sch_toupper:
        DC8 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
        DC8 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35
        DC8 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52
        DC8 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69
        DC8 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86
        DC8 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 65, 66, 67, 68, 69, 70, 71
        DC8 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88
        DC8 89, 90, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134
        DC8 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147
        DC8 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160
        DC8 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173
        DC8 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186
        DC8 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199
        DC8 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212
        DC8 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225
        DC8 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238
        DC8 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251
        DC8 252, 253, 254, 255
        DC8 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2
        DC8 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 2, 3, 1, 2, 1, 0, 0, 0, 0, 1, 1, 0
        DC8 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 2, 1, 2, 1, 3, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3
        DC8 2, 3, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2
        DC8 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2
        DC8 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2
        DC8 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2
        DC8 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2
        DC8 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2
        DC8 2, 2, 2

        RSEG DATA_C:CONST:SORT:NOROOT(2)
_sch_tolower:
        DATA
        DC8 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
        DC8 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35
        DC8 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52
        DC8 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 97, 98, 99, 100
        DC8 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113
        DC8 114, 115, 116, 117, 118, 119, 120, 121, 122, 91, 92, 93, 94, 95, 96
        DC8 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110
        DC8 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123
        DC8 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136
        DC8 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149
        DC8 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162
        DC8 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175
        DC8 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188
        DC8 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201
        DC8 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214
        DC8 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227
        DC8 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240
        DC8 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253
        DC8 254, 255

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock0 Using cfiCommon0
        CFI NoFunction
        THUMB
??URL_unescape??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock0
        REQUIRE URL_unescape

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock1 Using cfiCommon1
        CFI Function URL_unescape
        ARM
URL_unescape:
        MOV      R1,R0
        LDRB     R2,[R1, #+0]
        CMP      R2,#+0
        BEQ      ??URL_unescape_0
??URL_unescape_1:
        LDRB     R2,[R1, #+0]
        CMP      R2,#+37
        BEQ      ??URL_unescape_2
??URL_unescape_3:
        LDRB     R2,[R1, #+0]
        B        ??URL_unescape_4
??URL_unescape_2:
        LDRB     R2,[R1, #+1]
        CMP      R2,#+0
        LDRBNE   R2,[R1, #+2]
        CMPNE    R2,#+0
        BEQ      ??URL_unescape_3
        LDRB     R3,[R1, #+1]
        LDR      R2,??DataTable1  ;; _sch_istable
        ADD      R3,R2,R3, LSL #+1
        LDRH     R3,[R3, #+0]
        TST      R3,#0x100
        BEQ      ??URL_unescape_3
        LDRB     R3,[R1, #+2]
        ADD      R3,R2,R3, LSL #+1
        LDRH     R3,[R3, #+0]
        TST      R3,#0x100
        BEQ      ??URL_unescape_3
        LDRB     R3,[R1, #+1]
        LDRB     R12,[R1, #+2]
        CMP      R3,#+65
        ADDCS    R3,R3,R2
        LDRBCS   R3,[R3, #+512]
        SUBCC    R3,R3,#+48
        SUBCS    R3,R3,#+55
        CMP      R12,#+65
        ADDCS    R2,R12,R2
        LDRBCS   R2,[R2, #+512]
        SUBCC    R2,R12,#+48
        SUBCS    R2,R2,#+55
        ADD      R2,R2,R3, LSL #+4
        ANDS     R2,R2,#0xFF
        BEQ      ??URL_unescape_3
        ADD      R1,R1,#+2
??URL_unescape_4:
        STRB     R2,[R0], #+1
        LDRB     R2,[R1, #+1]!
        CMP      R2,#+0
        BNE      ??URL_unescape_1
??URL_unescape_0:
        MOV      R1,#+0
        STRB     R1,[R0, #+0]
        BX       LR               ;; return
        CFI EndBlock cfiBlock1

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock2 Using cfiCommon0
        CFI NoFunction
        THUMB
??CharNeedsEscaping??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock2
        REQUIRE CharNeedsEscaping

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock3 Using cfiCommon1
        CFI Function CharNeedsEscaping
        ARM
CharNeedsEscaping:
        LDRB     R2,[R0, #+0]
        LDR      R1,??DataTable1  ;; _sch_istable
        CMP      R2,#+37
        BNE      ??CharNeedsEscaping_0
        LDRB     R2,[R0, #+1]
        ADD      R2,R1,R2, LSL #+1
        LDRH     R2,[R2, #+0]
        TST      R2,#0x100
        BEQ      ??CharNeedsEscaping_1
        LDRB     R0,[R0, #+2]
        ADD      R0,R1,R0, LSL #+1
        LDRH     R0,[R0, #+0]
        TST      R0,#0x100
        BEQ      ??CharNeedsEscaping_1
        B        ??CharNeedsEscaping_2
??CharNeedsEscaping_0:
        ADD      R0,R2,R1
        LDRB     R0,[R0, #+768]
        AND      R0,R0,#0x3
        CMP      R0,#+2
        BNE      ??CharNeedsEscaping_2
??CharNeedsEscaping_1:
        MOV      R0,#+1
        BX       LR
??CharNeedsEscaping_2:
        MOV      R0,#+0
        BX       LR               ;; return
        CFI EndBlock cfiBlock3

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable1:
        DC32     _sch_istable

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock4 Using cfiCommon0
        CFI NoFunction
        THUMB
??URL_reencode_escapes??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock4
        REQUIRE URL_reencode_escapes

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock5 Using cfiCommon1
        CFI Function URL_reencode_escapes
        ARM
URL_reencode_escapes:
        PUSH     {R4-R6,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R6 Frame(CFA, -8)
        CFI R5 Frame(CFA, -12)
        CFI R4 Frame(CFA, -16)
        CFI CFA R13+16
        MOV      R6,R0
        MOV      R4,R6
        LDRB     R0,[R4, #+0]
        MOV      R5,#+0
        CMP      R0,#+0
        BEQ      ??URL_reencode_escapes_0
??URL_reencode_escapes_1:
        MOV      R0,R4
        BL       CharNeedsEscaping
        CMP      R0,#+0
        LDRB     R0,[R4, #+1]!
        ADDNE    R5,R5,#+1
        CMP      R0,#+0
        BNE      ??URL_reencode_escapes_1
        CMP      R5,#+0
        BNE      ??URL_reencode_escapes_2
??URL_reencode_escapes_0:
        MOV      R0,R6
        SWI      +27
        ADD      R0,R0,#+1
        SWI      +20
        MOV      R5,R0
        MOV      R1,R6
        SWI      +26
        MOV      R0,R5
        POP      {R4-R6,PC}
??URL_reencode_escapes_2:
        SUB      R0,R4,R6
        ADD      R0,R0,R5, LSL #+1
        ADD      R0,R0,#+1
        SWI      +20
        MOV      R5,R0
        MOV      R4,R6
        LDRB     R0,[R4, #+0]
        MOV      R6,R5
        CMP      R0,#+0
        BEQ      ??URL_reencode_escapes_3
??URL_reencode_escapes_4:
        MOV      R0,R4
        BL       CharNeedsEscaping
        CMP      R0,#+0
        LDRB     R0,[R4], #+1
        BEQ      ??URL_reencode_escapes_5
        MOV      R1,#+37
        STRB     R1,[R6], #+1
        LDR      R1,??URL_reencode_escapes_6  ;; `?<Constant "0123456789ABCDEF">`
        MOV      R2,R0
        LDRB     R2,[R1, +R2, ASR #+4]
        AND      R0,R0,#0xF
        STRB     R2,[R6], #+1
        LDRB     R0,[R0, +R1]
??URL_reencode_escapes_5:
        STRB     R0,[R6], #+1
        LDRB     R0,[R4, #+0]
        CMP      R0,#+0
        BNE      ??URL_reencode_escapes_4
??URL_reencode_escapes_3:
        STRB     R0,[R6, #+0]
        MOV      R0,R5
        POP      {R4-R6,PC}       ;; return
        DATA
??URL_reencode_escapes_6:
        DC32     `?<Constant "0123456789ABCDEF">`
        CFI EndBlock cfiBlock5

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock6 Using cfiCommon0
        CFI NoFunction
        THUMB
??get_host_from_url??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock6
        REQUIRE get_host_from_url

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock7 Using cfiCommon1
        CFI Function get_host_from_url
        ARM
get_host_from_url:
        PUSH     {R4-R6,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R6 Frame(CFA, -8)
        CFI R5 Frame(CFA, -12)
        CFI R4 Frame(CFA, -16)
        CFI CFA R13+16
        MOV      R4,R0
        MOV      R5,R1
        MOV      R6,#+0
        MOV      R1,#+58
        MOV      R0,R5
        SWI      +24
        CMP      R0,#+0
        BEQ      ??get_host_from_url_0
        ADD      R1,R0,#+1
        LDRB     R2,[R1, #+0]
        CMP      R2,#+47
        LDRBEQ   R1,[R1, #+1]
        CMPEQ    R1,#+47
        BNE      ??get_host_from_url_0
        ADD      R5,R0,#+3
        B        ??get_host_from_url_0
??get_host_from_url_1:
        STRB     R0,[R4], #+1
        ADD      R6,R6,#+1
??get_host_from_url_0:
        LDRB     R0,[R5], #+1
        CMP      R0,#+0
        BEQ      ??get_host_from_url_2
        CMP      R6,#+65
        MOVGE    R0,#+0
        POPGE    {R4-R6,PC}
        CMP      R0,#+47
        CMPNE    R0,#+58
        BNE      ??get_host_from_url_1
        MOV      R0,#+0
??get_host_from_url_2:
        STRB     R0,[R4, #+0]
        MOV      R0,R6
        POP      {R4-R6,PC}       ;; return
        CFI EndBlock cfiBlock7

        END
// 
//   660 bytes in segment CODE
// 1 300 bytes in segment DATA_C
// 
//   644 bytes of CODE  memory (+ 16 bytes shared)
// 1 300 bytes of CONST memory
//
//Errors: none
//Warnings: none
