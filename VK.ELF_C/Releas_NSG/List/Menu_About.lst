##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION    15/Mar/2023  22:35:38 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  D:\Users\alfinant\Documents\Siemens\Dev\IAR\VK.ELF_C #
#                       \Menu_About.c                                        #
#    Command line    =  D:\Users\alfinant\Documents\Siemens\Dev\IAR\VK.ELF_C #
#                       \Menu_About.c -D NEWSGOLD -D DEBUG -lCN              #
#                       D:\Users\alfinant\Documents\Siemens\Dev\IAR\VK.ELF_C #
#                       \Releas_NSG\List\ -la D:\Users\alfinant\Documents\Si #
#                       emens\Dev\IAR\VK.ELF_C\Releas_NSG\List\ -o           #
#                       D:\Users\alfinant\Documents\Siemens\Dev\IAR\VK.ELF_C #
#                       \Releas_NSG\Obj\ -s9 --cpu_mode arm --endian little  #
#                       --cpu ARM926EJ-S --stack_align 4 --interwork         #
#                       --diag_suppress Pe301 -e --fpu None --dlib_config    #
#                       D:\Users\alfinant\Documents\Siemens\IAR\ARM\LIB\dl5t #
#                       painl8n.h -I D:\Users\alfinant\Documents\Siemens\IAR #
#                       \ARM\INC\ --inline_threshold=2                       #
#    List file       =  D:\Users\alfinant\Documents\Siemens\Dev\IAR\VK.ELF_C #
#                       \Releas_NSG\List\Menu_About.lst                      #
#    Object file     =  D:\Users\alfinant\Documents\Siemens\Dev\IAR\VK.ELF_C #
#                       \Releas_NSG\Obj\Menu_About.r79                       #
#                                                                            #
#                                                                            #
##############################################################################

D:\Users\alfinant\Documents\Siemens\Dev\IAR\VK.ELF_C\Menu_About.c
      1          #include <siemens\swilib.h>
      2          #include "rect_patcher.h"
      3          #include "dyn_images.h"
      4          #include "anim_widget.h"
      5          #include "dyn_theme.h"
      6          
      7          extern const char APP_DIR[];
      8          
      9          static int gui_id = 0;
     10          

   \                                 In segment DATA_C, align 4, align-sorted
     11          static const char percent_t[]="%t";
   \                     percent_t:
   \   00000000   257400             DC8 "%t"
   \   00000003   00                 DC8 0
   \   00000004   CE20EFF0EEE3       DC8 "\316 \357\360\356\343\360\340\354\354\345"
   \              F0E0ECECE500
     12          static const char HEADER_TEXT[]="О программе";
     13          static int header_icon=0x4E74;
     14          
     15          static IMGHDR* img_logo=NULL;
     16          static IMGHDR* img_icon=NULL;
     17          
     18          static HEADER_DESC hdr={0,0,0,0,NULL,NULL,LGP_NULL};
     19          

   \                                 In segment DATA_C, align 4, align-sorted
     20          static const int mmenusoftkeys[]={0,1,2};
   \                     mmenusoftkeys:
   \   00000000   000000000100       DC32 0, 1, 2
   \              000002000000
     21          
     22          static SOFTKEY_DESC sk[]=
     23          {
     24            {0x0018,0x0000,(int)""},
     25            {0x0001,0x0000, (int)"Назад"},
     26            {0x0000,0x0000,0xFFFFFFFF},
     27          };
     28          
     29          static SOFTKEYSTAB skt=
     30          {
     31            sk,0
     32          };
     33          
     34          

   \                                 In segment CODE, align 4, keep-with-next
     35          static void proc3(){}
   \                     proc3:
   \   00000000   1EFF2FE1           BX       LR               ;; return
     36          

   \                                 In segment CODE, align 4, keep-with-next
     37          static int onKey(void* gui, GUI_MSG *msg)
     38          {
     39            if (msg->keys==1)//закрытие
   \                     onKey:
   \   00000000   F200D1E1           LDRSH    R0,[R1, #+2]
   \   00000004   010050E3           CMP      R0,#+1
   \   00000008   0100001A           BNE      ??onKey_0
     40            {
     41              //
     42              return (0);
   \                     ??onKey_1:
   \   0000000C   0000A0E3           MOV      R0,#+0
   \   00000010   1EFF2FE1           BX       LR
     43            }
     44            
     45            if ((msg->gbsmsg->msg==KEY_DOWN)||(msg->gbsmsg->msg==LONG_PRESS))
   \                     ??onKey_0:
   \   00000014   040091E5           LDR      R0,[R1, #+4]
   \   00000018   9320A0E3           MOV      R2,#+147
   \   0000001C   041090E5           LDR      R1,[R0, #+4]
   \   00000020   402F82E3           ORR      R2,R2,#0x100
   \   00000024   020051E1           CMP      R1,R2
   \   00000028   02208212           ADDNE    R2,R2,#+2
   \   0000002C   02005111           CMPNE    R1,R2
     46            { 
     47              switch(msg->gbsmsg->submess)
   \   00000030   08009005           LDREQ    R0,[R0, #+8]
   \   00000034   04005003           CMPEQ    R0,#+4
   \   00000038   F3FFFF1A           BNE      ??onKey_1
     48              {
     49              case LEFT_SOFT:
     50                break;
     51                
     52              case RIGHT_SOFT:
     53                return(1);
   \   0000003C   0100A0E3           MOV      R0,#+1
   \   00000040   1EFF2FE1           BX       LR               ;; return
     54              }
     55            }
     56            return(0);
     57          }
     58          

   \                                 In segment CODE, align 4, keep-with-next
     59          static void gHook(void* data, int cmd)
     60          {
   \                     gHook:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
     61            //static int hdr_pic;
     62            
     63            if (cmd==TI_CMD_CREATE)
   \   00000008   D0509FE5           LDR      R5,??gHook_0     ;; tv_desc
   \   0000000C   020051E3           CMP      R1,#+2
   \   00000010   1600001A           BNE      ??gHook_1
     64            {   
     65              LoadDynTheme();
   \   00000014   ........           _BLF     LoadDynTheme,??LoadDynTheme??rA
     66              if (img_icon)
   \   00000018   4C0095E5           LDR      R0,[R5, #+76]
   \   0000001C   000050E3           CMP      R0,#+0
     67                hdr.icon=&header_icon;
   \   00000020   B4008512           ADDNE    R0,R5,#+180
   \   00000024   3C008515           STRNE    R0,[R5, #+60]
     68              void* hdr_pointer=GetHeaderPointer(data);
   \   00000028   0400A0E1           MOV      R0,R4
   \   0000002C   AE0200EF           SWI      +686
   \   00000030   0040A0E1           MOV      R4,R0
     69              WSHDR* ws=AllocWS(32);
   \   00000034   2000A0E3           MOV      R0,#+32
   \   00000038   250100EF           SWI      +293
     70              wsprintf(ws, percent_t, HEADER_TEXT);
   \   0000003C   A0109FE5           LDR      R1,??gHook_0+0x4  ;; percent_t
   \   00000040   0050A0E1           MOV      R5,R0
   \   00000044   042081E2           ADD      R2,R1,#+4
   \   00000048   240100EF           SWI      +292
     71              SetHeaderText(hdr_pointer, ws, malloc_adr(), mfree_adr());
   \   0000004C   158000EF           SWI      +32789
   \   00000050   0060A0E1           MOV      R6,R0
   \   00000054   148000EF           SWI      +32788
   \   00000058   0630A0E1           MOV      R3,R6
   \   0000005C   0020A0E1           MOV      R2,R0
   \   00000060   0510A0E1           MOV      R1,R5
   \   00000064   0400A0E1           MOV      R0,R4
   \   00000068   AF0200EF           SWI      +687
   \   0000006C   7080BDE8           POP      {R4-R6,PC}
     72            }
     73            
     74            if (cmd==TI_CMD_UNFOCUS)
   \                     ??gHook_1:
   \   00000070   090051E3           CMP      R1,#+9
   \   00000074   1700000A           BEQ      ??gHook_2
     75            {     
     76              DisableDynTheme();
     77             
     78            }
     79            
     80            if (cmd==TI_CMD_FOCUS)
   \                     ??gHook_3:
   \   00000078   0A0051E3           CMP      R1,#+10
   \   0000007C   0200001A           BNE      ??gHook_4
     81            {
     82              EnableDynTheme();  
   \   00000080   ........           _BLF     EnableDynTheme,??EnableDynTheme??rA
     83              DisableIDLETMR();
   \   00000084   7F0100EF           SWI      +383
   \   00000088   7080BDE8           POP      {R4-R6,PC}
     84            }
     85            
     86            if (cmd==TI_CMD_DESTROY)
   \                     ??gHook_4:
   \   0000008C   030051E3           CMP      R1,#+3
   \   00000090   7080BD18           POPNE    {R4-R6,PC}
     87            {
     88              if (img_logo)
   \   00000094   480095E5           LDR      R0,[R5, #+72]
   \   00000098   0040A0E3           MOV      R4,#+0
   \   0000009C   000050E3           CMP      R0,#+0
   \   000000A0   0400000A           BEQ      ??gHook_5
     89              {
     90                mfree(img_logo->bitmap);
   \   000000A4   040090E5           LDR      R0,[R0, #+4]
   \   000000A8   150000EF           SWI      +21
     91                mfree(img_logo);
   \   000000AC   480095E5           LDR      R0,[R5, #+72]
   \   000000B0   150000EF           SWI      +21
     92                img_logo = NULL;
   \   000000B4   484085E5           STR      R4,[R5, #+72]
     93              }
     94              
     95              if (img_icon)
   \                     ??gHook_5:
   \   000000B8   4C0095E5           LDR      R0,[R5, #+76]
   \   000000BC   000050E3           CMP      R0,#+0
   \   000000C0   0400000A           BEQ      ??gHook_2
     96              {
     97                mfree(img_icon->bitmap);
   \   000000C4   040090E5           LDR      R0,[R0, #+4]
   \   000000C8   150000EF           SWI      +21
     98                mfree(img_icon);
   \   000000CC   4C0095E5           LDR      R0,[R5, #+76]
   \   000000D0   150000EF           SWI      +21
     99                img_icon=NULL;      
   \   000000D4   4C4085E5           STR      R4,[R5, #+76]
    100              }
    101              DisableDynTheme();
   \                     ??gHook_2:
   \   000000D8   ........           _BLF     DisableDynTheme,??DisableDynTheme??rA
    102              gui_id = 0;
    103            }
    104            
    105          }
   \   000000DC   7080BDE8           POP      {R4-R6,PC}       ;; return
   \                     ??gHook_0:
   \   000000E0   ........           DC32     tv_desc
   \   000000E4   ........           DC32     percent_t

   \                                 In segment DATA_I, align 4, align-sorted
    106          
    107          static TVIEW_DESC tv_desc=
   \                     tv_desc:
   \   00000000                      DS8 52
   \   00000034                      REQUIRE `?<Initializer for tv_desc>`
   \   00000034                      DS8 20
   \   00000048                      REQUIRE `?<Initializer for hdr>`
   \   00000048                      DS8 4
   \   0000004C                      REQUIRE `?<Initializer for img_logo>`
   \   0000004C                      DS8 4
   \   00000050                      REQUIRE `?<Initializer for img_icon>`
   \   00000050                      DS8 4
   \   00000054                      REQUIRE `?<Initializer for OnRedraw>`
   \   00000054                      DS8 96
   \   000000B4                      REQUIRE `?<Initializer for gui_methods_copy>`
   \   000000B4                      DS8 4
   \   000000B8                      REQUIRE `?<Initializer for header_icon>`

   \                                 In segment DATA_I, align 4, align-sorted
   \                     sk:
   \   00000000                      DS8 24
   \   00000018                      REQUIRE `?<Initializer for sk>`

   \                                 In segment DATA_I, align 4, align-sorted
   \                     skt:
   \   00000000                      DS8 8
   \   00000008                      REQUIRE `?<Initializer for skt>`
    108          {
    109            8,
    110            onKey,
    111            gHook,
    112            proc3,
    113            mmenusoftkeys,
    114            &skt,
    115          #ifdef ELKA  
    116            {4,56,239,287},
    117          #else
    118            {0,26,131,153},
    119          #endif
    120            8,//font
    121            0x64,
    122            0x65,
    123            0,
    124            2 //выравнивание по центру
    125          };
    126          
    127          static void (*OnRedraw)(void*);
    128          static void* gui_methods_copy[24];
    129          

   \                                 In segment CODE, align 4, keep-with-next
    130          static void MyOnRedraw(void *data)
    131          {
   \                     MyOnRedraw:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
    132            OnRedraw(data);
   \   00000004   ........           LDR      R4,??DataTable1  ;; tv_desc
   \   00000008   501094E5           LDR      R1,[R4, #+80]
   \   0000000C   31FF2FE1           BLX      R1
    133            
    134            if (img_logo)
   \   00000010   480094E5           LDR      R0,[R4, #+72]
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   3080BD08           POPEQ    {R4,R5,PC}
    135            { 
    136              int x=(ScreenW() >> 1) - (img_logo->w >> 1);
   \   0000001C   888100EF           SWI      +33160
   \   00000020   481094E5           LDR      R1,[R4, #+72]
   \   00000024   0010D1E5           LDRB     R1,[R1, #+0]
   \   00000028   A110A0E1           LSR      R1,R1,#+1
   \   0000002C   C05061E0           RSB      R5,R1,R0, ASR #+1
    137              int y=tv_desc.rc.y + GetFontYSIZE(tv_desc.font);
   \   00000030   200094E5           LDR      R0,[R4, #+32]
   \   00000034   C50100EF           SWI      +453
   \   00000038   FA11D4E1           LDRSH    R1,[R4, #+26]
    138              DrawIMGHDR(x,y, img_logo);
   \   0000003C   482094E5           LDR      R2,[R4, #+72]
   \   00000040   011080E0           ADD      R1,R0,R1
   \   00000044   0500A0E1           MOV      R0,R5
   \   00000048   A50300EF           SWI      +933
    139            }
    140          }
   \   0000004C   3080BDE8           POP      {R4,R5,PC}       ;; return
    141          
    142          extern const char API_VER[];
    143          

   \                                 In segment CODE, align 4, keep-with-next
    144          void OpenAboutMenu()
    145          {
   \                     OpenAboutMenu:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
    146            WSHDR* ws;
    147            char path[128];
    148            
    149            GUI* tvgui=TViewGetGUI(malloc_adr(), mfree_adr());
    150            TViewSetDefinition(tvgui, &tv_desc);
   \   00000004   ........           LDR      R5,??DataTable1  ;; tv_desc
   \   00000008   80D04DE2           SUB      SP,SP,#+128
    151            patch_header(&hdr);
   \   0000000C   0060A0E3           MOV      R6,#+0
   \   00000010   158000EF           SWI      +32789
   \   00000014   0040A0E1           MOV      R4,R0
   \   00000018   148000EF           SWI      +32788
   \   0000001C   0410A0E1           MOV      R1,R4
   \   00000020   D60200EF           SWI      +726
   \   00000024   0040A0E1           MOV      R4,R0
   \   00000028   0510A0E1           MOV      R1,R5
   \   0000002C   D70200EF           SWI      +727
   \   00000030   346085E5           STR      R6,[R5, #+52]
   \   00000034   888100EF           SWI      +33160
   \   00000038   010040E2           SUB      R0,R0,#+1
   \   0000003C   B803C5E1           STRH     R0,[R5, #+56]
   \   00000040   8A8100EF           SWI      +33162
   \   00000044   010040E2           SUB      R0,R0,#+1
   \   00000048   BA03C5E1           STRH     R0,[R5, #+58]
    152            SetHeaderToMenu(tvgui, &hdr, malloc_adr());
   \   0000004C   148000EF           SWI      +32788
   \   00000050   0020A0E1           MOV      R2,R0
   \   00000054   341085E2           ADD      R1,R5,#+52
   \   00000058   0400A0E1           MOV      R0,R4
   \   0000005C   A60200EF           SWI      +678
    153            patch_header(&hdr);
   \   00000060   346085E5           STR      R6,[R5, #+52]
    154            
    155            ws=AllocWS(256);
    156            wsAppendChar(ws, UTF16_INK_RGBA);
    157            wsAppendChar(ws, 0x8080);//RG
    158            wsAppendChar(ws, 0x8064);//BA-серый
    159            wsAppendChar(ws, UTF16_FONT_SMALL); 
    160            wstrcatprintf(ws, "\n\n\n\n\n\n"
    161                          "VK ELF\n"
    162                            "api version %t\n"
    163                              "rev. %s",API_VER, __DATE__);
   \   00000064   30619FE5           LDR      R6,??OpenAboutMenu_0  ;; `?<Constant "\\n\\n\\n\\n\\n\\nVK ELF\\napi vers...">`
   \   00000068   888100EF           SWI      +33160
   \   0000006C   010040E2           SUB      R0,R0,#+1
   \   00000070   B803C5E1           STRH     R0,[R5, #+56]
   \   00000074   8A8100EF           SWI      +33162
   \   00000078   010040E2           SUB      R0,R0,#+1
   \   0000007C   BA03C5E1           STRH     R0,[R5, #+58]
   \   00000080   400FA0E3           MOV      R0,#+256
   \   00000084   250100EF           SWI      +293
   \   00000088   0070A0E1           MOV      R7,R0
   \   0000008C   0610A0E3           MOV      R1,#+6
   \   00000090   E01C81E3           ORR      R1,R1,#0xE000
   \   00000094   1C0000EF           SWI      +28
   \   00000098   8010A0E3           MOV      R1,#+128
   \   0000009C   801C81E3           ORR      R1,R1,#0x8000
   \   000000A0   0700A0E1           MOV      R0,R7
   \   000000A4   1C0000EF           SWI      +28
   \   000000A8   6410A0E3           MOV      R1,#+100
   \   000000AC   801C81E3           ORR      R1,R1,#0x8000
   \   000000B0   0700A0E1           MOV      R0,R7
   \   000000B4   1C0000EF           SWI      +28
   \   000000B8   1210A0E3           MOV      R1,#+18
   \   000000BC   E01C81E3           ORR      R1,R1,#0xE000
   \   000000C0   0700A0E1           MOV      R0,R7
   \   000000C4   1C0000EF           SWI      +28
   \   000000C8   D0209FE5           LDR      R2,??OpenAboutMenu_0+0x4  ;; API_VER
   \   000000CC   243086E2           ADD      R3,R6,#+36
   \   000000D0   0610A0E1           MOV      R1,R6
   \   000000D4   0700A0E1           MOV      R0,R7
   \   000000D8   160200EF           SWI      +534
    164            TViewSetText(tvgui, ws, malloc_adr(), mfree_adr());
   \   000000DC   158000EF           SWI      +32789
   \   000000E0   0080A0E1           MOV      R8,R0
   \   000000E4   148000EF           SWI      +32788
   \   000000E8   0830A0E1           MOV      R3,R8
   \   000000EC   0020A0E1           MOV      R2,R0
   \   000000F0   0710A0E1           MOV      R1,R7
    165            
    166            //захват OnRedraw
    167            memcpy(gui_methods_copy, tvgui->methods, sizeof(gui_methods_copy));
    168            OnRedraw=(void(*)(void*))gui_methods_copy[0];
    169            gui_methods_copy[0]=(void*)MyOnRedraw;
    170            tvgui->methods=gui_methods_copy;
    171          
    172            snprintf(path, 127, "%simg\\%about.png", APP_DIR);
   \   000000F4   A8709FE5           LDR      R7,??OpenAboutMenu_0+0x8  ;; APP_DIR
   \   000000F8   0400A0E1           MOV      R0,R4
   \   000000FC   D80200EF           SWI      +728
   \   00000100   041094E5           LDR      R1,[R4, #+4]
   \   00000104   6020A0E3           MOV      R2,#+96
   \   00000108   540085E2           ADD      R0,R5,#+84
   \   0000010C   1E0100EF           SWI      +286
   \   00000110   540095E5           LDR      R0,[R5, #+84]
   \   00000114   0730A0E1           MOV      R3,R7
   \   00000118   500085E5           STR      R0,[R5, #+80]
   \   0000011C   84009FE5           LDR      R0,??OpenAboutMenu_0+0xC  ;; MyOnRedraw
   \   00000120   302086E2           ADD      R2,R6,#+48
   \   00000124   540085E5           STR      R0,[R5, #+84]
   \   00000128   540085E2           ADD      R0,R5,#+84
   \   0000012C   040084E5           STR      R0,[R4, #+4]
   \   00000130   7F10A0E3           MOV      R1,#+127
   \   00000134   0D00A0E1           MOV      R0,SP
   \   00000138   1B0100EF           SWI      +283
    173            img_logo=CreateIMGHDRFromPngFile(path, 2);
   \   0000013C   0210A0E3           MOV      R1,#+2
   \   00000140   0D00A0E1           MOV      R0,SP
   \   00000144   E90100EF           SWI      +489
   \   00000148   480085E5           STR      R0,[R5, #+72]
    174            
    175            snprintf(path, 127, "%simg\\%about_h.png", APP_DIR);
   \   0000014C   0730A0E1           MOV      R3,R7
   \   00000150   442086E2           ADD      R2,R6,#+68
   \   00000154   7F10A0E3           MOV      R1,#+127
   \   00000158   0D00A0E1           MOV      R0,SP
   \   0000015C   1B0100EF           SWI      +283
    176            img_icon=CreateIMGHDRFromPngFile(path, 2);
   \   00000160   0210A0E3           MOV      R1,#+2
   \   00000164   0D00A0E1           MOV      R0,SP
   \   00000168   E90100EF           SWI      +489
   \   0000016C   4C0085E5           STR      R0,[R5, #+76]
    177            if (img_icon)
   \   00000170   0010A0E1           MOV      R1,R0
   \   00000174   000051E3           CMP      R1,#+0
   \   00000178   0300000A           BEQ      ??OpenAboutMenu_1
    178              SetDynIcon(0x4E74, img_icon, 0);
   \   0000017C   0020A0E3           MOV      R2,#+0
   \   00000180   7400A0E3           MOV      R0,#+116
   \   00000184   4E0C80E3           ORR      R0,R0,#0x4E00
   \   00000188   EF0100EF           SWI      +495
    179            
    180            gui_id = CreateGUI(tvgui);
   \                     ??OpenAboutMenu_1:
   \   0000018C   0400A0E1           MOV      R0,R4
   \   00000190   370100EF           SWI      +311
    181          }
   \   00000194   80D08DE2           ADD      SP,SP,#+128
   \   00000198   F081BDE8           POP      {R4-R8,PC}       ;; return
   \                     ??OpenAboutMenu_0:
   \   0000019C   ........           DC32     `?<Constant "\\n\\n\\n\\n\\n\\nVK ELF\\napi vers...">`
   \   000001A0   ........           DC32     API_VER
   \   000001A4   ........           DC32     APP_DIR
   \   000001A8   ........           DC32     MyOnRedraw

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   ........           DC32     tv_desc

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for tv_desc>`:
   \   00000000   08000000....       DC32 8, onKey, gHook, proc3, mmenusoftkeys, skt
   \              ............
   \              ............
   \              ............
   \   00000018   00001A008300       DC16 0, 26, 131, 153
   \              9900        
   \   00000020   080000006400       DC32 8, 100, 101, 0, 2
   \              000065000000
   \              000000000200
   \              0000        
   \                     `?<Initializer for hdr>`:
   \   00000034   000000000000       DC16 0, 0, 0, 0
   \              0000        
   \   0000003C   000000000000       DC32 0H, 0, 2147483647
   \              0000FFFFFF7F
   \                     `?<Initializer for img_logo>`:
   \   00000048   00000000           DC32 0H
   \                     `?<Initializer for img_icon>`:
   \   0000004C   00000000           DC32 0H
   \                     `?<Initializer for OnRedraw>`:
   \   00000050   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for gui_methods_copy>`:
   \   00000054   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000064   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000074   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000084   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000094   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000A4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \                     `?<Initializer for header_icon>`:
   \   000000B4   744E0000           DC32 20084

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for sk>`:
   \   00000000   18000000           DC16 24, 0
   \   00000004   ........           DC32 `?<Constant "">`
   \   00000008   01000000           DC16 1, 0
   \   0000000C   ........           DC32 `?<Constant "\\315\\340\\347\\340\\344">`
   \   00000010   00000000           DC16 0, 0
   \   00000014   FFFFFFFF           DC32 -1

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for skt>`:
   \   00000000   ........0000       DC32 sk, 0
   \              0000        

   \                                 In segment DATA_C, align 1, align-sorted
   \                     `?<Constant "">`:
   \   00000000   00                 DC8 ""

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\315\\340\\347\\340\\344">`:
   \   00000000   CDE0E7E0E400       DC8 "\315\340\347\340\344"
   \   00000006   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\n\\n\\n\\n\\n\\nVK ELF\\napi vers...">`:
   \   00000000   0A0A0A0A0A0A       DC8 "\012\012\012\012\012\012VK ELF\012api version %t\012rev. %s"
   \              564B20454C46
   \              0A6170692076
   \              657273696F6E
   \              2025740A7265
   \              762E20257300
   \   00000024   4D6172203135       DC8 "Mar 15 2023"
   \              203230323300
   \   00000030   2573696D675C       DC8 "%simg\\%about.png"
   \              2561626F7574
   \              2E706E6700  
   \   00000041   000000             DC8 0, 0, 0
   \   00000044   2573696D675C       DC8 "%simg\\%about_h.png"
   \              2561626F7574
   \              5F682E706E67
   \              00          
   \   00000057   00                 DC8 0
    182          

   Maximum stack usage in bytes:

     Function      CSTACK
     --------      ------
     MyOnRedraw       12
     OpenAboutMenu   152
     gHook            16
     onKey             0
     proc3             0


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     percent_t                        16
     mmenusoftkeys                    12
     proc3                             4
     onKey                            68
     gHook                           232
     tv_desc                         184
     sk                               24
     skt                               8
     MyOnRedraw                       80
     OpenAboutMenu                   428
     ??DataTable1                      4
     ?<Initializer for tv_desc>      184
     ?<Initializer for sk>            24
     ?<Initializer for skt>            8
     ?<Constant "">                    1
     ?<Constant "\315\340\347\340\344">
                                       8
     ?<Constant "\n\n\n\n\n\nVK ELF\napi vers...">
                                      88
      Others                          68

 
 872 bytes in segment CODE
 125 bytes in segment DATA_C
 216 bytes in segment DATA_I
 216 bytes in segment DATA_ID
  12 bytes in segment INITTAB
 
 816 bytes of CODE  memory (+ 68 bytes shared)
 341 bytes of CONST memory
 216 bytes of DATA  memory

Errors: none
Warnings: 1
