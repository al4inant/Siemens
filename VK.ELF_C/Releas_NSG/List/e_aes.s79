//////////////////////////////////////////////////////////////////////////////
//                                                                           /
// IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION   17/Nov/2019  22:07:01 /
// Copyright 1999-2005 IAR Systems. All rights reserved.                     /
//                                                                           /
//    Cpu mode        =  interwork                                           /
//    Endian          =  little                                              /
//    Stack alignment =  4                                                   /
//    Source file     =  E:\Users\alfinant7\Documents\Siemens\alfinant\src_i /
//                       ar\openssl\crypto\evp\e_aes.c                       /
//    Command line    =  E:\Users\alfinant7\Documents\Siemens\alfinant\src_i /
//                       ar\openssl\crypto\evp\e_aes.c -D NEWSGOLD -D DEBUG  /
//                       -lCN E:\Users\alfinant7\Documents\Siemens\alfinant\ /
//                       src_iar\VK.ELF_C\Releas_NSG\List\ -la               /
//                       E:\Users\alfinant7\Documents\Siemens\alfinant\src_i /
//                       ar\VK.ELF_C\Releas_NSG\List\ -o                     /
//                       E:\Users\alfinant7\Documents\Siemens\alfinant\src_i /
//                       ar\VK.ELF_C\Releas_NSG\Obj\ -z9 --cpu_mode arm      /
//                       --endian little --cpu ARM926EJ-S --stack_align 4    /
//                       --interwork --diag_suppress Pe301 -e --fpu None     /
//                       --dlib_config E:\Users\alfinant7\Documents\Siemens\ /
//                       IAR\ARM\LIB\dl5tpainl8n.h -I                        /
//                       E:\Users\alfinant7\Documents\Siemens\IAR\ARM\INC\   /
//                       --inline_threshold=2                                /
//    List file       =  E:\Users\alfinant7\Documents\Siemens\alfinant\src_i /
//                       ar\VK.ELF_C\Releas_NSG\List\e_aes.s79               /
//                                                                           /
//                                                                           /
//////////////////////////////////////////////////////////////////////////////

        NAME e_aes

        RTMODEL "StackAlign4", "USED"
        RTMODEL "__cpu_mode", "__pcs__interwork"
        RTMODEL "__data_model", "absolute"
        RTMODEL "__dlib_file_descriptor", "0"
        RTMODEL "__endian", "little"
        RTMODEL "__rt_version", "6"

        RSEG CSTACK:DATA:NOROOT(2)

        MULTWEAK ??AES_cbc_encrypt??rA
        MULTWEAK ??AES_cfb128_encrypt??rA
        MULTWEAK ??AES_cfb1_encrypt??rA
        MULTWEAK ??AES_cfb8_encrypt??rA
        MULTWEAK ??AES_ecb_encrypt??rA
        MULTWEAK ??AES_ofb128_encrypt??rA
        MULTWEAK ??AES_set_decrypt_key??rA
        MULTWEAK ??AES_set_encrypt_key??rA
        MULTWEAK ??ERR_put_error??rA
        MULTWEAK ??EVP_aes_128_cbc??rT
        MULTWEAK ??EVP_aes_128_cfb128??rT
        MULTWEAK ??EVP_aes_128_cfb1??rT
        MULTWEAK ??EVP_aes_128_cfb8??rT
        MULTWEAK ??EVP_aes_128_ecb??rT
        MULTWEAK ??EVP_aes_128_ofb??rT
        MULTWEAK ??EVP_aes_192_cbc??rT
        MULTWEAK ??EVP_aes_192_cfb128??rT
        MULTWEAK ??EVP_aes_192_cfb1??rT
        MULTWEAK ??EVP_aes_192_cfb8??rT
        MULTWEAK ??EVP_aes_192_ecb??rT
        MULTWEAK ??EVP_aes_192_ofb??rT
        MULTWEAK ??EVP_aes_256_cbc??rT
        MULTWEAK ??EVP_aes_256_cfb128??rT
        MULTWEAK ??EVP_aes_256_cfb1??rT
        MULTWEAK ??EVP_aes_256_cfb8??rT
        MULTWEAK ??EVP_aes_256_ecb??rT
        MULTWEAK ??EVP_aes_256_ofb??rT
        PUBLIC EVP_aes_128_cbc
        FUNCTION EVP_aes_128_cbc,0203H
        PUBLIC EVP_aes_128_cfb1
        FUNCTION EVP_aes_128_cfb1,0203H
        PUBLIC EVP_aes_128_cfb128
        FUNCTION EVP_aes_128_cfb128,0203H
        PUBLIC EVP_aes_128_cfb8
        FUNCTION EVP_aes_128_cfb8,0203H
        PUBLIC EVP_aes_128_ecb
        FUNCTION EVP_aes_128_ecb,0203H
        PUBLIC EVP_aes_128_ofb
        FUNCTION EVP_aes_128_ofb,0203H
        PUBLIC EVP_aes_192_cbc
        FUNCTION EVP_aes_192_cbc,0203H
        PUBLIC EVP_aes_192_cfb1
        FUNCTION EVP_aes_192_cfb1,0203H
        PUBLIC EVP_aes_192_cfb128
        FUNCTION EVP_aes_192_cfb128,0203H
        PUBLIC EVP_aes_192_cfb8
        FUNCTION EVP_aes_192_cfb8,0203H
        PUBLIC EVP_aes_192_ecb
        FUNCTION EVP_aes_192_ecb,0203H
        PUBLIC EVP_aes_192_ofb
        FUNCTION EVP_aes_192_ofb,0203H
        PUBLIC EVP_aes_256_cbc
        FUNCTION EVP_aes_256_cbc,0203H
        PUBLIC EVP_aes_256_cfb1
        FUNCTION EVP_aes_256_cfb1,0203H
        PUBLIC EVP_aes_256_cfb128
        FUNCTION EVP_aes_256_cfb128,0203H
        PUBLIC EVP_aes_256_cfb8
        FUNCTION EVP_aes_256_cfb8,0203H
        PUBLIC EVP_aes_256_ecb
        FUNCTION EVP_aes_256_ecb,0203H
        PUBLIC EVP_aes_256_ofb
        FUNCTION EVP_aes_256_ofb,0203H
        FUNCTION aes_128_cbc_cipher,0603H
        LOCFRAME CSTACK, 12, STACK
        FUNCTION aes_128_cfb128_cipher,0603H
        LOCFRAME CSTACK, 16, STACK
        FUNCTION aes_128_cfb1_cipher,0603H
        LOCFRAME CSTACK, 16, STACK
        FUNCTION aes_128_cfb8_cipher,0603H
        LOCFRAME CSTACK, 16, STACK
        FUNCTION aes_128_ecb_cipher,0603H
        LOCFRAME CSTACK, 28, STACK
        FUNCTION aes_128_ofb_cipher,0603H
        LOCFRAME CSTACK, 12, STACK
        FUNCTION aes_192_cbc_cipher,0603H
        LOCFRAME CSTACK, 12, STACK
        FUNCTION aes_192_cfb128_cipher,0603H
        LOCFRAME CSTACK, 16, STACK
        FUNCTION aes_192_cfb1_cipher,0603H
        LOCFRAME CSTACK, 16, STACK
        FUNCTION aes_192_cfb8_cipher,0603H
        LOCFRAME CSTACK, 16, STACK
        FUNCTION aes_192_ecb_cipher,0603H
        LOCFRAME CSTACK, 28, STACK
        FUNCTION aes_192_ofb_cipher,0603H
        LOCFRAME CSTACK, 12, STACK
        FUNCTION aes_256_cbc_cipher,0603H
        LOCFRAME CSTACK, 12, STACK
        FUNCTION aes_256_cfb128_cipher,0603H
        LOCFRAME CSTACK, 16, STACK
        FUNCTION aes_256_cfb1_cipher,0603H
        LOCFRAME CSTACK, 16, STACK
        FUNCTION aes_256_cfb8_cipher,0603H
        LOCFRAME CSTACK, 16, STACK
        FUNCTION aes_256_ecb_cipher,0603H
        LOCFRAME CSTACK, 28, STACK
        FUNCTION aes_256_ofb_cipher,0603H
        LOCFRAME CSTACK, 12, STACK
        FUNCTION aes_init_key,0603H
        LOCFRAME CSTACK, 12, STACK
        
        CFI Names cfiNames0
        CFI StackFrame CFA R13 HUGEDATA
        CFI Resource R0:32, R1:32, R2:32, R3:32, R4:32, R5:32, R6:32, R7:32
        CFI Resource R8:32, R9:32, R10:32, R11:32, R12:32, CPSR:32, R13:32
        CFI Resource R14:32, SPSR:32
        CFI VirtualResource ?RET:32
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 2
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon0
        
        
        CFI Common cfiCommon1 Using cfiNames0
        CFI CodeAlign 4
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon1
        
AES_cbc_encrypt     SYMBOL "AES_cbc_encrypt"
AES_cfb128_encrypt  SYMBOL "AES_cfb128_encrypt"
AES_cfb1_encrypt    SYMBOL "AES_cfb1_encrypt"
AES_cfb8_encrypt    SYMBOL "AES_cfb8_encrypt"
AES_ecb_encrypt     SYMBOL "AES_ecb_encrypt"
AES_ofb128_encrypt  SYMBOL "AES_ofb128_encrypt"
AES_set_decrypt_key SYMBOL "AES_set_decrypt_key"
AES_set_encrypt_key SYMBOL "AES_set_encrypt_key"
ERR_put_error       SYMBOL "ERR_put_error"
??AES_cbc_encrypt??rA SYMBOL "??rA", AES_cbc_encrypt
??AES_cfb128_encrypt??rA SYMBOL "??rA", AES_cfb128_encrypt
??AES_cfb1_encrypt??rA SYMBOL "??rA", AES_cfb1_encrypt
??AES_cfb8_encrypt??rA SYMBOL "??rA", AES_cfb8_encrypt
??AES_ecb_encrypt??rA SYMBOL "??rA", AES_ecb_encrypt
??AES_ofb128_encrypt??rA SYMBOL "??rA", AES_ofb128_encrypt
??AES_set_decrypt_key??rA SYMBOL "??rA", AES_set_decrypt_key
??AES_set_encrypt_key??rA SYMBOL "??rA", AES_set_encrypt_key
??ERR_put_error??rA SYMBOL "??rA", ERR_put_error
EVP_aes_128_cbc     SYMBOL "EVP_aes_128_cbc"
??EVP_aes_128_cbc??rT SYMBOL "??rT", EVP_aes_128_cbc
EVP_aes_128_cfb128  SYMBOL "EVP_aes_128_cfb128"
??EVP_aes_128_cfb128??rT SYMBOL "??rT", EVP_aes_128_cfb128
EVP_aes_128_cfb1    SYMBOL "EVP_aes_128_cfb1"
??EVP_aes_128_cfb1??rT SYMBOL "??rT", EVP_aes_128_cfb1
EVP_aes_128_cfb8    SYMBOL "EVP_aes_128_cfb8"
??EVP_aes_128_cfb8??rT SYMBOL "??rT", EVP_aes_128_cfb8
EVP_aes_128_ecb     SYMBOL "EVP_aes_128_ecb"
??EVP_aes_128_ecb??rT SYMBOL "??rT", EVP_aes_128_ecb
EVP_aes_128_ofb     SYMBOL "EVP_aes_128_ofb"
??EVP_aes_128_ofb??rT SYMBOL "??rT", EVP_aes_128_ofb
EVP_aes_192_cbc     SYMBOL "EVP_aes_192_cbc"
??EVP_aes_192_cbc??rT SYMBOL "??rT", EVP_aes_192_cbc
EVP_aes_192_cfb128  SYMBOL "EVP_aes_192_cfb128"
??EVP_aes_192_cfb128??rT SYMBOL "??rT", EVP_aes_192_cfb128
EVP_aes_192_cfb1    SYMBOL "EVP_aes_192_cfb1"
??EVP_aes_192_cfb1??rT SYMBOL "??rT", EVP_aes_192_cfb1
EVP_aes_192_cfb8    SYMBOL "EVP_aes_192_cfb8"
??EVP_aes_192_cfb8??rT SYMBOL "??rT", EVP_aes_192_cfb8
EVP_aes_192_ecb     SYMBOL "EVP_aes_192_ecb"
??EVP_aes_192_ecb??rT SYMBOL "??rT", EVP_aes_192_ecb
EVP_aes_192_ofb     SYMBOL "EVP_aes_192_ofb"
??EVP_aes_192_ofb??rT SYMBOL "??rT", EVP_aes_192_ofb
EVP_aes_256_cbc     SYMBOL "EVP_aes_256_cbc"
??EVP_aes_256_cbc??rT SYMBOL "??rT", EVP_aes_256_cbc
EVP_aes_256_cfb128  SYMBOL "EVP_aes_256_cfb128"
??EVP_aes_256_cfb128??rT SYMBOL "??rT", EVP_aes_256_cfb128
EVP_aes_256_cfb1    SYMBOL "EVP_aes_256_cfb1"
??EVP_aes_256_cfb1??rT SYMBOL "??rT", EVP_aes_256_cfb1
EVP_aes_256_cfb8    SYMBOL "EVP_aes_256_cfb8"
??EVP_aes_256_cfb8??rT SYMBOL "??rT", EVP_aes_256_cfb8
EVP_aes_256_ecb     SYMBOL "EVP_aes_256_ecb"
??EVP_aes_256_ecb??rT SYMBOL "??rT", EVP_aes_256_ecb
EVP_aes_256_ofb     SYMBOL "EVP_aes_256_ofb"
??EVP_aes_256_ofb??rT SYMBOL "??rT", EVP_aes_256_ofb

        EXTERN AES_cbc_encrypt
        FUNCTION AES_cbc_encrypt,0202H
        EXTERN AES_cfb128_encrypt
        FUNCTION AES_cfb128_encrypt,0202H
        EXTERN AES_cfb1_encrypt
        FUNCTION AES_cfb1_encrypt,0202H
        EXTERN AES_cfb8_encrypt
        FUNCTION AES_cfb8_encrypt,0202H
        EXTERN AES_ecb_encrypt
        FUNCTION AES_ecb_encrypt,0202H
        EXTERN AES_ofb128_encrypt
        FUNCTION AES_ofb128_encrypt,0202H
        EXTERN AES_set_decrypt_key
        FUNCTION AES_set_decrypt_key,0202H
        EXTERN AES_set_encrypt_key
        FUNCTION AES_set_encrypt_key,0202H
        EXTERN ERR_put_error
        FUNCTION ERR_put_error,0202H


        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock0 Using cfiCommon0
        CFI NoFunction
        THUMB
??aes_128_cbc_cipher??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock0
        REQUIRE aes_128_cbc_cipher

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock1 Using cfiCommon1
        CFI Function aes_128_cbc_cipher
        ARM
aes_128_cbc_cipher:
        B        ?Subroutine37
        CFI EndBlock cfiBlock1

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock2 Using cfiCommon0
        CFI NoFunction
        THUMB
??aes_128_cfb128_cipher??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock2
        REQUIRE aes_128_cfb128_cipher

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock3 Using cfiCommon1
        CFI Function aes_128_cfb128_cipher
        ARM
aes_128_cfb128_cipher:
        B        ?Subroutine38
        CFI EndBlock cfiBlock3

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock4 Using cfiCommon0
        CFI NoFunction
        THUMB
??aes_128_ecb_cipher??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock4
        REQUIRE aes_128_ecb_cipher

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock5 Using cfiCommon1
        CFI Function aes_128_ecb_cipher
        ARM
aes_128_ecb_cipher:
        PUSH     {R4-R9,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R9 Frame(CFA, -8)
        CFI R8 Frame(CFA, -12)
        CFI R7 Frame(CFA, -16)
        CFI R6 Frame(CFA, -20)
        CFI R5 Frame(CFA, -24)
        CFI R4 Frame(CFA, -28)
        CFI CFA R13+28
        MOV      R4,R0
        LDR      R0,[R4, #+0]
        MOV      R5,R1
        LDR      R8,[R0, #+4]
        MOV      R6,R2
        CMP      R3,R8
        BCS      ??aes_128_ecb_cipher_0
??aes_128_ecb_cipher_1:
        B        ?Subroutine39
??aes_128_ecb_cipher_0:
        SUB      R7,R3,R8
        MOV      R9,#+0
??aes_128_ecb_cipher_2:
        CMP      R7,R9
        BCC      ??aes_128_ecb_cipher_1
        LDR      R3,[R4, #+8]
        LDR      R2,[R4, #+96]
        ADD      R1,R9,R5
        ADD      R0,R9,R6
        _BLF     AES_ecb_encrypt,??AES_ecb_encrypt??rA
        ADD      R9,R8,R9
        B        ??aes_128_ecb_cipher_2
        CFI EndBlock cfiBlock5

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock6 Using cfiCommon0
        CFI NoFunction
        THUMB
??aes_128_ofb_cipher??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock6
        REQUIRE aes_128_ofb_cipher

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock7 Using cfiCommon1
        CFI Function aes_128_ofb_cipher
        ARM
aes_128_ofb_cipher:
        PUSH     {LR}
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+4
        MOV      R12,R0
        MOV      R0,R2
        MOV      R2,R3
        ADD      R3,R12,#+80
        PUSH     {R3}
        CFI CFA R13+8
        ADD      R3,R12,#+32
        PUSH     {R3}
        CFI CFA R13+12
        LDR      R3,[R12, #+96]
        _BLF     AES_ofb128_encrypt,??AES_ofb128_encrypt??rA
        B        ??Subroutine37_0
        CFI EndBlock cfiBlock7

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock8 Using cfiCommon0
        CFI NoFunction
        THUMB
??EVP_aes_128_cbc??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock8
        REQUIRE EVP_aes_128_cbc

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock9 Using cfiCommon1
        CFI Function EVP_aes_128_cbc
        ARM
EVP_aes_128_cbc:
        LDR      R0,??EVP_aes_128_cbc_0  ;; aes_128_cbc
        BX       LR               ;; return
        DATA
??EVP_aes_128_cbc_0:
        DC32     aes_128_cbc
        CFI EndBlock cfiBlock9

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock10 Using cfiCommon0
        CFI NoFunction
        THUMB
??EVP_aes_128_cfb128??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock10
        REQUIRE EVP_aes_128_cfb128

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock11 Using cfiCommon1
        CFI Function EVP_aes_128_cfb128
        ARM
EVP_aes_128_cfb128:
        LDR      R0,??EVP_aes_128_cfb128_0  ;; aes_128_cfb128
        BX       LR               ;; return
        DATA
??EVP_aes_128_cfb128_0:
        DC32     aes_128_cfb128
        CFI EndBlock cfiBlock11

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock12 Using cfiCommon0
        CFI NoFunction
        THUMB
??EVP_aes_128_ofb??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock12
        REQUIRE EVP_aes_128_ofb

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock13 Using cfiCommon1
        CFI Function EVP_aes_128_ofb
        ARM
EVP_aes_128_ofb:
        LDR      R0,??EVP_aes_128_ofb_0  ;; aes_128_ofb
        BX       LR               ;; return
        DATA
??EVP_aes_128_ofb_0:
        DC32     aes_128_ofb
        CFI EndBlock cfiBlock13

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock14 Using cfiCommon0
        CFI NoFunction
        THUMB
??EVP_aes_128_ecb??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock14
        REQUIRE EVP_aes_128_ecb

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock15 Using cfiCommon1
        CFI Function EVP_aes_128_ecb
        ARM
EVP_aes_128_ecb:
        LDR      R0,??EVP_aes_128_ecb_0  ;; aes_128_ecb
        BX       LR               ;; return
        DATA
??EVP_aes_128_ecb_0:
        DC32     aes_128_ecb
        CFI EndBlock cfiBlock15

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock16 Using cfiCommon0
        CFI NoFunction
        THUMB
??aes_192_cbc_cipher??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock16
        REQUIRE aes_192_cbc_cipher

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant "E:\\\\Users\\\\alfinant7\\\\Do...">`:
        DATA
        DC8 45H, 3AH, 5CH, 55H, 73H, 65H, 72H, 73H
        DC8 5CH, 61H, 6CH, 66H, 69H, 6EH, 61H, 6EH
        DC8 74H, 37H, 5CH, 44H, 6FH, 63H, 75H, 6DH
        DC8 65H, 6EH, 74H, 73H, 5CH, 53H, 69H, 65H
        DC8 6DH, 65H, 6EH, 73H, 5CH, 61H, 6CH, 66H
        DC8 69H, 6EH, 61H, 6EH, 74H, 5CH, 73H, 72H
        DC8 63H, 5FH, 69H, 61H, 72H, 5CH, 6FH, 70H
        DC8 65H, 6EH, 73H, 73H, 6CH, 5CH, 63H, 72H
        DC8 79H, 70H, 74H, 6FH, 5CH, 65H, 76H, 70H
        DC8 5CH, 65H, 5FH, 61H, 65H, 73H, 2EH, 63H
        DC8 0
        DC8 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
aes_128_cbc:
        DATA
        DC32 419, 16, 16, 16, 1026, aes_init_key, aes_128_cbc_cipher, 0H, 244
        DC32 0A0E8F215H, 0A0E8F143H, 0H, 0H

        RSEG DATA_C:CONST:SORT:NOROOT(2)
aes_128_cfb128:
        DATA
        DC32 421, 1, 16, 16, 1027, aes_init_key, aes_128_cfb128_cipher, 0H, 244
        DC32 0A0E8F215H, 0A0E8F143H, 0H, 0H

        RSEG DATA_C:CONST:SORT:NOROOT(2)
aes_128_ofb:
        DATA
        DC32 420, 1, 16, 16, 1028, aes_init_key, aes_128_ofb_cipher, 0H, 244
        DC32 0A0E8F215H, 0A0E8F143H, 0H, 0H

        RSEG DATA_C:CONST:SORT:NOROOT(2)
aes_128_ecb:
        DATA
        DC32 418, 16, 16, 16, 1025, aes_init_key, aes_128_ecb_cipher, 0H, 244
        DC32 0A0E8F215H, 0A0E8F143H, 0H, 0H

        RSEG CODE:CODE:NOROOT(2)
        ARM
aes_192_cbc_cipher:
        REQUIRE ?Subroutine37
        ;; // Fall through to label ?Subroutine37

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock17 Using cfiCommon1
        CFI NoFunction
        ARM
?Subroutine37:
        PUSH     {LR}
        CFI CFA R13+4
        CFI ?RET Frame(CFA, -4)
        MOV      R12,R0
        MOV      R0,R2
        MOV      R2,R3
        LDR      R3,[R12, #+8]
        PUSH     {R3}
        CFI CFA R13+8
        ADD      R3,R12,#+32
        PUSH     {R3}
        CFI CFA R13+12
        LDR      R3,[R12, #+96]
        _BLF     AES_cbc_encrypt,??AES_cbc_encrypt??rA
??Subroutine37_0:
        MOV      R0,#+1
        POP      {R1,R2,PC}       ;; return
        CFI EndBlock cfiBlock17

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock18 Using cfiCommon0
        CFI NoFunction
        THUMB
??aes_192_cfb128_cipher??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock18
        REQUIRE aes_192_cfb128_cipher

        RSEG CODE:CODE:NOROOT(2)
        ARM
aes_192_cfb128_cipher:
        REQUIRE ?Subroutine38
        ;; // Fall through to label ?Subroutine38

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock19 Using cfiCommon1
        CFI NoFunction
        ARM
?Subroutine38:
        PUSH     {LR}
        CFI CFA R13+4
        CFI ?RET Frame(CFA, -4)
        MOV      R12,R0
        MOV      R0,R2
        MOV      R2,R3
        LDR      R3,[R12, #+8]
        PUSH     {R3}
        CFI CFA R13+8
        ADD      R3,R12,#+80
        PUSH     {R3}
        CFI CFA R13+12
        ADD      R3,R12,#+32
        PUSH     {R3}
        CFI CFA R13+16
        LDR      R3,[R12, #+96]
        _BLF     AES_cfb128_encrypt,??AES_cfb128_encrypt??rA
??Subroutine38_0:
        MOV      R0,#+1
        POP      {R1-R3,PC}       ;; return
        CFI EndBlock cfiBlock19

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock20 Using cfiCommon0
        CFI NoFunction
        THUMB
??aes_192_ecb_cipher??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock20
        REQUIRE aes_192_ecb_cipher

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock21 Using cfiCommon1
        CFI Function aes_192_ecb_cipher
        ARM
aes_192_ecb_cipher:
        PUSH     {R4-R9,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R9 Frame(CFA, -8)
        CFI R8 Frame(CFA, -12)
        CFI R7 Frame(CFA, -16)
        CFI R6 Frame(CFA, -20)
        CFI R5 Frame(CFA, -24)
        CFI R4 Frame(CFA, -28)
        CFI CFA R13+28
        MOV      R4,R0
        LDR      R0,[R4, #+0]
        MOV      R5,R1
        LDR      R8,[R0, #+4]
        MOV      R6,R2
        CMP      R3,R8
        BCS      ??aes_192_ecb_cipher_0
??aes_192_ecb_cipher_1:
        B        ?Subroutine39
??aes_192_ecb_cipher_0:
        SUB      R7,R3,R8
        MOV      R9,#+0
??aes_192_ecb_cipher_2:
        CMP      R7,R9
        BCC      ??aes_192_ecb_cipher_1
        LDR      R3,[R4, #+8]
        LDR      R2,[R4, #+96]
        ADD      R1,R9,R5
        ADD      R0,R9,R6
        _BLF     AES_ecb_encrypt,??AES_ecb_encrypt??rA
        ADD      R9,R8,R9
        B        ??aes_192_ecb_cipher_2
        CFI EndBlock cfiBlock21

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock22 Using cfiCommon1
        CFI NoFunction
        CFI CFA R13+28
        CFI R4 Frame(CFA, -28)
        CFI R5 Frame(CFA, -24)
        CFI R6 Frame(CFA, -20)
        CFI R7 Frame(CFA, -16)
        CFI R8 Frame(CFA, -12)
        CFI R9 Frame(CFA, -8)
        CFI ?RET Frame(CFA, -4)
        ARM
?Subroutine39:
        MOV      R0,#+1
        POP      {R4-R9,PC}       ;; return
        CFI EndBlock cfiBlock22

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock23 Using cfiCommon0
        CFI NoFunction
        THUMB
??aes_192_ofb_cipher??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock23
        REQUIRE aes_192_ofb_cipher

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock24 Using cfiCommon1
        CFI Function aes_192_ofb_cipher
        ARM
aes_192_ofb_cipher:
        PUSH     {LR}
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+4
        MOV      R12,R0
        MOV      R0,R2
        MOV      R2,R3
        ADD      R3,R12,#+80
        PUSH     {R3}
        CFI CFA R13+8
        ADD      R3,R12,#+32
        PUSH     {R3}
        CFI CFA R13+12
        LDR      R3,[R12, #+96]
        _BLF     AES_ofb128_encrypt,??AES_ofb128_encrypt??rA
        B        ??Subroutine37_0
        CFI EndBlock cfiBlock24

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock25 Using cfiCommon0
        CFI NoFunction
        THUMB
??EVP_aes_192_cbc??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock25
        REQUIRE EVP_aes_192_cbc

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock26 Using cfiCommon1
        CFI Function EVP_aes_192_cbc
        ARM
EVP_aes_192_cbc:
        LDR      R0,??EVP_aes_192_cbc_0  ;; aes_192_cbc
        BX       LR               ;; return
        DATA
??EVP_aes_192_cbc_0:
        DC32     aes_192_cbc
        CFI EndBlock cfiBlock26

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock27 Using cfiCommon0
        CFI NoFunction
        THUMB
??EVP_aes_192_cfb128??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock27
        REQUIRE EVP_aes_192_cfb128

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock28 Using cfiCommon1
        CFI Function EVP_aes_192_cfb128
        ARM
EVP_aes_192_cfb128:
        LDR      R0,??EVP_aes_192_cfb128_0  ;; aes_192_cfb128
        BX       LR               ;; return
        DATA
??EVP_aes_192_cfb128_0:
        DC32     aes_192_cfb128
        CFI EndBlock cfiBlock28

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock29 Using cfiCommon0
        CFI NoFunction
        THUMB
??EVP_aes_192_ofb??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock29
        REQUIRE EVP_aes_192_ofb

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock30 Using cfiCommon1
        CFI Function EVP_aes_192_ofb
        ARM
EVP_aes_192_ofb:
        LDR      R0,??EVP_aes_192_ofb_0  ;; aes_192_ofb
        BX       LR               ;; return
        DATA
??EVP_aes_192_ofb_0:
        DC32     aes_192_ofb
        CFI EndBlock cfiBlock30

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock31 Using cfiCommon0
        CFI NoFunction
        THUMB
??EVP_aes_192_ecb??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock31
        REQUIRE EVP_aes_192_ecb

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock32 Using cfiCommon1
        CFI Function EVP_aes_192_ecb
        ARM
EVP_aes_192_ecb:
        LDR      R0,??EVP_aes_192_ecb_0  ;; aes_192_ecb
        BX       LR               ;; return
        DATA
??EVP_aes_192_ecb_0:
        DC32     aes_192_ecb
        CFI EndBlock cfiBlock32

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock33 Using cfiCommon0
        CFI NoFunction
        THUMB
??aes_256_cbc_cipher??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock33
        REQUIRE aes_256_cbc_cipher

        RSEG DATA_C:CONST:SORT:NOROOT(2)
aes_192_cbc:
        DATA
        DC32 423, 16, 24, 16, 1026, aes_init_key, aes_192_cbc_cipher, 0H, 244
        DC32 0A0E8F215H, 0A0E8F143H, 0H, 0H

        RSEG DATA_C:CONST:SORT:NOROOT(2)
aes_192_cfb128:
        DATA
        DC32 425, 1, 24, 16, 1027, aes_init_key, aes_192_cfb128_cipher, 0H, 244
        DC32 0A0E8F215H, 0A0E8F143H, 0H, 0H

        RSEG DATA_C:CONST:SORT:NOROOT(2)
aes_192_ofb:
        DATA
        DC32 424, 1, 24, 16, 1028, aes_init_key, aes_192_ofb_cipher, 0H, 244
        DC32 0A0E8F215H, 0A0E8F143H, 0H, 0H

        RSEG DATA_C:CONST:SORT:NOROOT(2)
aes_192_ecb:
        DATA
        DC32 422, 16, 24, 16, 1025, aes_init_key, aes_192_ecb_cipher, 0H, 244
        DC32 0A0E8F215H, 0A0E8F143H, 0H, 0H

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock34 Using cfiCommon1
        CFI Function aes_256_cbc_cipher
        ARM
aes_256_cbc_cipher:
        B        ?Subroutine37
        CFI EndBlock cfiBlock34

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock35 Using cfiCommon0
        CFI NoFunction
        THUMB
??aes_256_cfb128_cipher??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock35
        REQUIRE aes_256_cfb128_cipher

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock36 Using cfiCommon1
        CFI Function aes_256_cfb128_cipher
        ARM
aes_256_cfb128_cipher:
        B        ?Subroutine38
        CFI EndBlock cfiBlock36

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock37 Using cfiCommon0
        CFI NoFunction
        THUMB
??aes_256_ecb_cipher??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock37
        REQUIRE aes_256_ecb_cipher

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock38 Using cfiCommon1
        CFI Function aes_256_ecb_cipher
        ARM
aes_256_ecb_cipher:
        PUSH     {R4-R9,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R9 Frame(CFA, -8)
        CFI R8 Frame(CFA, -12)
        CFI R7 Frame(CFA, -16)
        CFI R6 Frame(CFA, -20)
        CFI R5 Frame(CFA, -24)
        CFI R4 Frame(CFA, -28)
        CFI CFA R13+28
        MOV      R4,R0
        LDR      R0,[R4, #+0]
        MOV      R5,R1
        LDR      R8,[R0, #+4]
        MOV      R6,R2
        CMP      R3,R8
        BCS      ??aes_256_ecb_cipher_0
??aes_256_ecb_cipher_1:
        B        ?Subroutine39
??aes_256_ecb_cipher_0:
        SUB      R7,R3,R8
        MOV      R9,#+0
??aes_256_ecb_cipher_2:
        CMP      R7,R9
        BCC      ??aes_256_ecb_cipher_1
        LDR      R3,[R4, #+8]
        LDR      R2,[R4, #+96]
        ADD      R1,R9,R5
        ADD      R0,R9,R6
        _BLF     AES_ecb_encrypt,??AES_ecb_encrypt??rA
        ADD      R9,R8,R9
        B        ??aes_256_ecb_cipher_2
        CFI EndBlock cfiBlock38

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock39 Using cfiCommon0
        CFI NoFunction
        THUMB
??aes_256_ofb_cipher??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock39
        REQUIRE aes_256_ofb_cipher

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock40 Using cfiCommon1
        CFI Function aes_256_ofb_cipher
        ARM
aes_256_ofb_cipher:
        PUSH     {LR}
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+4
        MOV      R12,R0
        MOV      R0,R2
        MOV      R2,R3
        ADD      R3,R12,#+80
        PUSH     {R3}
        CFI CFA R13+8
        ADD      R3,R12,#+32
        PUSH     {R3}
        CFI CFA R13+12
        LDR      R3,[R12, #+96]
        _BLF     AES_ofb128_encrypt,??AES_ofb128_encrypt??rA
        B        ??Subroutine37_0
        CFI EndBlock cfiBlock40

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock41 Using cfiCommon0
        CFI NoFunction
        THUMB
??EVP_aes_256_cbc??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock41
        REQUIRE EVP_aes_256_cbc

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock42 Using cfiCommon1
        CFI Function EVP_aes_256_cbc
        ARM
EVP_aes_256_cbc:
        LDR      R0,??EVP_aes_256_cbc_0  ;; aes_256_cbc
        BX       LR               ;; return
        DATA
??EVP_aes_256_cbc_0:
        DC32     aes_256_cbc
        CFI EndBlock cfiBlock42

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock43 Using cfiCommon0
        CFI NoFunction
        THUMB
??EVP_aes_256_cfb128??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock43
        REQUIRE EVP_aes_256_cfb128

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock44 Using cfiCommon1
        CFI Function EVP_aes_256_cfb128
        ARM
EVP_aes_256_cfb128:
        LDR      R0,??EVP_aes_256_cfb128_0  ;; aes_256_cfb128
        BX       LR               ;; return
        DATA
??EVP_aes_256_cfb128_0:
        DC32     aes_256_cfb128
        CFI EndBlock cfiBlock44

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock45 Using cfiCommon0
        CFI NoFunction
        THUMB
??EVP_aes_256_ofb??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock45
        REQUIRE EVP_aes_256_ofb

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock46 Using cfiCommon1
        CFI Function EVP_aes_256_ofb
        ARM
EVP_aes_256_ofb:
        LDR      R0,??EVP_aes_256_ofb_0  ;; aes_256_ofb
        BX       LR               ;; return
        DATA
??EVP_aes_256_ofb_0:
        DC32     aes_256_ofb
        CFI EndBlock cfiBlock46

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock47 Using cfiCommon0
        CFI NoFunction
        THUMB
??EVP_aes_256_ecb??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock47
        REQUIRE EVP_aes_256_ecb

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock48 Using cfiCommon1
        CFI Function EVP_aes_256_ecb
        ARM
EVP_aes_256_ecb:
        LDR      R0,??EVP_aes_256_ecb_0  ;; aes_256_ecb
        BX       LR               ;; return
        DATA
??EVP_aes_256_ecb_0:
        DC32     aes_256_ecb
        CFI EndBlock cfiBlock48

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock49 Using cfiCommon0
        CFI NoFunction
        THUMB
??aes_128_cfb1_cipher??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock49
        REQUIRE aes_128_cfb1_cipher

        RSEG DATA_C:CONST:SORT:NOROOT(2)
aes_256_cbc:
        DATA
        DC32 427, 16, 32, 16, 1026, aes_init_key, aes_256_cbc_cipher, 0H, 244
        DC32 0A0E8F215H, 0A0E8F143H, 0H, 0H

        RSEG DATA_C:CONST:SORT:NOROOT(2)
aes_256_cfb128:
        DATA
        DC32 429, 1, 32, 16, 1027, aes_init_key, aes_256_cfb128_cipher, 0H, 244
        DC32 0A0E8F215H, 0A0E8F143H, 0H, 0H

        RSEG DATA_C:CONST:SORT:NOROOT(2)
aes_256_ofb:
        DATA
        DC32 428, 1, 32, 16, 1028, aes_init_key, aes_256_ofb_cipher, 0H, 244
        DC32 0A0E8F215H, 0A0E8F143H, 0H, 0H

        RSEG DATA_C:CONST:SORT:NOROOT(2)
aes_256_ecb:
        DATA
        DC32 426, 16, 32, 16, 1025, aes_init_key, aes_256_ecb_cipher, 0H, 244
        DC32 0A0E8F215H, 0A0E8F143H, 0H, 0H

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock50 Using cfiCommon1
        CFI Function aes_128_cfb1_cipher
        ARM
aes_128_cfb1_cipher:
        PUSH     {LR}
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+4
        MOV      R12,R0
        MOV      R0,R2
        MOV      R2,R3
        LDR      R3,[R12, #+8]
        PUSH     {R3}
        CFI CFA R13+8
        ADD      R3,R12,#+80
        PUSH     {R3}
        CFI CFA R13+12
        ADD      R3,R12,#+32
        PUSH     {R3}
        CFI CFA R13+16
        LDR      R3,[R12, #+96]
        _BLF     AES_cfb1_encrypt,??AES_cfb1_encrypt??rA
        B        ??Subroutine38_0
        CFI EndBlock cfiBlock50

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock51 Using cfiCommon0
        CFI NoFunction
        THUMB
??EVP_aes_128_cfb1??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock51
        REQUIRE EVP_aes_128_cfb1

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock52 Using cfiCommon1
        CFI Function EVP_aes_128_cfb1
        ARM
EVP_aes_128_cfb1:
        LDR      R0,??EVP_aes_128_cfb1_0  ;; aes_128_cfb1
        BX       LR               ;; return
        DATA
??EVP_aes_128_cfb1_0:
        DC32     aes_128_cfb1
        CFI EndBlock cfiBlock52

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock53 Using cfiCommon0
        CFI NoFunction
        THUMB
??aes_192_cfb1_cipher??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock53
        REQUIRE aes_192_cfb1_cipher

        RSEG DATA_C:CONST:SORT:NOROOT(2)
aes_128_cfb1:
        DATA
        DC32 650, 1, 16, 16, 1027, aes_init_key, aes_128_cfb1_cipher, 0H, 244
        DC32 0A0E8F215H, 0A0E8F143H, 0H, 0H

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock54 Using cfiCommon1
        CFI Function aes_192_cfb1_cipher
        ARM
aes_192_cfb1_cipher:
        PUSH     {LR}
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+4
        MOV      R12,R0
        MOV      R0,R2
        MOV      R2,R3
        LDR      R3,[R12, #+8]
        PUSH     {R3}
        CFI CFA R13+8
        ADD      R3,R12,#+80
        PUSH     {R3}
        CFI CFA R13+12
        ADD      R3,R12,#+32
        PUSH     {R3}
        CFI CFA R13+16
        LDR      R3,[R12, #+96]
        _BLF     AES_cfb1_encrypt,??AES_cfb1_encrypt??rA
        B        ??Subroutine38_0
        CFI EndBlock cfiBlock54

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock55 Using cfiCommon0
        CFI NoFunction
        THUMB
??EVP_aes_192_cfb1??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock55
        REQUIRE EVP_aes_192_cfb1

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock56 Using cfiCommon1
        CFI Function EVP_aes_192_cfb1
        ARM
EVP_aes_192_cfb1:
        LDR      R0,??EVP_aes_192_cfb1_0  ;; aes_192_cfb1
        BX       LR               ;; return
        DATA
??EVP_aes_192_cfb1_0:
        DC32     aes_192_cfb1
        CFI EndBlock cfiBlock56

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock57 Using cfiCommon0
        CFI NoFunction
        THUMB
??aes_256_cfb1_cipher??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock57
        REQUIRE aes_256_cfb1_cipher

        RSEG DATA_C:CONST:SORT:NOROOT(2)
aes_192_cfb1:
        DATA
        DC32 651, 1, 24, 16, 1027, aes_init_key, aes_192_cfb1_cipher, 0H, 244
        DC32 0A0E8F215H, 0A0E8F143H, 0H, 0H

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock58 Using cfiCommon1
        CFI Function aes_256_cfb1_cipher
        ARM
aes_256_cfb1_cipher:
        PUSH     {LR}
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+4
        MOV      R12,R0
        MOV      R0,R2
        MOV      R2,R3
        LDR      R3,[R12, #+8]
        PUSH     {R3}
        CFI CFA R13+8
        ADD      R3,R12,#+80
        PUSH     {R3}
        CFI CFA R13+12
        ADD      R3,R12,#+32
        PUSH     {R3}
        CFI CFA R13+16
        LDR      R3,[R12, #+96]
        _BLF     AES_cfb1_encrypt,??AES_cfb1_encrypt??rA
        B        ??Subroutine38_0
        CFI EndBlock cfiBlock58

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock59 Using cfiCommon0
        CFI NoFunction
        THUMB
??EVP_aes_256_cfb1??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock59
        REQUIRE EVP_aes_256_cfb1

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock60 Using cfiCommon1
        CFI Function EVP_aes_256_cfb1
        ARM
EVP_aes_256_cfb1:
        LDR      R0,??EVP_aes_256_cfb1_0  ;; aes_256_cfb1
        BX       LR               ;; return
        DATA
??EVP_aes_256_cfb1_0:
        DC32     aes_256_cfb1
        CFI EndBlock cfiBlock60

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock61 Using cfiCommon0
        CFI NoFunction
        THUMB
??aes_128_cfb8_cipher??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock61
        REQUIRE aes_128_cfb8_cipher

        RSEG DATA_C:CONST:SORT:NOROOT(2)
aes_256_cfb1:
        DATA
        DC32 652, 1, 32, 16, 1027, aes_init_key, aes_256_cfb1_cipher, 0H, 244
        DC32 0A0E8F215H, 0A0E8F143H, 0H, 0H

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock62 Using cfiCommon1
        CFI Function aes_128_cfb8_cipher
        ARM
aes_128_cfb8_cipher:
        PUSH     {LR}
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+4
        MOV      R12,R0
        MOV      R0,R2
        MOV      R2,R3
        LDR      R3,[R12, #+8]
        PUSH     {R3}
        CFI CFA R13+8
        ADD      R3,R12,#+80
        PUSH     {R3}
        CFI CFA R13+12
        ADD      R3,R12,#+32
        PUSH     {R3}
        CFI CFA R13+16
        LDR      R3,[R12, #+96]
        _BLF     AES_cfb8_encrypt,??AES_cfb8_encrypt??rA
        B        ??Subroutine38_0
        CFI EndBlock cfiBlock62

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock63 Using cfiCommon0
        CFI NoFunction
        THUMB
??EVP_aes_128_cfb8??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock63
        REQUIRE EVP_aes_128_cfb8

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock64 Using cfiCommon1
        CFI Function EVP_aes_128_cfb8
        ARM
EVP_aes_128_cfb8:
        LDR      R0,??EVP_aes_128_cfb8_0  ;; aes_128_cfb8
        BX       LR               ;; return
        DATA
??EVP_aes_128_cfb8_0:
        DC32     aes_128_cfb8
        CFI EndBlock cfiBlock64

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock65 Using cfiCommon0
        CFI NoFunction
        THUMB
??aes_192_cfb8_cipher??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock65
        REQUIRE aes_192_cfb8_cipher

        RSEG DATA_C:CONST:SORT:NOROOT(2)
aes_128_cfb8:
        DATA
        DC32 653, 1, 16, 16, 1027, aes_init_key, aes_128_cfb8_cipher, 0H, 244
        DC32 0A0E8F215H, 0A0E8F143H, 0H, 0H

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock66 Using cfiCommon1
        CFI Function aes_192_cfb8_cipher
        ARM
aes_192_cfb8_cipher:
        PUSH     {LR}
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+4
        MOV      R12,R0
        MOV      R0,R2
        MOV      R2,R3
        LDR      R3,[R12, #+8]
        PUSH     {R3}
        CFI CFA R13+8
        ADD      R3,R12,#+80
        PUSH     {R3}
        CFI CFA R13+12
        ADD      R3,R12,#+32
        PUSH     {R3}
        CFI CFA R13+16
        LDR      R3,[R12, #+96]
        _BLF     AES_cfb8_encrypt,??AES_cfb8_encrypt??rA
        B        ??Subroutine38_0
        CFI EndBlock cfiBlock66

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock67 Using cfiCommon0
        CFI NoFunction
        THUMB
??EVP_aes_192_cfb8??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock67
        REQUIRE EVP_aes_192_cfb8

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock68 Using cfiCommon1
        CFI Function EVP_aes_192_cfb8
        ARM
EVP_aes_192_cfb8:
        LDR      R0,??EVP_aes_192_cfb8_0  ;; aes_192_cfb8
        BX       LR               ;; return
        DATA
??EVP_aes_192_cfb8_0:
        DC32     aes_192_cfb8
        CFI EndBlock cfiBlock68

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock69 Using cfiCommon0
        CFI NoFunction
        THUMB
??aes_256_cfb8_cipher??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock69
        REQUIRE aes_256_cfb8_cipher

        RSEG DATA_C:CONST:SORT:NOROOT(2)
aes_192_cfb8:
        DATA
        DC32 654, 1, 24, 16, 1027, aes_init_key, aes_192_cfb8_cipher, 0H, 244
        DC32 0A0E8F215H, 0A0E8F143H, 0H, 0H

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock70 Using cfiCommon1
        CFI Function aes_256_cfb8_cipher
        ARM
aes_256_cfb8_cipher:
        PUSH     {LR}
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+4
        MOV      R12,R0
        MOV      R0,R2
        MOV      R2,R3
        LDR      R3,[R12, #+8]
        PUSH     {R3}
        CFI CFA R13+8
        ADD      R3,R12,#+80
        PUSH     {R3}
        CFI CFA R13+12
        ADD      R3,R12,#+32
        PUSH     {R3}
        CFI CFA R13+16
        LDR      R3,[R12, #+96]
        _BLF     AES_cfb8_encrypt,??AES_cfb8_encrypt??rA
        B        ??Subroutine38_0
        CFI EndBlock cfiBlock70

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock71 Using cfiCommon0
        CFI NoFunction
        THUMB
??EVP_aes_256_cfb8??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock71
        REQUIRE EVP_aes_256_cfb8

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock72 Using cfiCommon1
        CFI Function EVP_aes_256_cfb8
        ARM
EVP_aes_256_cfb8:
        LDR      R0,??EVP_aes_256_cfb8_0  ;; aes_256_cfb8
        BX       LR               ;; return
        DATA
??EVP_aes_256_cfb8_0:
        DC32     aes_256_cfb8
        CFI EndBlock cfiBlock72

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock73 Using cfiCommon0
        CFI NoFunction
        THUMB
??aes_init_key??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock73
        REQUIRE aes_init_key

        RSEG DATA_C:CONST:SORT:NOROOT(2)
aes_256_cfb8:
        DATA
        DC32 655, 1, 32, 16, 1027, aes_init_key, aes_256_cfb8_cipher, 0H, 244
        DC32 0A0E8F215H, 0A0E8F143H, 0H, 0H

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock74 Using cfiCommon1
        CFI Function aes_init_key
        ARM
aes_init_key:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        MOV      R12,R0
        LDR      R2,[R12, #+96]
        MOV      R0,R1
        LDR      R1,[R12, #+88]
        LDR      R12,[R12, #+0]
        LSL      R1,R1,#+3
        LDR      R4,[R12, #+16]
        AND      R4,R4,#0x7
        CMP      R4,#+3
        LDRNE    R4,[R12, #+16]
        ANDNE    R4,R4,#0x7
        CMPNE    R4,#+4
        BEQ      ??aes_init_key_0
        CMP      R3,#+0
        BEQ      ??aes_init_key_1
??aes_init_key_0:
        _BLF     AES_set_encrypt_key,??AES_set_encrypt_key??rA
        B        ??aes_init_key_2
??aes_init_key_1:
        _BLF     AES_set_decrypt_key,??AES_set_decrypt_key??rA
??aes_init_key_2:
        CMP      R0,#+0
        BPL      ??aes_init_key_3
        LDR      R3,??aes_init_key_4  ;; `?<Constant "E:\\\\Users\\\\alfinant7\\\\Do...">`
        MOV      R0,#+115
        PUSH     {R0}
        CFI CFA R13+12
        MOV      R2,#+140
        MOV      R1,#+129
        MOV      R0,#+6
        _BLF     ERR_put_error,??ERR_put_error??rA
        MOV      R0,#+0
        ADD      SP,SP,#+4
        CFI CFA R13+8
        POP      {R4,PC}
??aes_init_key_3:
        MOV      R0,#+1
        POP      {R4,PC}          ;; return
        DATA
??aes_init_key_4:
        DC32     `?<Constant "E:\\\\Users\\\\alfinant7\\\\Do...">`
        CFI EndBlock cfiBlock74

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock75 Using cfiCommon1
        CFI NoFunction
        ARM
??AES_cbc_encrypt??rA:
        LDR      R12,??Subroutine40_0  ;; AES_cbc_encrypt
        BX       R12
        DATA
??Subroutine40_0:
        DC32     AES_cbc_encrypt
        CFI EndBlock cfiBlock75

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock76 Using cfiCommon1
        CFI NoFunction
        ARM
??AES_cfb128_encrypt??rA:
        LDR      R12,??Subroutine41_0  ;; AES_cfb128_encrypt
        BX       R12
        DATA
??Subroutine41_0:
        DC32     AES_cfb128_encrypt
        CFI EndBlock cfiBlock76

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock77 Using cfiCommon1
        CFI NoFunction
        ARM
??AES_ecb_encrypt??rA:
        LDR      R12,??Subroutine42_0  ;; AES_ecb_encrypt
        BX       R12
        DATA
??Subroutine42_0:
        DC32     AES_ecb_encrypt
        CFI EndBlock cfiBlock77

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock78 Using cfiCommon1
        CFI NoFunction
        ARM
??AES_ofb128_encrypt??rA:
        LDR      R12,??Subroutine43_0  ;; AES_ofb128_encrypt
        BX       R12
        DATA
??Subroutine43_0:
        DC32     AES_ofb128_encrypt
        CFI EndBlock cfiBlock78

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock79 Using cfiCommon1
        CFI NoFunction
        ARM
??AES_cfb1_encrypt??rA:
        LDR      R12,??Subroutine44_0  ;; AES_cfb1_encrypt
        BX       R12
        DATA
??Subroutine44_0:
        DC32     AES_cfb1_encrypt
        CFI EndBlock cfiBlock79

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock80 Using cfiCommon1
        CFI NoFunction
        ARM
??AES_cfb8_encrypt??rA:
        LDR      R12,??Subroutine45_0  ;; AES_cfb8_encrypt
        BX       R12
        DATA
??Subroutine45_0:
        DC32     AES_cfb8_encrypt
        CFI EndBlock cfiBlock80

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock81 Using cfiCommon1
        CFI NoFunction
        ARM
??AES_set_encrypt_key??rA:
        LDR      R12,??Subroutine46_0  ;; AES_set_encrypt_key
        BX       R12
        DATA
??Subroutine46_0:
        DC32     AES_set_encrypt_key
        CFI EndBlock cfiBlock81

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock82 Using cfiCommon1
        CFI NoFunction
        ARM
??AES_set_decrypt_key??rA:
        LDR      R12,??Subroutine47_0  ;; AES_set_decrypt_key
        BX       R12
        DATA
??Subroutine47_0:
        DC32     AES_set_decrypt_key
        CFI EndBlock cfiBlock82

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock83 Using cfiCommon1
        CFI NoFunction
        ARM
??ERR_put_error??rA:
        LDR      R12,??Subroutine48_0  ;; ERR_put_error
        BX       R12
        DATA
??Subroutine48_0:
        DC32     ERR_put_error
        CFI EndBlock cfiBlock83

        END
// 
// 1 420 bytes in segment CODE
// 1 020 bytes in segment DATA_C
// 
// 1 164 bytes of CODE  memory (+ 256 bytes shared)
// 1 020 bytes of CONST memory
//
//Errors: none
//Warnings: none
