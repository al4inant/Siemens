##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION    15/Mar/2023  22:35:37 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  D:\Users\alfinant\Documents\Siemens\Dev\IAR\VK.ELF_C #
#                       \Menu_Groups.c                                       #
#    Command line    =  D:\Users\alfinant\Documents\Siemens\Dev\IAR\VK.ELF_C #
#                       \Menu_Groups.c -D NEWSGOLD -D DEBUG -lCN             #
#                       D:\Users\alfinant\Documents\Siemens\Dev\IAR\VK.ELF_C #
#                       \Releas_NSG\List\ -la D:\Users\alfinant\Documents\Si #
#                       emens\Dev\IAR\VK.ELF_C\Releas_NSG\List\ -o           #
#                       D:\Users\alfinant\Documents\Siemens\Dev\IAR\VK.ELF_C #
#                       \Releas_NSG\Obj\ -s9 --cpu_mode arm --endian little  #
#                       --cpu ARM926EJ-S --stack_align 4 --interwork         #
#                       --diag_suppress Pe301 -e --fpu None --dlib_config    #
#                       D:\Users\alfinant\Documents\Siemens\IAR\ARM\LIB\dl5t #
#                       painl8n.h -I D:\Users\alfinant\Documents\Siemens\IAR #
#                       \ARM\INC\ --inline_threshold=2                       #
#    List file       =  D:\Users\alfinant\Documents\Siemens\Dev\IAR\VK.ELF_C #
#                       \Releas_NSG\List\Menu_Groups.lst                     #
#    Object file     =  D:\Users\alfinant\Documents\Siemens\Dev\IAR\VK.ELF_C #
#                       \Releas_NSG\Obj\Menu_Groups.r79                      #
#                                                                            #
#                                                                            #
##############################################################################

D:\Users\alfinant\Documents\Siemens\Dev\IAR\VK.ELF_C\Menu_Groups.c
      1          #include <siemens\swilib.h>
      2          #include "rect_patcher.h"
      3          #include "dyn_images.h"
      4          #include "dyn_theme.h"
      5          #include "socket_work.h"
      6          #include "http.h"
      7          #include "process.h"
      8          #include "vk_api.h"
      9          #include "main.h"
     10          //#include "chat.h"
     11          #include "anim_widget.h"
     12          
     13          static int gui_id = 0;
     14          static int timer_id;
     15          

   \                                 In segment DATA_C, align 4, align-sorted
     16          static const char percent_t[]="%t";
   \                     percent_t:
   \   00000000   257400             DC8 "%t"
   \   00000003   00                 DC8 0
   \   00000004   C3F0F3EFEFFB       DC8 "\303\360\363\357\357\373"
   \              00          
   \   0000000B   00                 DC8 0
   \   0000000C   25642F256400       DC8 "%d/%d"
   \   00000012   0000               DC8 0, 0

   \                                 In segment DATA_C, align 1, align-sorted
     17          static const char percent_d[]="%d";
   \                     percent_d:
   \   00000000   256400             DC8 "%d"

   \                                 In segment DATA_I, align 4, align-sorted
     18          
     19          extern int CreateDebugGUI();
     20          extern int CreateWall(VkGroup *group);
     21          extern void LoadSavedGroups();
     22          
     23          #ifdef ELKA
     24          static int hdr_icon=0x599;
     25          #else
     26          static int hdr_icon=0x5C5;
     27          #endif
     28          
     29          static HEADER_DESC hdr={0,0,0,0,NULL,NULL,LGP_NULL};
   \                     hdr:
   \   00000000                      DS8 20
   \   00000014                      REQUIRE `?<Initializer for hdr>`
   \   00000014                      DS8 4
   \   00000018                      REQUIRE `?<Initializer for gui_id>`
   \   00000018                      DS8 4
   \   0000001C                      REQUIRE `?<Initializer for timer_id>`
   \   0000001C                      DS8 4
   \   00000020                      REQUIRE `?<Initializer for ws_hdr>`
   \   00000020                      DS8 4
   \   00000024                      REQUIRE `?<Initializer for groups_count>`
   \   00000024                      DS8 4
   \   00000028                      REQUIRE `?<Initializer for cursor_pos>`
   \   00000028                      DS8 4
   \   0000002C                      REQUIRE `?<Initializer for loaded_count>`
   \   0000002C                      DS8 4
   \   00000030                      REQUIRE `?<Initializer for hdr_icon>`
     30          static WSHDR *ws_hdr = NULL;
     31          static int groups_count = 0;
     32          static int cursor_pos = 0;
     33          static int loaded_count = 0;
     34          

   \                                 In segment DATA_C, align 4, align-sorted
     35          static const int menusoftkeys[]={0,1,2};
   \                     menusoftkeys:
   \   00000000   000000000100       DC32 0, 1, 2
   \              000002000000
     36          

   \                                 In segment DATA_I, align 4, align-sorted
     37          static SOFTKEY_DESC sk[]=
   \                     sk:
   \   00000000                      DS8 24
   \   00000018                      REQUIRE `?<Initializer for sk>`
     38          {
     39            {0x0018,0x0000,(int)"обновить"},
     40            {0x0001,0x0000, (int)"Назад"},
     41            {0x003D,0x0000,(int)LGP_DOIT_PIC}
     42          };
     43          

   \                                 In segment DATA_I, align 4, align-sorted
     44          static SOFTKEYSTAB skt=
   \                     skt:
   \   00000000                      DS8 8
   \   00000008                      REQUIRE `?<Initializer for skt>`
     45          {
     46            sk,0
     47          };
     48          
     49          //extern int CreateWall(VkGroup *group);
     50          
     51          static void UpdateHeader()
     52          {
     53            ws_hdr->wsbody[0] = 0; 
     54            wsAppendChar(ws_hdr, UTF16_ENA_CENTER);
     55            wsprintf(ws_hdr, percent_t, "Группы");
     56            wsAppendChar(ws_hdr, UTF16_ALIGN_RIGHT);
     57            wstrcatprintf(ws_hdr, "%d/%d", cursor_pos, groups_count);
     58          }
     59          

   \                                 In segment CODE, align 4, keep-with-next
     60          void set_GroupsCount(int count)
     61          {
     62            groups_count = count;
   \                     set_GroupsCount:
   \   00000000   ........           LDR      R1,??DataTable1  ;; hdr + 32
   \   00000004   000081E5           STR      R0,[R1, #+0]
     63          }
   \   00000008   1EFF2FE1           BX       LR               ;; return
     64          

   \                                 In segment CODE, align 4, keep-with-next
     65          int get_GroupsCount()
     66          {
     67            return groups_count;
   \                     get_GroupsCount:
   \   00000000   ........           LDR      R0,??DataTable1  ;; hdr + 32
   \   00000004   000090E5           LDR      R0,[R0, #+0]
   \   00000008   1EFF2FE1           BX       LR               ;; return
     68          }
     69          

   \                                 In segment CODE, align 4, keep-with-next
     70          static int items_menu_onkey(void *gui, GUI_MSG *msg)
     71          { 
   \                     items_menu_onkey:
   \   00000000   00402DE9           PUSH     {LR}
     72            int i;
     73            VkGroup *group;
     74            struct list_head *pos;
     75            
     76            if ((msg->gbsmsg->msg==KEY_DOWN)||(msg->gbsmsg->msg==LONG_PRESS))
   \   00000004   041091E5           LDR      R1,[R1, #+4]
   \   00000008   9330A0E3           MOV      R3,#+147
   \   0000000C   042091E5           LDR      R2,[R1, #+4]
   \   00000010   403F83E3           ORR      R3,R3,#0x100
   \   00000014   030052E1           CMP      R2,R3
   \   00000018   02308312           ADDNE    R3,R3,#+2
   \   0000001C   03005211           CMPNE    R2,R3
   \   00000020   0D00001A           BNE      ??items_menu_onkey_0
     77            {
     78              switch(msg->gbsmsg->submess)
   \   00000024   081091E5           LDR      R1,[R1, #+8]
   \   00000028   011051E2           SUBS     R1,R1,#+1
   \   0000002C   0E00000A           BEQ      ??items_menu_onkey_1
   \   00000030   031051E2           SUBS     R1,R1,#+3
   \   00000034   2000000A           BEQ      ??items_menu_onkey_2
   \   00000038   071051E2           SUBS     R1,R1,#+7
   \   0000003C   0800000A           BEQ      ??items_menu_onkey_3
   \   00000040   0F1051E2           SUBS     R1,R1,#+15
   \   00000044   0400001A           BNE      ??items_menu_onkey_0
     79              {
     80              case UP_BUTTON:
     81                break;
     82                
     83              case ENTER_BUTTON://открыть стену группы
     84                i=GetCurMenuItem(gui);
   \   00000048   8F0100EF           SWI      +399
     85                pos = get_ListByIndex(&my_groups, i);
   \   0000004C   0010A0E1           MOV      R1,R0
   \   00000050   ........           LDR      R0,??DataTable8  ;; my_groups
   \   00000054   ........           _BLF     get_ListByIndex,??get_ListByIndex??rA
     86                group = list_entry(pos, VkGroup, list);
     87                CreateWall(group);
   \   00000058   ........           _BLF     CreateWall,??CreateWall??rA
     88                break;
     89              
     90              case GREEN_BUTTON:
     91          #ifdef DEBUG
     92                CreateDebugGUI();
     93          #endif
     94                break;
     95              
     96              case LEFT_SOFT://обновить
     97                if (IsGPRSEnabled())
     98                {
     99                  if (INET_PROCESS==0)
    100                  {
    101                    //INET_PROCESS=TEST_SSL_CON;
    102                    //SUBPROC((void *)HttpSendReq, "https://team-sc.ru", 1);
    103                    INET_PROCESS=LOAD_GROUPS;
    104                    int offset=0;
    105                    SUBPROC((void *)HttpSendReq, url_groups_get(offset, 100), 1);
    106                    AnimWidget_Wait(0);
    107                    //AnimWidget_Wait_headline();
    108                  }
    109                }      
    110                break;
    111                
    112              case RIGHT_SOFT:
    113                return(1);//close
    114              }
    115            }
    116            return (0); 
   \                     ??items_menu_onkey_0:
   \   0000005C   0000A0E3           MOV      R0,#+0
   \   00000060   0080BDE8           POP      {PC}             ;; return
   \                     ??items_menu_onkey_3:
   \   00000064   ........           _BLF     CreateDebugGUI,??CreateDebugGUI??rA
   \   00000068   110000EA           B        ??items_menu_onkey_4
   \                     ??items_menu_onkey_1:
   \   0000006C   A70000EF           SWI      +167
   \   00000070   000050E3           CMP      R0,#+0
   \   00000074   0080BD08           POPEQ    {PC}
   \   00000078   44009FE5           LDR      R0,??items_menu_onkey_5  ;; INET_PROCESS
   \   0000007C   001090E5           LDR      R1,[R0, #+0]
   \   00000080   000051E3           CMP      R1,#+0
   \   00000084   F4FFFF1A           BNE      ??items_menu_onkey_0
   \   00000088   1510A0E3           MOV      R1,#+21
   \   0000008C   001080E5           STR      R1,[R0, #+0]
   \   00000090   6410A0E3           MOV      R1,#+100
   \   00000094   0000A0E3           MOV      R0,#+0
   \   00000098   ........           _BLF     url_groups_get,??url_groups_get??rA
   \   0000009C   0120A0E3           MOV      R2,#+1
   \   000000A0   0010A0E1           MOV      R1,R0
   \   000000A4   1C009FE5           LDR      R0,??items_menu_onkey_5+0x4  ;; HttpSendReq
   \   000000A8   710100EF           SWI      +369
   \   000000AC   0000A0E3           MOV      R0,#+0
   \   000000B0   ........           _BLF     AnimWidget_Wait,??AnimWidget_Wait??rA
   \                     ??items_menu_onkey_4:
   \   000000B4   0000A0E3           MOV      R0,#+0
   \   000000B8   0080BDE8           POP      {PC}
   \                     ??items_menu_onkey_2:
   \   000000BC   0100A0E3           MOV      R0,#+1
   \   000000C0   0080BDE8           POP      {PC}
   \                     ??items_menu_onkey_5:
   \   000000C4   ........           DC32     INET_PROCESS
   \   000000C8   ........           DC32     HttpSendReq
    117          }
    118          

   \                                 In segment CODE, align 4, keep-with-next
    119          static void items_menu_ghook(void *gui, int cmd)
    120          {
   \                     items_menu_ghook:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
    121            if (cmd==TI_CMD_CREATE)
   \   00000004   8C519FE5           LDR      R5,??items_menu_ghook_0  ;; percent_t
   \   00000008   ........           LDR      R8,??DataTable7  ;; hdr
   \   0000000C   0090A0E1           MOV      R9,R0
   \   00000010   1D40A0E3           MOV      R4,#+29
   \   00000014   E04C84E3           ORR      R4,R4,#0xE000
   \   00000018   016084E2           ADD      R6,R4,#+1
   \   0000001C   0070A0E3           MOV      R7,#+0
   \   00000020   020051E3           CMP      R1,#+2
   \   00000024   2D00001A           BNE      ??items_menu_ghook_1
    122            { 
    123              timer_id = GUI_NewTimer(gui);
   \   00000028   A70300EF           SWI      +935
   \   0000002C   180088E5           STR      R0,[R8, #+24]
    124              hdr.icon = &hdr_icon;
   \   00000030   2C0088E2           ADD      R0,R8,#+44
   \   00000034   080088E5           STR      R0,[R8, #+8]
    125              void *hdr_pointer=  GetHeaderPointer(gui);
   \   00000038   0900A0E1           MOV      R0,R9
   \   0000003C   AE0200EF           SWI      +686
   \   00000040   00A0A0E1           MOV      R10,R0
    126              ws_hdr=AllocWS(64);
   \   00000044   4000A0E3           MOV      R0,#+64
   \   00000048   250100EF           SWI      +293
   \   0000004C   1C0088E5           STR      R0,[R8, #+28]
    127              //wsprintf(hdr_ws, percent_t, HEADER_TEXT);
    128              //SetHeaderText(hdr_pointer, hdr_ws, malloc_adr(), mfree_adr());     
    129              UpdateHeader();
   \   00000050   001090E5           LDR      R1,[R0, #+0]
   \   00000054   B070C1E1           STRH     R7,[R1, #+0]
   \   00000058   0610A0E1           MOV      R1,R6
   \   0000005C   1C0000EF           SWI      +28
   \   00000060   1C0098E5           LDR      R0,[R8, #+28]
   \   00000064   042085E2           ADD      R2,R5,#+4
   \   00000068   0510A0E1           MOV      R1,R5
   \   0000006C   240100EF           SWI      +292
   \   00000070   1C0098E5           LDR      R0,[R8, #+28]
   \   00000074   0410A0E1           MOV      R1,R4
   \   00000078   1C0000EF           SWI      +28
   \   0000007C   1C0098E5           LDR      R0,[R8, #+28]
   \   00000080   203098E5           LDR      R3,[R8, #+32]
   \   00000084   242098E5           LDR      R2,[R8, #+36]
   \   00000088   0C1085E2           ADD      R1,R5,#+12
   \   0000008C   160200EF           SWI      +534
    130              SetHeaderText(hdr_pointer, ws_hdr, malloc_adr(), mfree_adr());
   \   00000090   158000EF           SWI      +32789
   \   00000094   0040A0E1           MOV      R4,R0
   \   00000098   148000EF           SWI      +32788
   \   0000009C   1C1098E5           LDR      R1,[R8, #+28]
   \   000000A0   0020A0E1           MOV      R2,R0
   \   000000A4   0430A0E1           MOV      R3,R4
   \   000000A8   0A00A0E1           MOV      R0,R10
   \   000000AC   AF0200EF           SWI      +687
    131              
    132              //LoadDynTheme();
    133              //LoadDynImages();
    134              
    135              if (list_empty(&my_groups))
   \   000000B0   ........           LDR      R0,??DataTable8  ;; my_groups
   \   000000B4   001090E5           LDR      R1,[R0, #+0]
   \   000000B8   000051E1           CMP      R1,R0
   \   000000BC   F087BD18           POPNE    {R4-R10,PC}
    136              {
    137                AnimWidget_Wait(0);
   \   000000C0   0000A0E3           MOV      R0,#+0
   \   000000C4   ........           _BLF     AnimWidget_Wait,??AnimWidget_Wait??rA
    138                GUI_StartTimerProc(gui, timer_id, 100, LoadSavedGroups);//загружаем сохраненные диалоги
   \   000000C8   CC309FE5           LDR      R3,??items_menu_ghook_0+0x4  ;; LoadSavedGroups
   \   000000CC   181098E5           LDR      R1,[R8, #+24]
   \   000000D0   6420A0E3           MOV      R2,#+100
   \   000000D4   0900A0E1           MOV      R0,R9
   \   000000D8   A90300EF           SWI      +937
    139                return;
   \   000000DC   F087BDE8           POP      {R4-R10,PC}
    140              }    
    141          /*    
    142              if (IsGPRSEnabled())
    143                {
    144                  if (INET_PROCESS==0 && list_empty(&my_groups))
    145                  {
    146                    INET_PROCESS=LOAD_GROUPS;
    147                    SUBPROC((void *)HttpSendReq, url_groups_get(0, 100), 1);
    148                    //AnimWidget_Wait(0);
    149                  }
    150                }
    151              */
    152            }
    153               
    154            if (cmd==TI_CMD_UNFOCUS)
   \                     ??items_menu_ghook_1:
   \   000000E0   090051E3           CMP      R1,#+9
   \   000000E4   0200001A           BNE      ??items_menu_ghook_2
    155            {
    156              AnimWidget_Close();
   \   000000E8   ........           _BLF     AnimWidget_Close,??AnimWidget_Close??rA
    157              //DisableDynImages();
    158              DisableDynTheme();
   \   000000EC   ........           _BLF     DisableDynTheme,??DisableDynTheme??rA
   \   000000F0   F087BDE8           POP      {R4-R10,PC}
    159            }
    160            
    161            if (cmd==TI_CMD_FOCUS)
   \                     ??items_menu_ghook_2:
   \   000000F4   0A0051E3           CMP      R1,#+10
   \   000000F8   0300001A           BNE      ??items_menu_ghook_3
    162            {
    163              //if (GetMenuItemCount(gui)==0)
    164                //AnimWidget_Wait(0);
    165              
    166              EnableDynImages();
   \   000000FC   ........           _BLF     EnableDynImages,??EnableDynImages??rA
    167              EnableDynTheme();  
   \   00000100   ........           _BLF     EnableDynTheme,??EnableDynTheme??rA
    168              DisableIDLETMR();
   \   00000104   7F0100EF           SWI      +383
   \   00000108   F087BDE8           POP      {R4-R10,PC}
    169            }  
    170            
    171            if (cmd==TI_CMD_REDRAW)
   \                     ??items_menu_ghook_3:
   \   0000010C   070051E3           CMP      R1,#+7
   \   00000110   1700001A           BNE      ??items_menu_ghook_4
    172            {
    173              cursor_pos = GetCurMenuItem(gui);
   \   00000114   8F0100EF           SWI      +399
    174              if (loaded_count)
   \   00000118   281098E5           LDR      R1,[R8, #+40]
   \   0000011C   000051E3           CMP      R1,#+0
    175                cursor_pos++;
   \   00000120   01008012           ADDNE    R0,R0,#+1
   \   00000124   240088E5           STR      R0,[R8, #+36]
    176              UpdateHeader();
   \   00000128   1C0098E5           LDR      R0,[R8, #+28]
   \   0000012C   001090E5           LDR      R1,[R0, #+0]
   \   00000130   B070C1E1           STRH     R7,[R1, #+0]
   \   00000134   0610A0E1           MOV      R1,R6
   \   00000138   1C0000EF           SWI      +28
   \   0000013C   1C0098E5           LDR      R0,[R8, #+28]
   \   00000140   042085E2           ADD      R2,R5,#+4
   \   00000144   0510A0E1           MOV      R1,R5
   \   00000148   240100EF           SWI      +292
   \   0000014C   1C0098E5           LDR      R0,[R8, #+28]
   \   00000150   0410A0E1           MOV      R1,R4
   \   00000154   1C0000EF           SWI      +28
   \   00000158   203098E5           LDR      R3,[R8, #+32]
   \   0000015C   242098E5           LDR      R2,[R8, #+36]
   \   00000160   1C0098E5           LDR      R0,[R8, #+28]
   \   00000164   0C1085E2           ADD      R1,R5,#+12
   \   00000168   160200EF           SWI      +534
    177              EnableDynImages();
   \   0000016C   ........           _BLF     EnableDynImages,??EnableDynImages??rA
   \   00000170   F087BDE8           POP      {R4-R10,PC}
    178            }
    179            
    180            if (cmd==TI_CMD_DESTROY)
   \                     ??items_menu_ghook_4:
   \   00000174   030051E3           CMP      R1,#+3
   \   00000178   F087BD18           POPNE    {R4-R10,PC}
    181            {
    182              GUI_DeleteTimer(gui, timer_id);
   \   0000017C   181098E5           LDR      R1,[R8, #+24]
   \   00000180   A80300EF           SWI      +936
    183              gui_id=0;
   \   00000184   147088E5           STR      R7,[R8, #+20]
    184              AnimWidget_Close();
   \   00000188   ........           _BLF     AnimWidget_Close,??AnimWidget_Close??rA
    185              DisableDynTheme();
   \   0000018C   ........           _BLF     DisableDynTheme,??DisableDynTheme??rA
    186              DisableDynImages();
   \   00000190   ........           _BLF     DisableDynImages,??DisableDynImages??rA
   \   00000194   F087BDE8           POP      {R4-R10,PC}      ;; return
   \                     ??items_menu_ghook_0:
   \   00000198   ........           DC32     percent_t
   \   0000019C   ........           DC32     LoadSavedGroups
    187            }
    188          }
    189          

   \                                 In segment CODE, align 4, keep-with-next
    190          static void items_menu_iconhndl(void *gui, int curitem, void *user_pointer)
    191          {
   \                     items_menu_iconhndl:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    192            
    193            IMGHDR *item_icon = NULL;
    194            struct list_head *pos;
    195            VkGroup *group;
    196            
    197            pos = get_ListByIndex(&my_groups, curitem);
   \   00000008   ........           LDR      R0,??DataTable8  ;; my_groups
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   ........           _BLF     get_ListByIndex,??get_ListByIndex??rA
   \   00000014   0060A0E1           MOV      R6,R0
    198            group = list_entry(pos, VkGroup, list);
    199            
    200            WSHDR *ws1=AllocMenuWS(gui,64);
   \   00000018   4010A0E3           MOV      R1,#+64
   \   0000001C   0400A0E1           MOV      R0,R4
   \   00000020   980100EF           SWI      +408
   \   00000024   0070A0E1           MOV      R7,R0
    201            WSHDR *ws2=AllocMenuWS(gui,64);
   \   00000028   4010A0E3           MOV      R1,#+64
   \   0000002C   0400A0E1           MOV      R0,R4
   \   00000030   980100EF           SWI      +408
   \   00000034   0080A0E1           MOV      R8,R0
    202            void* item=AllocMLMenuItem(gui);
   \   00000038   0400A0E1           MOV      R0,R4
   \   0000003C   190200EF           SWI      +537
   \   00000040   0090A0E1           MOV      R9,R0
    203          
    204            wsAppendChar(ws1, UTF16_FONT_SMALL_BOLD);
   \   00000044   1310A0E3           MOV      R1,#+19
   \   00000048   E01C81E3           ORR      R1,R1,#0xE000
   \   0000004C   0700A0E1           MOV      R0,R7
   \   00000050   1C0000EF           SWI      +28
    205            wsAppendChar(ws2, UTF16_FONT_SMALL);
   \   00000054   1210A0E3           MOV      R1,#+18
   \   00000058   E01C81E3           ORR      R1,R1,#0xE000
   \   0000005C   0800A0E1           MOV      R0,R8
   \   00000060   1C0000EF           SWI      +28
    206            
    207            if (group)
   \   00000064   000056E3           CMP      R6,#+0
   \   00000068   3200000A           BEQ      ??items_menu_iconhndl_0
    208            {
    209              /*wsAppendChar(ws1, UTF16_INK_RGBA);
    210              wsAppendChar(ws1, 0x5D80);//RG
    211              wsAppendChar(ws1, 0xA664);//BA - вк синий  */
    212              
    213              if (group->name)
   \   0000006C   0C0096E5           LDR      R0,[R6, #+12]
   \   00000070   000050E3           CMP      R0,#+0
   \   00000074   0300000A           BEQ      ??items_menu_iconhndl_1
    214                wstrcat(ws1, group->name);
   \   00000078   0010A0E1           MOV      R1,R0
   \   0000007C   0700A0E1           MOV      R0,R7
   \   00000080   210100EF           SWI      +289
   \   00000084   030000EA           B        ??items_menu_iconhndl_2
    215              else
    216                wstrcatprintf(ws1,percent_d, group->id);
   \                     ??items_menu_iconhndl_1:
   \   00000088   082096E5           LDR      R2,[R6, #+8]
   \   0000008C   C4109FE5           LDR      R1,??items_menu_iconhndl_3  ;; percent_d
   \   00000090   0700A0E1           MOV      R0,R7
   \   00000094   160200EF           SWI      +534
    217              
    218              wsAppendChar(ws2, UTF16_INK_RGBA);
   \                     ??items_menu_iconhndl_2:
   \   00000098   0610A0E3           MOV      R1,#+6
   \   0000009C   E01C81E3           ORR      R1,R1,#0xE000
   \   000000A0   0800A0E1           MOV      R0,R8
   \   000000A4   1C0000EF           SWI      +28
    219              wsAppendChar(ws2, 0x8080);//RG
   \   000000A8   8010A0E3           MOV      R1,#+128
   \   000000AC   801C81E3           ORR      R1,R1,#0x8000
   \   000000B0   0800A0E1           MOV      R0,R8
   \   000000B4   1C0000EF           SWI      +28
    220              wsAppendChar(ws2, 0x8064);//BA - серый
   \   000000B8   6410A0E3           MOV      R1,#+100
   \   000000BC   801C81E3           ORR      R1,R1,#0x8000
   \   000000C0   0800A0E1           MOV      R0,R8
   \   000000C4   1C0000EF           SWI      +28
    221              /*wsAppendChar(ws2, 0x5D80);//RG
    222              wsAppendChar(ws2, 0xA664);//BA - вк синий */
    223              
    224              if (group->screen_name)
   \   000000C8   100096E5           LDR      R0,[R6, #+16]
   \   000000CC   000050E3           CMP      R0,#+0
   \   000000D0   0200000A           BEQ      ??items_menu_iconhndl_4
    225                wstrcat(ws2, group->screen_name);    
   \   000000D4   0010A0E1           MOV      R1,R0
   \   000000D8   0800A0E1           MOV      R0,R8
   \   000000DC   210100EF           SWI      +289
    226              
    227              //SetMenuItemIconArray(gui, item, &i1_pic); //первым рисуется картинка из SetMenuItemIconArray
    228          #ifdef NEWSGOLD
    229              
    230              if (group->photo_50_img)
   \                     ??items_menu_iconhndl_4:
   \   000000E0   240096E5           LDR      R0,[R6, #+36]
   \   000000E4   000050E3           CMP      R0,#+0
   \   000000E8   0400001A           BNE      ??items_menu_iconhndl_5
    231                item_icon = group->photo_50_img;
    232              else
    233                if (group->deactivated)
   \   000000EC   140096E5           LDR      R0,[R6, #+20]
   \   000000F0   000050E3           CMP      R0,#+0
   \   000000F4   0300000A           BEQ      ??items_menu_iconhndl_6
    234                  item_icon = PNGLIST_GetImgByIndex(0);//deactivated.png
   \   000000F8   0000A0E3           MOV      R0,#+0
   \   000000FC   ........           _BLF     PNGLIST_GetImgByIndex,??PNGLIST_GetImgByIndex??rA
    235              
    236              if (item_icon == NULL)
   \                     ??items_menu_iconhndl_5:
   \   00000100   000050E3           CMP      R0,#+0
   \   00000104   0100001A           BNE      ??items_menu_iconhndl_7
    237                item_icon = PNGLIST_GetImgByIndex(1);//camera.png
   \                     ??items_menu_iconhndl_6:
   \   00000108   0100A0E3           MOV      R0,#+1
   \   0000010C   ........           _BLF     PNGLIST_GetImgByIndex,??PNGLIST_GetImgByIndex??rA
    238              
    239              if (item_icon)
   \                     ??items_menu_iconhndl_7:
   \   00000110   000050E3           CMP      R0,#+0
   \   00000114   0300000A           BEQ      ??items_menu_iconhndl_8
    240                SetMenuItemIconIMGHDR(gui, item, item_icon);
   \   00000118   0020A0E1           MOV      R2,R0
   \   0000011C   0910A0E1           MOV      R1,R9
   \   00000120   0400A0E1           MOV      R0,R4
   \   00000124   A30300EF           SWI      +931
    241          #endif
    242           /*     
    243                if (process==0) 
    244                {
    245                  csm->cl=csm->groups_list;
    246                  csm->c=csm->cl;
    247                  process=LOAD_USERS_PHOTO_FROM_INET;
    248                  ipc.name_to=ipc_my_name;
    249                  ipc.name_from=ipc_my_name;
    250                  ipc.data=0;
    251                  GBS_SendMessage(MMI_CEPID, MSG_IPC, IPC_RUN_MAIN_PROCESS, &ipc);        
    252                } 
    253            */
    254              SetMLMenuItemText(gui, item, ws1, ws2, curitem);
   \                     ??items_menu_iconhndl_8:
   \   00000128   20002DE9           PUSH     {R5}
   \   0000012C   0830A0E1           MOV      R3,R8
   \   00000130   0720A0E1           MOV      R2,R7
   \   00000134   020000EA           B        ??items_menu_iconhndl_9
    255            }
    256            else
    257              SetMLMenuItemText(gui, item, 0, 0, curitem);
   \                     ??items_menu_iconhndl_0:
   \   00000138   20002DE9           PUSH     {R5}
   \   0000013C   0030A0E3           MOV      R3,#+0
   \   00000140   0020A0E3           MOV      R2,#+0
   \                     ??items_menu_iconhndl_9:
   \   00000144   0910A0E1           MOV      R1,R9
   \   00000148   0400A0E1           MOV      R0,R4
   \   0000014C   180200EF           SWI      +536
   \   00000150   04D08DE2           ADD      SP,SP,#+4
    258          }
   \   00000154   F083BDE8           POP      {R4-R9,PC}       ;; return
   \                     ??items_menu_iconhndl_3:
   \   00000158   ........           DC32     percent_d
    259          

   \                                 In segment DATA_C, align 4, align-sorted
    260          static const ML_MENU_DESC items_menu_desc=
   \                     items_menu_desc:
   \   00000000   08000000....       DC32 8, items_menu_onkey, items_menu_ghook, 0H, menusoftkeys, skt
   \              ............
   \              00000000....
   \              ............
   \   00000018   92000140....       DC32 1073807506, items_menu_iconhndl, 0H, 0H, 0, 1
   \              ....00000000
   \              000000000000
   \              000001000000
    261          {
    262            8,
    263            items_menu_onkey,
    264            items_menu_ghook,
    265            NULL,
    266            menusoftkeys,
    267            &skt,
    268            0x40010092, //0x40010092//0x80000083
    269            items_menu_iconhndl,
    270            NULL,   //Items
    271            NULL,   //Procs
    272            0,   //n
    273            1 //Добавочных строк  
    274          };
    275          
    276          //******************************************************************************

   \                                 In segment CODE, align 4, keep-with-next
    277          void RefreshGroupsMenu()
    278          {  
   \                     RefreshGroupsMenu:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
    279            if (gui_id)
   \   00000004   30409FE5           LDR      R4,??RefreshGroupsMenu_0  ;; hdr
   \   00000008   140094E5           LDR      R0,[R4, #+20]
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   3080BD08           POPEQ    {R4,R5,PC}
    280            {
    281              GUI* gui = FindGUIbyId(gui_id, NULL);
   \   00000014   0010A0E3           MOV      R1,#+0
   \   00000018   090200EF           SWI      +521
   \   0000001C   0050A0E1           MOV      R5,R0
    282              //csm->list = &dialogs;
    283              //GUI_StartTimerProc(gui, timer_id, 100, LoadUserPhoto);//ищем авки в cache    
    284              loaded_count = count_ListElements(&my_groups);
   \   00000020   ........           LDR      R0,??DataTable8  ;; my_groups
   \   00000024   ........           _BLF     count_ListElements,??count_ListElements??rA
   \   00000028   280084E5           STR      R0,[R4, #+40]
    285              Menu_SetItemCountDyn(gui, loaded_count);
   \   0000002C   0010A0E1           MOV      R1,R0
   \   00000030   0500A0E1           MOV      R0,R5
   \   00000034   E60100EF           SWI      +486
    286            }
    287          }
   \   00000038   3080BDE8           POP      {R4,R5,PC}       ;; return
   \                     ??RefreshGroupsMenu_0:
   \   0000003C   ........           DC32     hdr
    288          //******************************************************************************
    289          

   \                                 In segment CODE, align 4, keep-with-next
    290          int CreateGroupsMenu()
    291          {
   \                     CreateGroupsMenu:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
    292            void *ma=malloc_adr(); 
    293            void *mf= mfree_adr();
    294            void *gui=GetMultiLinesMenuGUI(ma, mf); 
    295            SetMenuToGUI(gui,&items_menu_desc); 
    296            SetMenuItemCount(gui, count_ListElements(&my_groups));
    297            patch_header(&hdr);
   \   00000004   ........           LDR      R6,??DataTable7  ;; hdr
   \   00000008   148000EF           SWI      +32788
   \   0000000C   0040A0E1           MOV      R4,R0
   \   00000010   158000EF           SWI      +32789
   \   00000014   0010A0E1           MOV      R1,R0
   \   00000018   0400A0E1           MOV      R0,R4
   \   0000001C   A50200EF           SWI      +677
   \   00000020   58109FE5           LDR      R1,??CreateGroupsMenu_0  ;; items_menu_desc
   \   00000024   0050A0E1           MOV      R5,R0
   \   00000028   A70200EF           SWI      +679
   \   0000002C   ........           LDR      R0,??DataTable8  ;; my_groups
   \   00000030   ........           _BLF     count_ListElements,??count_ListElements??rA
   \   00000034   0010A0E1           MOV      R1,R0
   \   00000038   0500A0E1           MOV      R0,R5
   \   0000003C   C30100EF           SWI      +451
   \   00000040   0000A0E3           MOV      R0,#+0
   \   00000044   000086E5           STR      R0,[R6, #+0]
   \   00000048   888100EF           SWI      +33160
   \   0000004C   010040E2           SUB      R0,R0,#+1
   \   00000050   B400C6E1           STRH     R0,[R6, #+4]
   \   00000054   8A8100EF           SWI      +33162
   \   00000058   010040E2           SUB      R0,R0,#+1
   \   0000005C   B600C6E1           STRH     R0,[R6, #+6]
    298            SetHeaderToMenu(gui,&hdr,ma); 
   \   00000060   0420A0E1           MOV      R2,R4
   \   00000064   0610A0E1           MOV      R1,R6
   \   00000068   0500A0E1           MOV      R0,R5
   \   0000006C   A60200EF           SWI      +678
    299            return gui_id=CreateGUI(gui); 
   \   00000070   0500A0E1           MOV      R0,R5
   \   00000074   370100EF           SWI      +311
   \   00000078   140086E5           STR      R0,[R6, #+20]
   \   0000007C   7080BDE8           POP      {R4-R6,PC}       ;; return
   \                     ??CreateGroupsMenu_0:
   \   00000080   ........           DC32     items_menu_desc
    300          }

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   ........           DC32     hdr + 32

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable7:
   \   00000000   ........           DC32     hdr

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable8:
   \   00000000   ........           DC32     my_groups

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for hdr>`:
   \   00000000   000000000000       DC16 0, 0, 0, 0
   \              0000        
   \   00000008   000000000000       DC32 0H, 0, 2147483647
   \              0000FFFFFF7F
   \                     `?<Initializer for gui_id>`:
   \   00000014   00000000           DC32 0
   \                     `?<Initializer for timer_id>`:
   \   00000018   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for ws_hdr>`:
   \   0000001C   00000000           DC32 0H
   \                     `?<Initializer for groups_count>`:
   \   00000020   00000000           DC32 0
   \                     `?<Initializer for cursor_pos>`:
   \   00000024   00000000           DC32 0
   \                     `?<Initializer for loaded_count>`:
   \   00000028   00000000           DC32 0
   \                     `?<Initializer for hdr_icon>`:
   \   0000002C   C5050000           DC32 1477

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for sk>`:
   \   00000000   18000000           DC16 24, 0
   \   00000004   ........           DC32 `?<Constant "\\356\\341\\355\\356\\342\\350\\362\\374">`
   \   00000008   01000000           DC16 1, 0
   \   0000000C   ........           DC32 `?<Constant "\\315\\340\\347\\340\\344">`
   \   00000010   3D000000           DC16 61, 0
   \   00000014   FBC0FF7F           DC32 2147467515

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for skt>`:
   \   00000000   ........0000       DC32 sk, 0
   \              0000        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\356\\341\\355\\356\\342\\350\\362\\374">`:
   \   00000000   EEE1EDEEE2E8       DC8 "\356\341\355\356\342\350\362\374"
   \              F2FC00      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\315\\340\\347\\340\\344">`:
   \   00000000   CDE0E7E0E400       DC8 "\315\340\347\340\344"
   \   00000006   0000               DC8 0, 0
    301          
    302          
    303          

   Maximum stack usage in bytes:

     Function            CSTACK
     --------            ------
     CreateGroupsMenu       16
     RefreshGroupsMenu      12
     get_GroupsCount         0
     items_menu_ghook       32
     items_menu_iconhndl    32
     items_menu_onkey        4
     set_GroupsCount         0


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     percent_t                        20
     percent_d                         3
     hdr                              48
     menusoftkeys                     12
     sk                               24
     skt                               8
     set_GroupsCount                  12
     get_GroupsCount                  12
     items_menu_onkey                204
     items_menu_ghook                416
     items_menu_iconhndl             348
     items_menu_desc                  48
     RefreshGroupsMenu                64
     CreateGroupsMenu                132
     ??DataTable1                      4
     ??DataTable7                      4
     ??DataTable8                      4
     ?<Initializer for hdr>           48
     ?<Initializer for sk>            24
     ?<Initializer for skt>            8
     ?<Constant "\356\341\355\356\342\350\362\374">
                                      12
     ?<Constant "\315\340\347\340\344">
                                       8
      Others                         184

 
 1 372 bytes in segment CODE
   103 bytes in segment DATA_C
    80 bytes in segment DATA_I
    80 bytes in segment DATA_ID
    12 bytes in segment INITTAB
 
 1 200 bytes of CODE  memory (+ 184 bytes shared)
   183 bytes of CONST memory
    80 bytes of DATA  memory

Errors: none
Warnings: none
