##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION    26/Feb/2023  22:40:08 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  D:\Users\alfinant\Documents\Siemens\Dev\IAR\VK.ELF_C #
#                       \Menu_Friends.c                                      #
#    Command line    =  D:\Users\alfinant\Documents\Siemens\Dev\IAR\VK.ELF_C #
#                       \Menu_Friends.c -D NEWSGOLD -D DEBUG -lCN            #
#                       D:\Users\alfinant\Documents\Siemens\Dev\IAR\VK.ELF_C #
#                       \Releas_NSG\List\ -la D:\Users\alfinant\Documents\Si #
#                       emens\Dev\IAR\VK.ELF_C\Releas_NSG\List\ -o           #
#                       D:\Users\alfinant\Documents\Siemens\Dev\IAR\VK.ELF_C #
#                       \Releas_NSG\Obj\ -s9 --cpu_mode arm --endian little  #
#                       --cpu ARM926EJ-S --stack_align 4 --interwork         #
#                       --diag_suppress Pe301 -e --fpu None --dlib_config    #
#                       D:\Users\alfinant\Documents\Siemens\IAR\ARM\LIB\dl5t #
#                       painl8n.h -I D:\Users\alfinant\Documents\Siemens\IAR #
#                       \ARM\INC\ --inline_threshold=2                       #
#    List file       =  D:\Users\alfinant\Documents\Siemens\Dev\IAR\VK.ELF_C #
#                       \Releas_NSG\List\Menu_Friends.lst                    #
#    Object file     =  D:\Users\alfinant\Documents\Siemens\Dev\IAR\VK.ELF_C #
#                       \Releas_NSG\Obj\Menu_Friends.r79                     #
#                                                                            #
#                                                                            #
##############################################################################

D:\Users\alfinant\Documents\Siemens\Dev\IAR\VK.ELF_C\Menu_Friends.c
      1          #include <siemens\swilib.h>
      2          #include "rect_patcher.h"
      3          #include "dyn_images.h"
      4          #include "dyn_theme.h"
      5          #include "socket_work.h"
      6          #include "http.h"
      7          #include "process.h"
      8          #include "vk_api.h"
      9          #include "main.h"
     10          #include "main.h"
     11          #include "anim_widget.h"
     12          
     13          static const char percent_t[]="%t";
     14          static const char percent_d[]="%d";
     15          static const char HEADER_TEXT[]="Друзья";
     16          
     17          extern int CreateDebugGUI();
     18          
     19          static HEADER_DESC hdr={0,0,0,0,NULL,NULL,LGP_NULL};
     20          static WSHDR* hdr_ws=NULL;
     21          
     22          static const int menusoftkeys[]={0,1,2};
     23          
     24          static SOFTKEY_DESC sk[]=
     25          {
     26            {0x0018,0x0000,(int)"Еще+50"},
     27            {0x0001,0x0000, (int)"Назад"},
     28            {0x003D,0x0000,(int)LGP_DOIT_PIC}
     29          };
     30          
     31          static SOFTKEYSTAB skt=
     32          {
     33            sk,0
     34          };
     35          
     36          static int items_menu_onkey(void *gui, GUI_MSG *msg)
     37          {
     38            CLIST* c;
     39            CLIST* c2;
     40            int i;
     41            
     42            if ((msg->gbsmsg->msg==KEY_DOWN)||(msg->gbsmsg->msg==LONG_PRESS))
     43            {
     44              switch(msg->gbsmsg->submess)
     45              {
     46              case UP_BUTTON:
     47                break;
     48                
     49              case ENTER_BUTTON:
     50                i=GetCurMenuItem(gui);
     51                c=FindContactByN(csm->friends_list, i);
     52                if (c2=FindContactById(csm->dialogs_list, c->user_id))
     53                  c=c2;
     54                CreateChat(c); 
     55                break;
     56              
     57              case GREEN_BUTTON:
     58          #ifdef DEVELOP      
     59                CreateDebugGUI();
     60          #endif
     61              break;
     62              
     63              case LEFT_SOFT:
     64                if (process==0)
     65                {
     66                  sock_keepalive=1;
     67                  process=LOAD_FRIENDS;
     68                  int count=CLIST_GetCount(csm->friends_list);
     69                  SUBPROC((void *)HttpSendReq, friends_get(50, count, "mobile", "photo_50"));
     70                  AnimWidget_Wait_headline();
     71                }
     72              break;
     73              
     74              case RIGHT_SOFT:
     75                csm->friends_menu_gui_id=NULL;
     76                return(1);//close
     77              }
     78            }
     79            return (0); 
     80          }
     81          
     82          static void items_menu_ghook(void *gui, int cmd)
     83          {
     84            if (cmd==TI_CMD_CREATE)
     85            { 
     86              void* hdr_pointer=GetHeaderPointer(gui);
     87              hdr_ws=AllocWS(128);
     88              wsprintf(hdr_ws, percent_t, HEADER_TEXT);
     89              SetHeaderText(hdr_pointer, hdr_ws, malloc_adr(), mfree_adr()); 
     90              
     91              //LoadDynTheme();
     92              //LoadDynImages();
     93              
     94              if (process==0 && csm->friends_list==NULL)
     95              {
     96                process=LOAD_FRIENDS;
     97                SUBPROC((void *)HttpSendReq, url_friends_get(50, 0, "mobile", "photo_50"),  1);
     98                if (csm->friends_list==NULL)
     99                  AnimWidget_Wait_body();
    100                else
    101                  AnimWidget_Wait_headline();
    102              }     
    103            }
    104               
    105            if (cmd==TI_CMD_UNFOCUS)
    106            {
    107              AnimWidget_Close();
    108              //DisableDynImages();
    109              DisableDynTheme();
    110            }
    111            
    112            if (cmd==TI_CMD_FOCUS)
    113            {
    114              if (GetMenuItemCount(gui)==0)
    115                AnimWidget_Wait_body();
    116              
    117              EnableDynImages();
    118              EnableDynTheme();  
    119              DisableIDLETMR();
    120            }  
    121            
    122            if (cmd==TI_CMD_REDRAW)
    123            {
    124              EnableDynImages();
    125            }
    126            
    127            if (cmd==TI_CMD_DESTROY)
    128            {
    129              csm->friends_menu_gui_id=NULL;
    130              /*csm->c=NULL;
    131              csm->cl=NULL;
    132              CLIST_Free(&csm->friends_clist); */
    133              DisableDynTheme();
    134              //DisableDynImages();
    135            }
    136          }
    137          
    138          static void items_menu_iconhndl(void *gui, int curitem, void *user_pointer)
    139          {
    140            struct list_head * pos;
    141            VkUser *c=NULL;
    142            
    143            pos = get_ListByIndex(&friends, curitem);
    144            c = list_entry(pos, VkUser, list);
    145            
    146            WSHDR *ws1=AllocMenuWS(gui,64);
    147            WSHDR *ws2=AllocMenuWS(gui,64);
    148            void* item=AllocMLMenuItem(gui);
    149            
    150            if (c)
    151            {
    152              wsAppendChar(ws1, UTF16_FONT_SMALL_BOLD);
    153              //wsAppendChar(ws1, 0x5D80);//RG
    154              //wsAppendChar(ws1, 0xA664);//BA - вк синий    
    155              if (user->first_name)
    156                wstrcat(ws1, c->first_name);
    157              else
    158                wstrcatprintf(ws1,percent_d, c->user_id);
    159              
    160              wsAppendChar(ws2, UTF16_FONT_SMALL_BOLD);
    161              //wsAppendChar(ws2, 0x5D80);//RG
    162              //wsAppendChar(ws2, 0xA664);//BA - вк синий 
    163              if (c->last_name)
    164                wstrcat(ws2, c->last_name);    
    165              
    166              //SetMenuItemIconArray(gui, item, &i1_pic); //первым рисуется картинка из SetMenuItemIconArray
    167              if (c->photo)
    168                SetMenuItemIconIMGHDR(gui, item, c->photo);
    169              else
    170              {
    171                IMGHDR* img;
    172                
    173                if (c->deactivated)
    174                  img=PNGLIST_GetImgByIndex(0);//deactivated.png
    175                else
    176                  img=PNGLIST_GetImgByIndex(1);//camera.png
    177                
    178                if (img)
    179                  SetMenuItemIconIMGHDR(gui, item, img);
    180                
    181                if (c->deactivated==0)
    182                  c->flag_load_photo=1;//надо загрузить
    183                
    184                if (process==0) 
    185                {
    186                  csm->list=&friends;
    187                  csm->user=csm->cl;
    188                  process=LOAD_USERS_PHOTO_FROM_INET;
    189                  ipc.name_to=ipc_my_name;
    190                  ipc.name_from=ipc_my_name;
    191                  ipc.data=0;
    192                  GBS_SendMessage(MMI_CEPID, MSG_IPC, IPC_RUN_MAIN_PROCESS, &ipc);        
    193                }           
    194              }
    195              
    196              SetMLMenuItemText(gui, item, ws1, ws2, curitem);
    197            }
    198          }
    199          
    200          static const ML_MENU_DESC items_menu_desc=
    201          {
    202            8,
    203            items_menu_onkey,
    204            items_menu_ghook,
    205            NULL,
    206            menusoftkeys,
    207            &skt,
    208            0x40010092, //0x40010092//0x80000083
    209            items_menu_iconhndl,
    210            NULL,   //Items
    211            NULL,   //Procs
    212            0,   //n
    213            1 //Добавочных строк  
    214          };
    215          
    216          //******************************************************************************
    217          void RecountFriendsMenu()
    218          {
    219            if (csm->friends_menu_gui_id)
    220            {
    221              GUI* gui=FindGUIbyId(csm->friends_menu_gui_id, NULL);
    222              Menu_SetItemCountDyn(gui, CLIST_GetCount(csm->friends_list));
    223          
    224            }
    225          }
    226          
    227          //******************************************************************************
    228          
    229          void CreateFriendsMenu()
    230          {
    231            void *ma=malloc_adr(); 
    232            void *mf= mfree_adr();
    233            void *gui=GetMultiLinesMenuGUI(ma, mf); 
    234            SetMenuToGUI(gui,&items_menu_desc); 
    235            SetMenuItemCount(gui, CLIST_GetCount(csm->friends_list));
    236            patch_header(&hdr);
    237            SetHeaderToMenu(gui,&hdr,ma); 
    238            csm->friends_menu_gui_id=CreateGUI(gui); 
    239          }
    240          
    241          

Errors: 26
Warnings: 10
