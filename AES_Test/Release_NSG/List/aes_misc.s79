//////////////////////////////////////////////////////////////////////////////
//                                                                           /
// IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION   02/Feb/2023  22:11:46 /
// Copyright 1999-2005 IAR Systems. All rights reserved.                     /
//                                                                           /
//    Cpu mode        =  interwork                                           /
//    Endian          =  little                                              /
//    Stack alignment =  4                                                   /
//    Source file     =  D:\Users\alfinant\Documents\Siemens\Dev\IAR\openssl /
//                       \crypto\aes\aes_misc.c                              /
//    Command line    =  D:\Users\alfinant\Documents\Siemens\Dev\IAR\openssl /
//                       \crypto\aes\aes_misc.c -D NEWSGOLD -lCN             /
//                       D:\Users\alfinant\Documents\Siemens\Dev\IAR\AES_Tes /
//                       t\Release_NSG\List\ -la D:\Users\alfinant\Documents /
//                       \Siemens\Dev\IAR\AES_Test\Release_NSG\List\ -o      /
//                       D:\Users\alfinant\Documents\Siemens\Dev\IAR\AES_Tes /
//                       t\Release_NSG\Obj\ -z9 --cpu_mode arm --endian      /
//                       little --cpu ARM926EJ-S --stack_align 4             /
//                       --interwork -e --fpu None --dlib_config             /
//                       D:\Users\alfinant\Documents\Siemens\IAR\ARM\LIB\dl5 /
//                       tpainl8n.h -I D:\Users\alfinant\Documents\Siemens\I /
//                       AR\ARM\INC\ --inline_threshold=2                    /
//    List file       =  D:\Users\alfinant\Documents\Siemens\Dev\IAR\AES_Tes /
//                       t\Release_NSG\List\aes_misc.s79                     /
//                                                                           /
//                                                                           /
//////////////////////////////////////////////////////////////////////////////

        NAME aes_misc

        RTMODEL "StackAlign4", "USED"
        RTMODEL "__cpu_mode", "__pcs__interwork"
        RTMODEL "__data_model", "absolute"
        RTMODEL "__dlib_file_descriptor", "0"
        RTMODEL "__endian", "little"
        RTMODEL "__rt_version", "6"

        RSEG CSTACK:DATA:NOROOT(2)

        PUBWEAK `?*?DATA_ID`
        MULTWEAK ??AES_options??rT
        PUBWEAK ?init?tab?DATA_I
        PUBLIC AES_options
        FUNCTION AES_options,0203H
        PUBLIC AES_version
        
        CFI Names cfiNames0
        CFI StackFrame CFA R13 HUGEDATA
        CFI Resource R0:32, R1:32, R2:32, R3:32, R4:32, R5:32, R6:32, R7:32
        CFI Resource R8:32, R9:32, R10:32, R11:32, R12:32, CPSR:32, R13:32
        CFI Resource R14:32, SPSR:32
        CFI VirtualResource ?RET:32
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 2
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon0
        
        
        CFI Common cfiCommon1 Using cfiNames0
        CFI CodeAlign 4
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon1
        
AES_options         SYMBOL "AES_options"
??AES_options??rT   SYMBOL "??rT", AES_options


        RSEG DATA_I:DATA:SORT:NOROOT(2)
AES_version:
        DS8 4
        REQUIRE `?<Initializer for AES_version>`

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock0 Using cfiCommon0
        CFI NoFunction
        THUMB
??AES_options??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock0
        REQUIRE AES_options

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock1 Using cfiCommon1
        CFI Function AES_options
        ARM
AES_options:
        LDR      R0,??AES_options_0  ;; `?<Constant "aes(partial)">`
        BX       LR               ;; return
        DATA
??AES_options_0:
        DC32     `?<Constant "aes(partial)">`
        CFI EndBlock cfiBlock1

        RSEG DATA_ID:CONST:SORT:NOROOT(2)
`?<Initializer for AES_version>`:
        DATA
        DC32 `?<Constant "AES part of OpenSSL 0...">`

        RSEG DATA_ID:CONST:SORT:NOROOT(2)
`?*?DATA_ID`:

        RSEG INITTAB:CODE:ROOT(2)
        DATA
?init?tab?DATA_I:
        DCD      sfe(DATA_I) - sfb(DATA_I), sfb(DATA_I), sfb(DATA_ID)

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant "AES part of OpenSSL 0...">`:
        DATA
        DC8 "AES part of OpenSSL 0.9.5a 1 Apr 2000"
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant "aes(partial)">`:
        DATA
        DC8 "aes(partial)"
        DC8 0, 0, 0

        END
// 
// 16 bytes in segment CODE
// 56 bytes in segment DATA_C
//  4 bytes in segment DATA_I
//  4 bytes in segment DATA_ID
// 12 bytes in segment INITTAB
// 
// 12 bytes of CODE  memory (+ 16 bytes shared)
// 60 bytes of CONST memory
//  4 bytes of DATA  memory
//
//Errors: none
//Warnings: none
