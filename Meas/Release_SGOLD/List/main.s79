//////////////////////////////////////////////////////////////////////////////
//                                                                           /
// IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION   26/Apr/2018  15:02:22 /
// Copyright 1999-2005 IAR Systems. All rights reserved.                     /
//                                                                           /
//    Cpu mode        =  interwork                                           /
//    Endian          =  little                                              /
//    Stack alignment =  4                                                   /
//    Source file     =  E:\Users\alfinant\Documents\Siemens\alfinant\Meas\m /
//                       ain.c                                               /
//    Command line    =  E:\Users\alfinant\Documents\Siemens\alfinant\Meas\m /
//                       ain.c -D SGOLD -lCN E:\Users\alfinant\Documents\Sie /
//                       mens\alfinant\Meas\Release_SGOLD\List\ -la          /
//                       E:\Users\alfinant\Documents\Siemens\alfinant\Meas\R /
//                       elease_SGOLD\List\ -o E:\Users\alfinant\Documents\S /
//                       iemens\alfinant\Meas\Release_SGOLD\Obj\ -z9         /
//                       --cpu_mode arm --endian little --cpu ARM926EJ-S     /
//                       --stack_align 4 --interwork -e --fpu None           /
//                       --dlib_config E:\Users\alfinant\Documents\Siemens\I /
//                       AR\ARM\LIB\dl5tpainl8n.h -I                         /
//                       E:\Users\alfinant\Documents\Siemens\IAR\ARM\INC\    /
//                       --inline_threshold=2                                /
//    List file       =  E:\Users\alfinant\Documents\Siemens\alfinant\Meas\R /
//                       elease_SGOLD\List\main.s79                          /
//                                                                           /
//                                                                           /
//////////////////////////////////////////////////////////////////////////////

        NAME main

        RTMODEL "StackAlign4", "USED"
        RTMODEL "__cpu_mode", "__pcs__interwork"
        RTMODEL "__data_model", "absolute"
        RTMODEL "__endian", "little"
        RTMODEL "__rt_version", "6"

        RSEG CSTACK:DATA:NOROOT(2)

        PUBWEAK `?*?DATA_ID`
??DataTable0 EQU 0
??DataTable2 EQU 0
        MULTWEAK ??ElfKiller??rT
        MULTWEAK ??MEAS_Delete??rA
        MULTWEAK ??MEAS_Init??rA
        MULTWEAK ??MEAS_Start??rA
        MULTWEAK ??ShowRes??rT
        MULTWEAK ??kill_data??rA
        MULTWEAK ??main??rT
        MULTWEAK ??meas_callback??rT
        PUBWEAK ?init?tab?DATA_I
        PUBLIC AOffset
        PUBLIC ElfKiller
        FUNCTION ElfKiller,0603H
        LOCFRAME CSTACK, 4, STACK
        PUBLIC ShowRes
        FUNCTION ShowRes,0601H
        LOCFRAME CSTACK, 132, STACK
        PUBLIC VMAX
        PUBLIC VREF
        PUBLIC main
        FUNCTION main,0a03H
        LOCFRAME CSTACK, 4, STACK
        PUBLIC meas_callback
        FUNCTION meas_callback,0601H
        LOCFRAME CSTACK, 12, STACK
        PUBLIC voltage
        
        CFI Names cfiNames0
        CFI StackFrame CFA R13 HUGEDATA
        CFI Resource R0:32, R1:32, R2:32, R3:32, R4:32, R5:32, R6:32, R7:32
        CFI Resource R8:32, R9:32, R10:32, R11:32, R12:32, CPSR:32, R13:32
        CFI Resource R14:32, SPSR:32
        CFI VirtualResource ?RET:32
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 2
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon0
        
        
        CFI Common cfiCommon1 Using cfiNames0
        CFI CodeAlign 4
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon1
        
MEAS_Delete         SYMBOL "MEAS_Delete"
MEAS_Init           SYMBOL "MEAS_Init"
MEAS_Start          SYMBOL "MEAS_Start"
kill_data           SYMBOL "kill_data"
ElfKiller           SYMBOL "ElfKiller"
??ElfKiller??rT     SYMBOL "??rT", ElfKiller
??MEAS_Delete??rA   SYMBOL "??rA", MEAS_Delete
??MEAS_Init??rA     SYMBOL "??rA", MEAS_Init
??MEAS_Start??rA    SYMBOL "??rA", MEAS_Start
ShowRes             SYMBOL "ShowRes"
??ShowRes??rT       SYMBOL "??rT", ShowRes
??kill_data??rA     SYMBOL "??rA", kill_data
main                SYMBOL "main"
??main??rT          SYMBOL "??rT", main
meas_callback       SYMBOL "meas_callback"
??meas_callback??rT SYMBOL "??rT", meas_callback

        EXTERN ELF_BEGIN
        EXTERN MEAS_Delete
        FUNCTION MEAS_Delete,0200H
        EXTERN MEAS_Init
        FUNCTION MEAS_Init,0202H
        EXTERN MEAS_Start
        FUNCTION MEAS_Start,0200H
        EXTERN adata
        EXTERN kill_data
        FUNCTION kill_data,0202H


        RSEG DATA_I:DATA:SORT:NOROOT(2)
VREF:
        DS8 4
        REQUIRE `?<Initializer for VREF>`
VMAX:
        DS8 4
        REQUIRE `?<Initializer for VMAX>`
voltage:
        DS8 4
        REQUIRE `?<Initializer for voltage>`

        RSEG DATA_I:DATA:SORT:NOROOT(2)
AOffset:
        DS8 4
        REQUIRE `?<Initializer for AOffset>`

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock0 Using cfiCommon0
        CFI NoFunction
        THUMB
??ElfKiller??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock0
        REQUIRE ElfKiller

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock1 Using cfiCommon1
        CFI Function ElfKiller
        ARM
ElfKiller:
        PUSH     {LR}
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+4
        SWI      +32789
        MOV      R1,R0
        LDR      R0,??ElfKiller_0  ;; ELF_BEGIN
        POP      {LR}             ;; Pop
        CFI ?RET R14
        CFI CFA R13+0
        _BF      kill_data,??kill_data??rA  ;; tailcall
        DATA
??ElfKiller_0:
        DC32     ELF_BEGIN
        CFI EndBlock cfiBlock1

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock2 Using cfiCommon0
        CFI NoFunction
        THUMB
??ShowRes??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock2
        REQUIRE ShowRes

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock3 Using cfiCommon1
        CFI Function ShowRes
        ARM
ShowRes:
        LDR      R0,??ShowRes_0   ;; VREF + 8
        LDR      R1,??ShowRes_0+0x4  ;; `?<Constant "Analog Data: 0x%X\\nVol...">`
        PUSH     {LR}
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+4
        SUB      SP,SP,#+128
        CFI CFA R13+132
        LDR      R3,[R0, #+0]
        LDR      R0,??DataTable1  ;; adata
        LDR      R2,[R0, #+0]
        MOV      R0,SP
        SWI      +22
        MOV      R1,SP
        MOV      R0,#+1
        SWI      +328
        ADD      SP,SP,#+128
        CFI CFA R13+4
        POP      {PC}             ;; return
        DATA
??ShowRes_0:
        DC32     VREF + 8
        DC32     `?<Constant "Analog Data: 0x%X\\nVol...">`
        CFI EndBlock cfiBlock3

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock4 Using cfiCommon0
        CFI NoFunction
        THUMB
??meas_callback??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock4
        REQUIRE meas_callback

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock5 Using cfiCommon1
        CFI Function meas_callback
        ARM
meas_callback:
        LDR      R1,??DataTable1  ;; adata
        PUSH     {R4,R5,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R5 Frame(CFA, -8)
        CFI R4 Frame(CFA, -12)
        CFI CFA R13+12
        LDR      R1,[R1, #+0]
        LDR      R4,??meas_callback_0  ;; VREF
        MVN      R2,#+255
        LDR      R0,[R4, #+0]
        BIC      R2,R2,#0x700
        ADD      R2,R2,R1
        MUL      R1,R2,R0
        MOV      R0,#+255
        ORR      R0,R0,#0x700
        SWI      +188
        MOV      R5,R0
        LDR      R0,[R4, #+4]
        MOV      R2,#+1000
        MUL      R1,R2,R0
        LDR      R0,[R4, #+0]
        SWI      +188
        MUL      R1,R0,R5
        MOV      R0,#+1000
        SWI      +188
        CMP      R0,#+0
        MOVMI    R0,#+0
        STR      R0,[R4, #+8]
        LDR      R0,??meas_callback_0+0x4  ;; ShowRes
        SWI      +369
        _BLF     MEAS_Delete,??MEAS_Delete??rA
        LDR      R0,??DataTable3  ;; ElfKiller
        SWI      +369
        POP      {R4,R5,PC}       ;; return
        DATA
??meas_callback_0:
        DC32     VREF
        DC32     ShowRes
        CFI EndBlock cfiBlock5

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable1:
        DC32     adata

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock6 Using cfiCommon0
        CFI NoFunction
        THUMB
??main??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock6
        REQUIRE main

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock7 Using cfiCommon1
        CFI Function main
        ARM
main:
        LDR      R0,??main_0      ;; meas_callback
        PUSH     {LR}
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+4
        _BLF     MEAS_Init,??MEAS_Init??rA
        CMP      R0,#+0
        BEQ      ??main_1
        _BLF     MEAS_Start,??MEAS_Start??rA
        B        ??main_2
??main_1:
        LDR      R1,??main_0+0x4  ;; `?<Constant "Sorry, HISR not creat...">`
        MOV      R0,#+1
        SWI      +328
        LDR      R0,??DataTable3  ;; ElfKiller
        SWI      +369
??main_2:
        MOV      R0,#+0
        POP      {PC}             ;; return
        DATA
??main_0:
        DC32     meas_callback
        DC32     `?<Constant "Sorry, HISR not creat...">`
        CFI EndBlock cfiBlock7

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable3:
        DC32     ElfKiller

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock8 Using cfiCommon1
        CFI NoFunction
        ARM
??kill_data??rA:
        LDR      R12,??Subroutine4_0  ;; kill_data
        BX       R12
        DATA
??Subroutine4_0:
        DC32     kill_data
        CFI EndBlock cfiBlock8

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock9 Using cfiCommon1
        CFI NoFunction
        ARM
??MEAS_Delete??rA:
        LDR      R12,??Subroutine5_0  ;; MEAS_Delete
        BX       R12
        DATA
??Subroutine5_0:
        DC32     MEAS_Delete
        CFI EndBlock cfiBlock9

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock10 Using cfiCommon1
        CFI NoFunction
        ARM
??MEAS_Init??rA:
        LDR      R12,??Subroutine6_0  ;; MEAS_Init
        BX       R12
        DATA
??Subroutine6_0:
        DC32     MEAS_Init
        CFI EndBlock cfiBlock10

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock11 Using cfiCommon1
        CFI NoFunction
        ARM
??MEAS_Start??rA:
        LDR      R12,??Subroutine7_0  ;; MEAS_Start
        BX       R12
        DATA
??Subroutine7_0:
        DC32     MEAS_Start
        CFI EndBlock cfiBlock11

        RSEG DATA_ID:CONST:SORT:NOROOT(2)
`?<Initializer for VREF>`:
        DATA
        DC32 1960
`?<Initializer for VMAX>`:
        DC32 15220
`?<Initializer for voltage>`:
        DC32 0

        RSEG DATA_ID:CONST:SORT:NOROOT(2)
`?<Initializer for AOffset>`:
        DATA
        DC32 -2

        RSEG DATA_ID:CONST:SORT:NOROOT(2)
`?*?DATA_ID`:

        RSEG INITTAB:CODE:ROOT(2)
        DATA
?init?tab?DATA_I:
        DCD      sfe(DATA_I) - sfb(DATA_I), sfb(DATA_I), sfb(DATA_ID)

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant "Analog Data: 0x%X\\nVol...">`:
        DATA
        DC8 "Analog Data: 0x%X\012Voltage: %dmV"

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant "Sorry, HISR not creat...">`:
        DATA
        DC8 "Sorry, HISR not created:("
        DC8 0, 0

        END
// 
// 356 bytes in segment CODE
//  60 bytes in segment DATA_C
//  16 bytes in segment DATA_I
//  16 bytes in segment DATA_ID
//  12 bytes in segment INITTAB
// 
// 292 bytes of CODE  memory (+ 76 bytes shared)
//  76 bytes of CONST memory
//  16 bytes of DATA  memory
//
//Errors: none
//Warnings: 4
