//////////////////////////////////////////////////////////////////////////////
//                                                                           /
// IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION   26/Apr/2018  15:02:22 /
// Copyright 1999-2005 IAR Systems. All rights reserved.                     /
//                                                                           /
//    Cpu mode        =  interwork                                           /
//    Endian          =  little                                              /
//    Stack alignment =  4                                                   /
//    Source file     =  E:\Users\alfinant\Documents\Siemens\alfinant\Meas\m /
//                       eas.c                                               /
//    Command line    =  E:\Users\alfinant\Documents\Siemens\alfinant\Meas\m /
//                       eas.c -D SGOLD -lCN E:\Users\alfinant\Documents\Sie /
//                       mens\alfinant\Meas\Release_SGOLD\List\ -la          /
//                       E:\Users\alfinant\Documents\Siemens\alfinant\Meas\R /
//                       elease_SGOLD\List\ -o E:\Users\alfinant\Documents\S /
//                       iemens\alfinant\Meas\Release_SGOLD\Obj\ -z9         /
//                       --cpu_mode arm --endian little --cpu ARM926EJ-S     /
//                       --stack_align 4 --interwork -e --fpu None           /
//                       --dlib_config E:\Users\alfinant\Documents\Siemens\I /
//                       AR\ARM\LIB\dl5tpainl8n.h -I                         /
//                       E:\Users\alfinant\Documents\Siemens\IAR\ARM\INC\    /
//                       --inline_threshold=2                                /
//    List file       =  E:\Users\alfinant\Documents\Siemens\alfinant\Meas\R /
//                       elease_SGOLD\List\meas.s79                          /
//                                                                           /
//                                                                           /
//////////////////////////////////////////////////////////////////////////////

        NAME meas

        RTMODEL "StackAlign4", "USED"
        RTMODEL "__cpu_mode", "__pcs__interwork"
        RTMODEL "__data_model", "absolute"
        RTMODEL "__endian", "little"
        RTMODEL "__rt_version", "6"

        RSEG CSTACK:DATA:NOROOT(2)

??DataTable0 EQU 0
??DataTable1 EQU 0
        MULTWEAK ??MEAS_Delete??rT
        MULTWEAK ??MEAS_Init??rT
        MULTWEAK ??MEAS_Start??rT
        MULTWEAK ??irq_req??rA
        MULTWEAK ??irq_set_prio??rA
        PUBWEAK ?init?tab?DATA_Z
        PUBWEAK GPIO
        FUNCTION H_MEAS_RDY_M2_entry,0601H
        LOCFRAME CSTACK, 8, STACK
        PUBWEAK MEAS
        PUBLIC MEAS_Delete
        FUNCTION MEAS_Delete,0201H
        LOCFRAME CSTACK, 4, STACK
        PUBLIC MEAS_Init
        FUNCTION MEAS_Init,0203H
        LOCFRAME CSTACK, 20, STACK
        PUBLIC MEAS_Start
        FUNCTION MEAS_Start,0201H
        LOCFRAME CSTACK, 4, STACK
        PUBLIC adata
        PUBLIC adata0
        PUBLIC adata1
        PUBLIC adata2
        PUBLIC adata3
        PUBLIC adata4
        PUBLIC adata5
        PUBLIC adata6
        PUBLIC hisr
        PUBLIC hisr_stack
        PUBLIC irq_desc
        FUNCTION meas_rdyirq,0603H
        LOCFRAME CSTACK, 8, STACK
        PUBLIC saved_meas_ctrl2
        
        CFI Names cfiNames0
        CFI StackFrame CFA R13 HUGEDATA
        CFI Resource R0:32, R1:32, R2:32, R3:32, R4:32, R5:32, R6:32, R7:32
        CFI Resource R8:32, R9:32, R10:32, R11:32, R12:32, CPSR:32, R13:32
        CFI Resource R14:32, SPSR:32
        CFI VirtualResource ?RET:32
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 2
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon0
        
        
        CFI Common cfiCommon1 Using cfiNames0
        CFI CodeAlign 4
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon1
        
irq_req             SYMBOL "irq_req"
irq_set_prio        SYMBOL "irq_set_prio"
MEAS_Delete         SYMBOL "MEAS_Delete"
??MEAS_Delete??rT   SYMBOL "??rT", MEAS_Delete
MEAS_Init           SYMBOL "MEAS_Init"
??MEAS_Init??rT     SYMBOL "??rT", MEAS_Init
MEAS_Start          SYMBOL "MEAS_Start"
??MEAS_Start??rT    SYMBOL "??rT", MEAS_Start
??irq_req??rA       SYMBOL "??rA", irq_req
??irq_set_prio??rA  SYMBOL "??rA", irq_set_prio

        EXTERN irq_req
        FUNCTION irq_req,0202H
        EXTERN irq_set_prio
        FUNCTION irq_set_prio,0202H


        ASEGN DATA_AN:DATA:NOROOT,0f4c00000H
// MEAS_TypeDef __data MEAS
MEAS:
        DS8 248

        ASEGN DATA_AN:DATA:NOROOT,0f4300000H
// GPIO_TypeDef __data GPIO
GPIO:
        DS8 212

        RSEG DATA_Z:DATA:SORT:NOROOT(2)
adata:
        DS8 4
adata0:
        DS8 4
adata1:
        DS8 4
adata2:
        DS8 4
adata3:
        DS8 4
adata4:
        DS8 4
adata5:
        DS8 4
adata6:
        DS8 4
        DS8 4
saved_meas_ctrl2:
        DS8 4
hisr:
        DS8 400
hisr_stack:
        DS8 2048
irq_desc:
        DS8 8

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock0 Using cfiCommon0
        CFI NoFunction
        THUMB
??meas_rdyirq??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock0
        REQUIRE meas_rdyirq

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock1 Using cfiCommon1
        CFI Function meas_rdyirq
        ARM
meas_rdyirq:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        MOV      R0,#-1073741824
        ORR      R0,R0,#0x34C00000
        MOV      R1,#+16384
        STR      R1,[R0, #+240]
        LDR      R1,[R0, #+28]
        TST      R1,#0x80000000
        POPEQ    {R4,PC}
        LDR      R4,??DataTable2  ;; adata
        MOV      R1,#+0
        STR      R1,[R0, #+240]
        LDR      R1,[R0, #+24]
        BIC      R1,R1,#0x10000000
        STR      R1,[R0, #+24]
        LDR      R1,[R0, #+32]
        STR      R1,[R4, #+4]
        LDR      R1,[R0, #+36]
        STR      R1,[R4, #+8]
        LDR      R1,[R0, #+40]
        STR      R1,[R4, #+12]
        LDR      R1,[R0, #+44]
        STR      R1,[R4, #+16]
        LDR      R1,[R0, #+48]
        STR      R1,[R4, #+20]
        LDR      R1,[R0, #+52]
        STR      R1,[R4, #+24]
        LDR      R1,[R0, #+56]
        STR      R1,[R4, #+28]
        LDR      R1,[R4, #+36]
        STR      R1,[R0, #+24]
        MOV      R1,#+8
        MOV      R0,#+114
        _BLF     irq_set_prio,??irq_set_prio??rA
        MOV      R0,#-268435456
        ORR      R0,R0,#0x4300000
        LDR      R1,[R0, #+208]
        BIC      R1,R1,#0x8000
        STR      R1,[R0, #+208]
        ADD      R0,R4,#+40
        SWI      +851
        POP      {R4,PC}          ;; return
        CFI EndBlock cfiBlock1

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock2 Using cfiCommon0
        CFI NoFunction
        THUMB
??H_MEAS_RDY_M2_entry??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock2
        REQUIRE H_MEAS_RDY_M2_entry

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock3 Using cfiCommon1
        CFI Function H_MEAS_RDY_M2_entry
        ARM
H_MEAS_RDY_M2_entry:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        LDR      R4,??H_MEAS_RDY_M2_entry_0  ;; adata
        LDR      R0,[R4, #+4]
        LDR      R1,[R4, #+8]
        ADD      R0,R1,R0
        LDR      R1,[R4, #+12]
        ADD      R0,R1,R0
        LDR      R1,[R4, #+16]
        ADD      R0,R1,R0
        LDR      R1,[R4, #+20]
        ADD      R0,R1,R0
        LDR      R1,[R4, #+24]
        ADD      R0,R1,R0
        LDR      R1,[R4, #+28]
        ADD      R1,R1,R0
        MOV      R0,#+7
        SWI      +188
        STR      R0,[R4, #+0]
        LDR      R0,[R4, #+32]
        CMP      R0,#+0
        POPEQ    {R4,PC}
        BLX      R0
        POP      {R4,PC}          ;; return
        DATA
??H_MEAS_RDY_M2_entry_0:
        DC32     adata
        CFI EndBlock cfiBlock3

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock4 Using cfiCommon0
        CFI NoFunction
        THUMB
??MEAS_Init??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock4
        REQUIRE MEAS_Init

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock5 Using cfiCommon1
        CFI Function MEAS_Init
        ARM
MEAS_Init:
        LDR      R2,??MEAS_Init_0  ;; H_MEAS_RDY_M2_entry
        LDR      R1,??MEAS_Init_0+0x4  ;; `?<Constant "H_MEAS_RDY_M2">`
        PUSH     {R4,R5,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R5 Frame(CFA, -8)
        CFI R4 Frame(CFA, -12)
        CFI CFA R13+12
        LDR      R5,??DataTable2  ;; adata
        MOV      R4,R0
        MOV      R0,#+512
        PUSH     {R0}
        CFI CFA R13+16
        MOV      R3,#+0
        ADD      R0,R5,#+440
        PUSH     {R0}
        CFI CFA R13+20
        ADD      R0,R5,#+40
        SWI      +852
        CMP      R0,#+0
        ADD      SP,SP,#+8
        CFI CFA R13+12
        BNE      ??MEAS_Init_1
        STR      R4,[R5, #+32]
        LDR      R3,??MEAS_Init_0+0x8  ;; meas_rdyirq
        MOV      R0,#+184
        ORR      R0,R0,#0x900
        ADD      R0,R0,R5
        PUSH     {R0}
        CFI CFA R13+16
        MOV      R2,#+8
        MOV      R1,#+3
        MOV      R0,#+70
        _BLF     irq_req,??irq_req??rA
        MOV      R0,#+1
        ADD      SP,SP,#+4
        CFI CFA R13+12
        POP      {R4,R5,PC}
??MEAS_Init_1:
        MOV      R0,#+0
        POP      {R4,R5,PC}       ;; return
        DATA
??MEAS_Init_0:
        DC32     H_MEAS_RDY_M2_entry
        DC32     `?<Constant "H_MEAS_RDY_M2">`
        DC32     meas_rdyirq
        CFI EndBlock cfiBlock5

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock6 Using cfiCommon0
        CFI NoFunction
        THUMB
??MEAS_Delete??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock6
        REQUIRE MEAS_Delete

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock7 Using cfiCommon1
        CFI Function MEAS_Delete
        ARM
MEAS_Delete:
        LDR      R0,??DataTable2  ;; adata
        PUSH     {LR}
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+4
        MOV      R1,#+0
        STR      R1,[R0, #+32]
        ADD      R0,R0,#+40
        SWI      +853
        POP      {PC}             ;; return
        CFI EndBlock cfiBlock7

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable2:
        DC32     adata

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock8 Using cfiCommon0
        CFI NoFunction
        THUMB
??MEAS_Start??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock8
        REQUIRE MEAS_Start

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock9 Using cfiCommon1
        CFI Function MEAS_Start
        ARM
MEAS_Start:
        PUSH     {LR}
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+4
        MOV      R0,#-268435456
        ORR      R0,R0,#0x4300000
        LDR      R1,[R0, #+208]
        ORR      R1,R1,#0x8000
        STR      R1,[R0, #+208]
        MOV      R1,#+0
        MOV      R0,#+114
        _BLF     irq_set_prio,??irq_set_prio??rA
        MOV      R0,#-1073741824
        ORR      R0,R0,#0x34C00000
        LDR      R1,[R0, #+0]
        BIC      R1,R1,#0x1
        STR      R1,[R0, #+0]
        LDR      R1,[R0, #+0]
        AND      R1,R1,#0x114
        STR      R1,[R0, #+0]
        LDR      R1,??MEAS_Start_0  ;; adata + 36
        LDR      R2,[R0, #+24]
        STR      R2,[R1, #+0]
        LDR      R1,[R0, #+24]
        BIC      R1,R1,#0x10000000
        STR      R1,[R0, #+24]
        MOV      R1,#+16384
        STR      R1,[R0, #+240]
        MOV      R1,#+4096
        STR      R1,[R0, #+240]
        MOV      R1,#+805306371
        ORR      R1,R1,#0x300000
        STR      R1,[R0, #+24]
        POP      {PC}             ;; return
        DATA
??MEAS_Start_0:
        DC32     adata + 36
        CFI EndBlock cfiBlock9

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock10 Using cfiCommon1
        CFI NoFunction
        ARM
??irq_set_prio??rA:
        LDR      R12,??Subroutine5_0  ;; irq_set_prio
        BX       R12
        DATA
??Subroutine5_0:
        DC32     irq_set_prio
        CFI EndBlock cfiBlock10

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock11 Using cfiCommon1
        CFI NoFunction
        ARM
??irq_req??rA:
        LDR      R12,??Subroutine6_0  ;; irq_req
        BX       R12
        DATA
??Subroutine6_0:
        DC32     irq_req
        CFI EndBlock cfiBlock11

        RSEG INITTAB:CODE:ROOT(2)
        DATA
?init?tab?DATA_Z:
        DCD      sfe(DATA_Z) - sfb(DATA_Z), sfb(DATA_Z), sfb(DATA_Z)

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant "H_MEAS_RDY_M2">`:
        DATA
        DC8 "H_MEAS_RDY_M2"
        DC8 0, 0

        END
// 
//   596 bytes in segment CODE
//   460 bytes in segment DATA_AN
//    16 bytes in segment DATA_C
// 2 496 bytes in segment DATA_Z
//    12 bytes in segment INITTAB
// 
//   552 bytes of CODE  memory (+  56 bytes shared)
//    16 bytes of CONST memory
// 2 496 bytes of DATA  memory (+ 460 bytes shared)
//
//Errors: none
//Warnings: 4
