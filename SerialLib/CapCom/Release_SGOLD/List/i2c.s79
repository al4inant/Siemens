//////////////////////////////////////////////////////////////////////////////
//                                                                           /
// IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION   07/Feb/2014  21:59:07 /
// Copyright 1999-2005 IAR Systems. All rights reserved.                     /
//                                                                           /
//    Cpu mode        =  interwork                                           /
//    Endian          =  little                                              /
//    Stack alignment =  4                                                   /
//    Source file     =  C:\Users\alfin_000\Documents\Siemens\IAR\ARM\INC\si /
//                       emens\i2c.c                                         /
//    Command line    =  C:\Users\alfin_000\Documents\Siemens\IAR\ARM\INC\si /
//                       emens\i2c.c -D SGOLD -lCN                           /
//                       C:\Users\alfin_000\Documents\Siemens\IAR\ARM\SeriaL /
//                       ib\CapCom\Release_SGOLD\List\ -la                   /
//                       C:\Users\alfin_000\Documents\Siemens\IAR\ARM\SeriaL /
//                       ib\CapCom\Release_SGOLD\List\ -o                    /
//                       C:\Users\alfin_000\Documents\Siemens\IAR\ARM\SeriaL /
//                       ib\CapCom\Release_SGOLD\Obj\ -z9 --cpu_mode arm     /
//                       --endian little --cpu ARM926EJ-S --stack_align 4    /
//                       --interwork -e --fpu None --dlib_config             /
//                       C:\Users\alfin_000\Documents\Siemens\IAR\ARM\LIB\dl /
//                       5tpainl8n.h -I C:\Users\alfin_000\Documents\Siemens /
//                       \IAR\ARM\INC\ --inline_threshold=2                  /
//    List file       =  C:\Users\alfin_000\Documents\Siemens\IAR\ARM\SeriaL /
//                       ib\CapCom\Release_SGOLD\List\i2c.s79                /
//                                                                           /
//                                                                           /
//////////////////////////////////////////////////////////////////////////////

        NAME i2c

        RTMODEL "StackAlign4", "USED"
        RTMODEL "__cpu_mode", "__pcs__interwork"
        RTMODEL "__data_model", "absolute"
        RTMODEL "__endian", "little"
        RTMODEL "__rt_version", "6"

        RSEG CSTACK:DATA:NOROOT(2)

        MULTWEAK ??i2cw_pmu??rT
        PUBWEAK ?init?tab?DATA_Z
        PUBLIC `data`
        PUBLIC i2cw_pmu
        FUNCTION i2cw_pmu,0203H
        LOCFRAME CSTACK, 12, STACK
        PUBLIC msg
        
        CFI Names cfiNames0
        CFI StackFrame CFA R13 HUGEDATA
        CFI Resource R0:32, R1:32, R2:32, R3:32, R4:32, R5:32, R6:32, R7:32
        CFI Resource R8:32, R9:32, R10:32, R11:32, R12:32, CPSR:32, R13:32
        CFI Resource R14:32, SPSR:32
        CFI VirtualResource ?RET:32
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 2
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon0
        
        
        CFI Common cfiCommon1 Using cfiNames0
        CFI CodeAlign 4
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon1
        
i2cw_pmu            SYMBOL "i2cw_pmu"
??i2cw_pmu??rT      SYMBOL "??rT", i2cw_pmu


        RSEG DATA_Z:DATA:SORT:NOROOT(2)
msg:
        DS8 20
`data`:
        DS8 1

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock0 Using cfiCommon0
        CFI NoFunction
        THUMB
??i2cw_pmu??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock0
        REQUIRE i2cw_pmu

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock1 Using cfiCommon1
        CFI Function i2cw_pmu
        ARM
i2cw_pmu:
        PUSH     {R4,R5,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R5 Frame(CFA, -8)
        CFI R4 Frame(CFA, -12)
        CFI CFA R13+12
        LDR      R5,??i2cw_pmu_0  ;; msg
        MOV      R4,R0
        STRB     R1,[R5, #+20]
        MOV      R1,#+20
        MOV      R0,R5
        SWI      +88
        MOV      R0,#+49
        STRB     R0,[R5, #+0]
        STRH     R4,[R5, #+2]
        ADD      R0,R5,#+20
        STR      R0,[R5, #+12]
        MOV      R0,#+1
        STR      R0,[R5, #+16]
        MOV      R0,R5
        SWI      +748
        POP      {R4,R5,PC}       ;; return
        DATA
??i2cw_pmu_0:
        DC32     msg
        CFI EndBlock cfiBlock1

        RSEG INITTAB:CODE:ROOT(2)
        DATA
?init?tab?DATA_Z:
        DCD      sfe(DATA_Z) - sfb(DATA_Z), sfb(DATA_Z), sfb(DATA_Z)

        END
// 
// 76 bytes in segment CODE
// 21 bytes in segment DATA_Z
// 12 bytes in segment INITTAB
// 
// 72 bytes of CODE memory (+ 16 bytes shared)
// 21 bytes of DATA memory
//
//Errors: none
//Warnings: none
